{"version":3,"file":"bundle.js","sources":["../../node_modules/svelte/src/internal/disclose-version.js","../../node_modules/svelte/src/version.js","../../node_modules/svelte/src/internal/flags/index.js","../../node_modules/svelte/src/constants.js","../../node_modules/esm-env/dev-fallback.js","../../node_modules/svelte/src/internal/shared/utils.js","../../node_modules/svelte/src/internal/client/constants.js","../../node_modules/svelte/src/internal/client/errors.js","../../node_modules/svelte/src/internal/client/proxy.js","../../node_modules/svelte/src/internal/client/dom/operations.js","../../node_modules/svelte/src/internal/client/reactivity/equality.js","../../node_modules/svelte/src/internal/client/reactivity/deriveds.js","../../node_modules/svelte/src/internal/client/reactivity/effects.js","../../node_modules/svelte/src/internal/client/dom/task.js","../../node_modules/svelte/src/internal/client/runtime.js","../../node_modules/svelte/src/internal/client/reactivity/sources.js","../../node_modules/svelte/src/internal/client/context.js","../../node_modules/svelte/src/internal/client/dom/elements/misc.js","../../node_modules/svelte/src/internal/client/dom/elements/bindings/shared.js","../../node_modules/svelte/src/internal/client/dom/elements/events.js","../../node_modules/svelte/src/internal/client/dom/template.js","../../node_modules/svelte/src/internal/client/dom/reconciler.js","../../node_modules/svelte/src/internal/client/render.js","../../node_modules/svelte/src/internal/client/dom/blocks/if.js","../../node_modules/svelte/src/internal/client/dom/blocks/each.js","../../node_modules/svelte/src/internal/client/dom/hydration.js","../../node_modules/svelte/src/internal/shared/attributes.js","../../node_modules/svelte/src/internal/client/dom/elements/class.js","../../node_modules/svelte/src/internal/client/dom/elements/attributes.js","../../node_modules/svelte/src/internal/client/dom/elements/bindings/input.js","../../node_modules/svelte/src/internal/client/dom/legacy/lifecycle.js","../../node_modules/svelte/src/index-client.js","../../node_modules/svelte/src/internal/client/reactivity/store.js","../../node_modules/svelte/src/internal/client/reactivity/props.js","../../src/components/LogoModal.svelte","../../node_modules/svelte/src/index-server.js","../../node_modules/svelte/src/internal/server/context.js","../../src/main.js","../../src/App.svelte","../../src/components/LogoGrid.svelte","../../src/components/LogoList.svelte"],"sourcesContent":["import { PUBLIC_VERSION } from '../version.js';\n\nif (typeof window !== 'undefined') {\n\t// @ts-expect-error\n\t((window.__svelte ??= {}).v ??= new Set()).add(PUBLIC_VERSION);\n}\n","// generated during release, do not modify\n\n/**\n * The current version, as set in package.json.\n * @type {string}\n */\nexport const VERSION = '5.28.2';\nexport const PUBLIC_VERSION = '5';\n","export let legacy_mode_flag = false;\nexport let tracing_mode_flag = false;\n\nexport function enable_legacy_mode_flag() {\n\tlegacy_mode_flag = true;\n}\n\nexport function enable_tracing_mode_flag() {\n\ttracing_mode_flag = true;\n}\n","export const EACH_ITEM_REACTIVE = 1;\nexport const EACH_INDEX_REACTIVE = 1 << 1;\n/** See EachBlock interface metadata.is_controlled for an explanation what this is */\nexport const EACH_IS_CONTROLLED = 1 << 2;\nexport const EACH_IS_ANIMATED = 1 << 3;\nexport const EACH_ITEM_IMMUTABLE = 1 << 4;\n\nexport const PROPS_IS_IMMUTABLE = 1;\nexport const PROPS_IS_RUNES = 1 << 1;\nexport const PROPS_IS_UPDATED = 1 << 2;\nexport const PROPS_IS_BINDABLE = 1 << 3;\nexport const PROPS_IS_LAZY_INITIAL = 1 << 4;\n\nexport const TRANSITION_IN = 1;\nexport const TRANSITION_OUT = 1 << 1;\nexport const TRANSITION_GLOBAL = 1 << 2;\n\nexport const TEMPLATE_FRAGMENT = 1;\nexport const TEMPLATE_USE_IMPORT_NODE = 1 << 1;\n\nexport const HYDRATION_START = '[';\n/** used to indicate that an `{:else}...` block was rendered */\nexport const HYDRATION_START_ELSE = '[!';\nexport const HYDRATION_END = ']';\nexport const HYDRATION_ERROR = {};\n\nexport const ELEMENT_IS_NAMESPACED = 1;\nexport const ELEMENT_PRESERVE_ATTRIBUTE_CASE = 1 << 1;\n\nexport const UNINITIALIZED = Symbol();\n\n// Dev-time component properties\nexport const FILENAME = Symbol('filename');\nexport const HMR = Symbol('hmr');\n\nexport const NAMESPACE_HTML = 'http://www.w3.org/1999/xhtml';\nexport const NAMESPACE_SVG = 'http://www.w3.org/2000/svg';\nexport const NAMESPACE_MATHML = 'http://www.w3.org/1998/Math/MathML';\n\n// we use a list of ignorable runtime warnings because not every runtime warning\n// can be ignored and we want to keep the validation for svelte-ignore in place\nexport const IGNORABLE_RUNTIME_WARNINGS = /** @type {const} */ ([\n\t'state_snapshot_uncloneable',\n\t'binding_property_non_reactive',\n\t'hydration_attribute_changed',\n\t'hydration_html_changed',\n\t'ownership_invalid_binding',\n\t'ownership_invalid_mutation'\n]);\n\n/**\n * Whitespace inside one of these elements will not result in\n * a whitespace node being created in any circumstances. (This\n * list is almost certainly very incomplete)\n * TODO this is currently unused\n */\nexport const ELEMENTS_WITHOUT_TEXT = ['audio', 'datalist', 'dl', 'optgroup', 'select', 'video'];\n","const node_env = globalThis.process?.env?.NODE_ENV;\nexport default node_env && !node_env.toLowerCase().startsWith('prod');\n","// Store the references to globals in case someone tries to monkey patch these, causing the below\n// to de-opt (this occurs often when using popular extensions).\nexport var is_array = Array.isArray;\nexport var index_of = Array.prototype.indexOf;\nexport var array_from = Array.from;\nexport var object_keys = Object.keys;\nexport var define_property = Object.defineProperty;\nexport var get_descriptor = Object.getOwnPropertyDescriptor;\nexport var get_descriptors = Object.getOwnPropertyDescriptors;\nexport var object_prototype = Object.prototype;\nexport var array_prototype = Array.prototype;\nexport var get_prototype_of = Object.getPrototypeOf;\nexport var is_extensible = Object.isExtensible;\n\n/**\n * @param {any} thing\n * @returns {thing is Function}\n */\nexport function is_function(thing) {\n\treturn typeof thing === 'function';\n}\n\nexport const noop = () => {};\n\n// Adapted from https://github.com/then/is-promise/blob/master/index.js\n// Distributed under MIT License https://github.com/then/is-promise/blob/master/LICENSE\n\n/**\n * @template [T=any]\n * @param {any} value\n * @returns {value is PromiseLike<T>}\n */\nexport function is_promise(value) {\n\treturn typeof value?.then === 'function';\n}\n\n/** @param {Function} fn */\nexport function run(fn) {\n\treturn fn();\n}\n\n/** @param {Array<() => void>} arr */\nexport function run_all(arr) {\n\tfor (var i = 0; i < arr.length; i++) {\n\t\tarr[i]();\n\t}\n}\n\n/**\n * TODO replace with Promise.withResolvers once supported widely enough\n * @template T\n */\nexport function deferred() {\n\t/** @type {(value: T) => void} */\n\tvar resolve;\n\n\t/** @type {(reason: any) => void} */\n\tvar reject;\n\n\t/** @type {Promise<T>} */\n\tvar promise = new Promise((res, rej) => {\n\t\tresolve = res;\n\t\treject = rej;\n\t});\n\n\t// @ts-expect-error\n\treturn { promise, resolve, reject };\n}\n\n/**\n * @template V\n * @param {V} value\n * @param {V | (() => V)} fallback\n * @param {boolean} [lazy]\n * @returns {V}\n */\nexport function fallback(value, fallback, lazy = false) {\n\treturn value === undefined\n\t\t? lazy\n\t\t\t? /** @type {() => V} */ (fallback)()\n\t\t\t: /** @type {V} */ (fallback)\n\t\t: value;\n}\n","export const DERIVED = 1 << 1;\nexport const EFFECT = 1 << 2;\nexport const RENDER_EFFECT = 1 << 3;\nexport const BLOCK_EFFECT = 1 << 4;\nexport const BRANCH_EFFECT = 1 << 5;\nexport const ROOT_EFFECT = 1 << 6;\nexport const BOUNDARY_EFFECT = 1 << 7;\nexport const UNOWNED = 1 << 8;\nexport const DISCONNECTED = 1 << 9;\nexport const CLEAN = 1 << 10;\nexport const DIRTY = 1 << 11;\nexport const MAYBE_DIRTY = 1 << 12;\nexport const INERT = 1 << 13;\nexport const DESTROYED = 1 << 14;\nexport const EFFECT_RAN = 1 << 15;\n/** 'Transparent' effects do not create a transition boundary */\nexport const EFFECT_TRANSPARENT = 1 << 16;\n/** Svelte 4 legacy mode props need to be handled with deriveds and be recognized elsewhere, hence the dedicated flag */\nexport const LEGACY_DERIVED_PROP = 1 << 17;\nexport const INSPECT_EFFECT = 1 << 18;\nexport const HEAD_EFFECT = 1 << 19;\nexport const EFFECT_HAS_DERIVED = 1 << 20;\nexport const EFFECT_IS_UPDATING = 1 << 21;\n\nexport const STATE_SYMBOL = Symbol('$state');\nexport const LEGACY_PROPS = Symbol('legacy props');\nexport const LOADING_ATTR_SYMBOL = Symbol('');\n","/* This file is generated by scripts/process-messages/index.js. Do not edit! */\n\nimport { DEV } from 'esm-env';\n\n/**\n * Using `bind:value` together with a checkbox input is not allowed. Use `bind:checked` instead\n * @returns {never}\n */\nexport function bind_invalid_checkbox_value() {\n\tif (DEV) {\n\t\tconst error = new Error(`bind_invalid_checkbox_value\\nUsing \\`bind:value\\` together with a checkbox input is not allowed. Use \\`bind:checked\\` instead\\nhttps://svelte.dev/e/bind_invalid_checkbox_value`);\n\n\t\terror.name = 'Svelte error';\n\t\tthrow error;\n\t} else {\n\t\tthrow new Error(`https://svelte.dev/e/bind_invalid_checkbox_value`);\n\t}\n}\n\n/**\n * Component %component% has an export named `%key%` that a consumer component is trying to access using `bind:%key%`, which is disallowed. Instead, use `bind:this` (e.g. `<%name% bind:this={component} />`) and then access the property on the bound component instance (e.g. `component.%key%`)\n * @param {string} component\n * @param {string} key\n * @param {string} name\n * @returns {never}\n */\nexport function bind_invalid_export(component, key, name) {\n\tif (DEV) {\n\t\tconst error = new Error(`bind_invalid_export\\nComponent ${component} has an export named \\`${key}\\` that a consumer component is trying to access using \\`bind:${key}\\`, which is disallowed. Instead, use \\`bind:this\\` (e.g. \\`<${name} bind:this={component} />\\`) and then access the property on the bound component instance (e.g. \\`component.${key}\\`)\\nhttps://svelte.dev/e/bind_invalid_export`);\n\n\t\terror.name = 'Svelte error';\n\t\tthrow error;\n\t} else {\n\t\tthrow new Error(`https://svelte.dev/e/bind_invalid_export`);\n\t}\n}\n\n/**\n * A component is attempting to bind to a non-bindable property `%key%` belonging to %component% (i.e. `<%name% bind:%key%={...}>`). To mark a property as bindable: `let { %key% = $bindable() } = $props()`\n * @param {string} key\n * @param {string} component\n * @param {string} name\n * @returns {never}\n */\nexport function bind_not_bindable(key, component, name) {\n\tif (DEV) {\n\t\tconst error = new Error(`bind_not_bindable\\nA component is attempting to bind to a non-bindable property \\`${key}\\` belonging to ${component} (i.e. \\`<${name} bind:${key}={...}>\\`). To mark a property as bindable: \\`let { ${key} = $bindable() } = $props()\\`\\nhttps://svelte.dev/e/bind_not_bindable`);\n\n\t\terror.name = 'Svelte error';\n\t\tthrow error;\n\t} else {\n\t\tthrow new Error(`https://svelte.dev/e/bind_not_bindable`);\n\t}\n}\n\n/**\n * Calling `%method%` on a component instance (of %component%) is no longer valid in Svelte 5\n * @param {string} method\n * @param {string} component\n * @returns {never}\n */\nexport function component_api_changed(method, component) {\n\tif (DEV) {\n\t\tconst error = new Error(`component_api_changed\\nCalling \\`${method}\\` on a component instance (of ${component}) is no longer valid in Svelte 5\\nhttps://svelte.dev/e/component_api_changed`);\n\n\t\terror.name = 'Svelte error';\n\t\tthrow error;\n\t} else {\n\t\tthrow new Error(`https://svelte.dev/e/component_api_changed`);\n\t}\n}\n\n/**\n * Attempted to instantiate %component% with `new %name%`, which is no longer valid in Svelte 5. If this component is not under your control, set the `compatibility.componentApi` compiler option to `4` to keep it working.\n * @param {string} component\n * @param {string} name\n * @returns {never}\n */\nexport function component_api_invalid_new(component, name) {\n\tif (DEV) {\n\t\tconst error = new Error(`component_api_invalid_new\\nAttempted to instantiate ${component} with \\`new ${name}\\`, which is no longer valid in Svelte 5. If this component is not under your control, set the \\`compatibility.componentApi\\` compiler option to \\`4\\` to keep it working.\\nhttps://svelte.dev/e/component_api_invalid_new`);\n\n\t\terror.name = 'Svelte error';\n\t\tthrow error;\n\t} else {\n\t\tthrow new Error(`https://svelte.dev/e/component_api_invalid_new`);\n\t}\n}\n\n/**\n * A derived value cannot reference itself recursively\n * @returns {never}\n */\nexport function derived_references_self() {\n\tif (DEV) {\n\t\tconst error = new Error(`derived_references_self\\nA derived value cannot reference itself recursively\\nhttps://svelte.dev/e/derived_references_self`);\n\n\t\terror.name = 'Svelte error';\n\t\tthrow error;\n\t} else {\n\t\tthrow new Error(`https://svelte.dev/e/derived_references_self`);\n\t}\n}\n\n/**\n * Keyed each block has duplicate key `%value%` at indexes %a% and %b%\n * @param {string} a\n * @param {string} b\n * @param {string | undefined | null} [value]\n * @returns {never}\n */\nexport function each_key_duplicate(a, b, value) {\n\tif (DEV) {\n\t\tconst error = new Error(`each_key_duplicate\\n${value ? `Keyed each block has duplicate key \\`${value}\\` at indexes ${a} and ${b}` : `Keyed each block has duplicate key at indexes ${a} and ${b}`}\\nhttps://svelte.dev/e/each_key_duplicate`);\n\n\t\terror.name = 'Svelte error';\n\t\tthrow error;\n\t} else {\n\t\tthrow new Error(`https://svelte.dev/e/each_key_duplicate`);\n\t}\n}\n\n/**\n * `%rune%` cannot be used inside an effect cleanup function\n * @param {string} rune\n * @returns {never}\n */\nexport function effect_in_teardown(rune) {\n\tif (DEV) {\n\t\tconst error = new Error(`effect_in_teardown\\n\\`${rune}\\` cannot be used inside an effect cleanup function\\nhttps://svelte.dev/e/effect_in_teardown`);\n\n\t\terror.name = 'Svelte error';\n\t\tthrow error;\n\t} else {\n\t\tthrow new Error(`https://svelte.dev/e/effect_in_teardown`);\n\t}\n}\n\n/**\n * Effect cannot be created inside a `$derived` value that was not itself created inside an effect\n * @returns {never}\n */\nexport function effect_in_unowned_derived() {\n\tif (DEV) {\n\t\tconst error = new Error(`effect_in_unowned_derived\\nEffect cannot be created inside a \\`$derived\\` value that was not itself created inside an effect\\nhttps://svelte.dev/e/effect_in_unowned_derived`);\n\n\t\terror.name = 'Svelte error';\n\t\tthrow error;\n\t} else {\n\t\tthrow new Error(`https://svelte.dev/e/effect_in_unowned_derived`);\n\t}\n}\n\n/**\n * `%rune%` can only be used inside an effect (e.g. during component initialisation)\n * @param {string} rune\n * @returns {never}\n */\nexport function effect_orphan(rune) {\n\tif (DEV) {\n\t\tconst error = new Error(`effect_orphan\\n\\`${rune}\\` can only be used inside an effect (e.g. during component initialisation)\\nhttps://svelte.dev/e/effect_orphan`);\n\n\t\terror.name = 'Svelte error';\n\t\tthrow error;\n\t} else {\n\t\tthrow new Error(`https://svelte.dev/e/effect_orphan`);\n\t}\n}\n\n/**\n * Maximum update depth exceeded. This can happen when a reactive block or effect repeatedly sets a new value. Svelte limits the number of nested updates to prevent infinite loops\n * @returns {never}\n */\nexport function effect_update_depth_exceeded() {\n\tif (DEV) {\n\t\tconst error = new Error(`effect_update_depth_exceeded\\nMaximum update depth exceeded. This can happen when a reactive block or effect repeatedly sets a new value. Svelte limits the number of nested updates to prevent infinite loops\\nhttps://svelte.dev/e/effect_update_depth_exceeded`);\n\n\t\terror.name = 'Svelte error';\n\t\tthrow error;\n\t} else {\n\t\tthrow new Error(`https://svelte.dev/e/effect_update_depth_exceeded`);\n\t}\n}\n\n/**\n * Failed to hydrate the application\n * @returns {never}\n */\nexport function hydration_failed() {\n\tif (DEV) {\n\t\tconst error = new Error(`hydration_failed\\nFailed to hydrate the application\\nhttps://svelte.dev/e/hydration_failed`);\n\n\t\terror.name = 'Svelte error';\n\t\tthrow error;\n\t} else {\n\t\tthrow new Error(`https://svelte.dev/e/hydration_failed`);\n\t}\n}\n\n/**\n * Could not `{@render}` snippet due to the expression being `null` or `undefined`. Consider using optional chaining `{@render snippet?.()}`\n * @returns {never}\n */\nexport function invalid_snippet() {\n\tif (DEV) {\n\t\tconst error = new Error(`invalid_snippet\\nCould not \\`{@render}\\` snippet due to the expression being \\`null\\` or \\`undefined\\`. Consider using optional chaining \\`{@render snippet?.()}\\`\\nhttps://svelte.dev/e/invalid_snippet`);\n\n\t\terror.name = 'Svelte error';\n\t\tthrow error;\n\t} else {\n\t\tthrow new Error(`https://svelte.dev/e/invalid_snippet`);\n\t}\n}\n\n/**\n * `%name%(...)` cannot be used in runes mode\n * @param {string} name\n * @returns {never}\n */\nexport function lifecycle_legacy_only(name) {\n\tif (DEV) {\n\t\tconst error = new Error(`lifecycle_legacy_only\\n\\`${name}(...)\\` cannot be used in runes mode\\nhttps://svelte.dev/e/lifecycle_legacy_only`);\n\n\t\terror.name = 'Svelte error';\n\t\tthrow error;\n\t} else {\n\t\tthrow new Error(`https://svelte.dev/e/lifecycle_legacy_only`);\n\t}\n}\n\n/**\n * Cannot do `bind:%key%={undefined}` when `%key%` has a fallback value\n * @param {string} key\n * @returns {never}\n */\nexport function props_invalid_value(key) {\n\tif (DEV) {\n\t\tconst error = new Error(`props_invalid_value\\nCannot do \\`bind:${key}={undefined}\\` when \\`${key}\\` has a fallback value\\nhttps://svelte.dev/e/props_invalid_value`);\n\n\t\terror.name = 'Svelte error';\n\t\tthrow error;\n\t} else {\n\t\tthrow new Error(`https://svelte.dev/e/props_invalid_value`);\n\t}\n}\n\n/**\n * Rest element properties of `$props()` such as `%property%` are readonly\n * @param {string} property\n * @returns {never}\n */\nexport function props_rest_readonly(property) {\n\tif (DEV) {\n\t\tconst error = new Error(`props_rest_readonly\\nRest element properties of \\`$props()\\` such as \\`${property}\\` are readonly\\nhttps://svelte.dev/e/props_rest_readonly`);\n\n\t\terror.name = 'Svelte error';\n\t\tthrow error;\n\t} else {\n\t\tthrow new Error(`https://svelte.dev/e/props_rest_readonly`);\n\t}\n}\n\n/**\n * The `%rune%` rune is only available inside `.svelte` and `.svelte.js/ts` files\n * @param {string} rune\n * @returns {never}\n */\nexport function rune_outside_svelte(rune) {\n\tif (DEV) {\n\t\tconst error = new Error(`rune_outside_svelte\\nThe \\`${rune}\\` rune is only available inside \\`.svelte\\` and \\`.svelte.js/ts\\` files\\nhttps://svelte.dev/e/rune_outside_svelte`);\n\n\t\terror.name = 'Svelte error';\n\t\tthrow error;\n\t} else {\n\t\tthrow new Error(`https://svelte.dev/e/rune_outside_svelte`);\n\t}\n}\n\n/**\n * Property descriptors defined on `$state` objects must contain `value` and always be `enumerable`, `configurable` and `writable`.\n * @returns {never}\n */\nexport function state_descriptors_fixed() {\n\tif (DEV) {\n\t\tconst error = new Error(`state_descriptors_fixed\\nProperty descriptors defined on \\`$state\\` objects must contain \\`value\\` and always be \\`enumerable\\`, \\`configurable\\` and \\`writable\\`.\\nhttps://svelte.dev/e/state_descriptors_fixed`);\n\n\t\terror.name = 'Svelte error';\n\t\tthrow error;\n\t} else {\n\t\tthrow new Error(`https://svelte.dev/e/state_descriptors_fixed`);\n\t}\n}\n\n/**\n * Cannot set prototype of `$state` object\n * @returns {never}\n */\nexport function state_prototype_fixed() {\n\tif (DEV) {\n\t\tconst error = new Error(`state_prototype_fixed\\nCannot set prototype of \\`$state\\` object\\nhttps://svelte.dev/e/state_prototype_fixed`);\n\n\t\terror.name = 'Svelte error';\n\t\tthrow error;\n\t} else {\n\t\tthrow new Error(`https://svelte.dev/e/state_prototype_fixed`);\n\t}\n}\n\n/**\n * Updating state inside a derived or a template expression is forbidden. If the value should not be reactive, declare it without `$state`\n * @returns {never}\n */\nexport function state_unsafe_mutation() {\n\tif (DEV) {\n\t\tconst error = new Error(`state_unsafe_mutation\\nUpdating state inside a derived or a template expression is forbidden. If the value should not be reactive, declare it without \\`$state\\`\\nhttps://svelte.dev/e/state_unsafe_mutation`);\n\n\t\terror.name = 'Svelte error';\n\t\tthrow error;\n\t} else {\n\t\tthrow new Error(`https://svelte.dev/e/state_unsafe_mutation`);\n\t}\n}","/** @import { Source } from '#client' */\nimport { DEV } from 'esm-env';\nimport { get, active_effect, active_reaction, set_active_reaction } from './runtime.js';\nimport {\n\tarray_prototype,\n\tget_descriptor,\n\tget_prototype_of,\n\tis_array,\n\tobject_prototype\n} from '../shared/utils.js';\nimport { state as source, set } from './reactivity/sources.js';\nimport { STATE_SYMBOL } from '#client/constants';\nimport { UNINITIALIZED } from '../../constants.js';\nimport * as e from './errors.js';\nimport { get_stack } from './dev/tracing.js';\nimport { tracing_mode_flag } from '../flags/index.js';\n\n/**\n * @template T\n * @param {T} value\n * @returns {T}\n */\nexport function proxy(value) {\n\t// if non-proxyable, or is already a proxy, return `value`\n\tif (typeof value !== 'object' || value === null || STATE_SYMBOL in value) {\n\t\treturn value;\n\t}\n\n\tconst prototype = get_prototype_of(value);\n\n\tif (prototype !== object_prototype && prototype !== array_prototype) {\n\t\treturn value;\n\t}\n\n\t/** @type {Map<any, Source<any>>} */\n\tvar sources = new Map();\n\tvar is_proxied_array = is_array(value);\n\tvar version = source(0);\n\n\tvar stack = DEV && tracing_mode_flag ? get_stack('CreatedAt') : null;\n\tvar reaction = active_reaction;\n\n\t/**\n\t * @template T\n\t * @param {() => T} fn\n\t */\n\tvar with_parent = (fn) => {\n\t\tvar previous_reaction = active_reaction;\n\t\tset_active_reaction(reaction);\n\n\t\t/** @type {T} */\n\t\tvar result = fn();\n\n\t\tset_active_reaction(previous_reaction);\n\t\treturn result;\n\t};\n\n\tif (is_proxied_array) {\n\t\t// We need to create the length source eagerly to ensure that\n\t\t// mutations to the array are properly synced with our proxy\n\t\tsources.set('length', source(/** @type {any[]} */ (value).length, stack));\n\t}\n\n\treturn new Proxy(/** @type {any} */ (value), {\n\t\tdefineProperty(_, prop, descriptor) {\n\t\t\tif (\n\t\t\t\t!('value' in descriptor) ||\n\t\t\t\tdescriptor.configurable === false ||\n\t\t\t\tdescriptor.enumerable === false ||\n\t\t\t\tdescriptor.writable === false\n\t\t\t) {\n\t\t\t\t// we disallow non-basic descriptors, because unless they are applied to the\n\t\t\t\t// target object — which we avoid, so that state can be forked — we will run\n\t\t\t\t// afoul of the various invariants\n\t\t\t\t// https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Proxy/Proxy/getOwnPropertyDescriptor#invariants\n\t\t\t\te.state_descriptors_fixed();\n\t\t\t}\n\n\t\t\tvar s = sources.get(prop);\n\n\t\t\tif (s === undefined) {\n\t\t\t\ts = with_parent(() => source(descriptor.value, stack));\n\t\t\t\tsources.set(prop, s);\n\t\t\t} else {\n\t\t\t\tset(\n\t\t\t\t\ts,\n\t\t\t\t\twith_parent(() => proxy(descriptor.value))\n\t\t\t\t);\n\t\t\t}\n\n\t\t\treturn true;\n\t\t},\n\n\t\tdeleteProperty(target, prop) {\n\t\t\tvar s = sources.get(prop);\n\n\t\t\tif (s === undefined) {\n\t\t\t\tif (prop in target) {\n\t\t\t\t\tsources.set(\n\t\t\t\t\t\tprop,\n\t\t\t\t\t\twith_parent(() => source(UNINITIALIZED, stack))\n\t\t\t\t\t);\n\t\t\t\t\tupdate_version(version);\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\t// When working with arrays, we need to also ensure we update the length when removing\n\t\t\t\t// an indexed property\n\t\t\t\tif (is_proxied_array && typeof prop === 'string') {\n\t\t\t\t\tvar ls = /** @type {Source<number>} */ (sources.get('length'));\n\t\t\t\t\tvar n = Number(prop);\n\n\t\t\t\t\tif (Number.isInteger(n) && n < ls.v) {\n\t\t\t\t\t\tset(ls, n);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tset(s, UNINITIALIZED);\n\t\t\t\tupdate_version(version);\n\t\t\t}\n\n\t\t\treturn true;\n\t\t},\n\n\t\tget(target, prop, receiver) {\n\t\t\tif (prop === STATE_SYMBOL) {\n\t\t\t\treturn value;\n\t\t\t}\n\n\t\t\tvar s = sources.get(prop);\n\t\t\tvar exists = prop in target;\n\n\t\t\t// create a source, but only if it's an own property and not a prototype property\n\t\t\tif (s === undefined && (!exists || get_descriptor(target, prop)?.writable)) {\n\t\t\t\ts = with_parent(() => source(proxy(exists ? target[prop] : UNINITIALIZED), stack));\n\t\t\t\tsources.set(prop, s);\n\t\t\t}\n\n\t\t\tif (s !== undefined) {\n\t\t\t\tvar v = get(s);\n\t\t\t\treturn v === UNINITIALIZED ? undefined : v;\n\t\t\t}\n\n\t\t\treturn Reflect.get(target, prop, receiver);\n\t\t},\n\n\t\tgetOwnPropertyDescriptor(target, prop) {\n\t\t\tvar descriptor = Reflect.getOwnPropertyDescriptor(target, prop);\n\n\t\t\tif (descriptor && 'value' in descriptor) {\n\t\t\t\tvar s = sources.get(prop);\n\t\t\t\tif (s) descriptor.value = get(s);\n\t\t\t} else if (descriptor === undefined) {\n\t\t\t\tvar source = sources.get(prop);\n\t\t\t\tvar value = source?.v;\n\n\t\t\t\tif (source !== undefined && value !== UNINITIALIZED) {\n\t\t\t\t\treturn {\n\t\t\t\t\t\tenumerable: true,\n\t\t\t\t\t\tconfigurable: true,\n\t\t\t\t\t\tvalue,\n\t\t\t\t\t\twritable: true\n\t\t\t\t\t};\n\t\t\t\t}\n\t\t\t}\n\n\t\t\treturn descriptor;\n\t\t},\n\n\t\thas(target, prop) {\n\t\t\tif (prop === STATE_SYMBOL) {\n\t\t\t\treturn true;\n\t\t\t}\n\n\t\t\tvar s = sources.get(prop);\n\t\t\tvar has = (s !== undefined && s.v !== UNINITIALIZED) || Reflect.has(target, prop);\n\n\t\t\tif (\n\t\t\t\ts !== undefined ||\n\t\t\t\t(active_effect !== null && (!has || get_descriptor(target, prop)?.writable))\n\t\t\t) {\n\t\t\t\tif (s === undefined) {\n\t\t\t\t\ts = with_parent(() => source(has ? proxy(target[prop]) : UNINITIALIZED, stack));\n\t\t\t\t\tsources.set(prop, s);\n\t\t\t\t}\n\n\t\t\t\tvar value = get(s);\n\t\t\t\tif (value === UNINITIALIZED) {\n\t\t\t\t\treturn false;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\treturn has;\n\t\t},\n\n\t\tset(target, prop, value, receiver) {\n\t\t\tvar s = sources.get(prop);\n\t\t\tvar has = prop in target;\n\n\t\t\t// variable.length = value -> clear all signals with index >= value\n\t\t\tif (is_proxied_array && prop === 'length') {\n\t\t\t\tfor (var i = value; i < /** @type {Source<number>} */ (s).v; i += 1) {\n\t\t\t\t\tvar other_s = sources.get(i + '');\n\t\t\t\t\tif (other_s !== undefined) {\n\t\t\t\t\t\tset(other_s, UNINITIALIZED);\n\t\t\t\t\t} else if (i in target) {\n\t\t\t\t\t\t// If the item exists in the original, we need to create a uninitialized source,\n\t\t\t\t\t\t// else a later read of the property would result in a source being created with\n\t\t\t\t\t\t// the value of the original item at that index.\n\t\t\t\t\t\tother_s = with_parent(() => source(UNINITIALIZED, stack));\n\t\t\t\t\t\tsources.set(i + '', other_s);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// If we haven't yet created a source for this property, we need to ensure\n\t\t\t// we do so otherwise if we read it later, then the write won't be tracked and\n\t\t\t// the heuristics of effects will be different vs if we had read the proxied\n\t\t\t// object property before writing to that property.\n\t\t\tif (s === undefined) {\n\t\t\t\tif (!has || get_descriptor(target, prop)?.writable) {\n\t\t\t\t\ts = with_parent(() => source(undefined, stack));\n\t\t\t\t\tset(\n\t\t\t\t\t\ts,\n\t\t\t\t\t\twith_parent(() => proxy(value))\n\t\t\t\t\t);\n\t\t\t\t\tsources.set(prop, s);\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\thas = s.v !== UNINITIALIZED;\n\t\t\t\tset(\n\t\t\t\t\ts,\n\t\t\t\t\twith_parent(() => proxy(value))\n\t\t\t\t);\n\t\t\t}\n\n\t\t\tvar descriptor = Reflect.getOwnPropertyDescriptor(target, prop);\n\n\t\t\t// Set the new value before updating any signals so that any listeners get the new value\n\t\t\tif (descriptor?.set) {\n\t\t\t\tdescriptor.set.call(receiver, value);\n\t\t\t}\n\n\t\t\tif (!has) {\n\t\t\t\t// If we have mutated an array directly, we might need to\n\t\t\t\t// signal that length has also changed. Do it before updating metadata\n\t\t\t\t// to ensure that iterating over the array as a result of a metadata update\n\t\t\t\t// will not cause the length to be out of sync.\n\t\t\t\tif (is_proxied_array && typeof prop === 'string') {\n\t\t\t\t\tvar ls = /** @type {Source<number>} */ (sources.get('length'));\n\t\t\t\t\tvar n = Number(prop);\n\n\t\t\t\t\tif (Number.isInteger(n) && n >= ls.v) {\n\t\t\t\t\t\tset(ls, n + 1);\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tupdate_version(version);\n\t\t\t}\n\n\t\t\treturn true;\n\t\t},\n\n\t\townKeys(target) {\n\t\t\tget(version);\n\n\t\t\tvar own_keys = Reflect.ownKeys(target).filter((key) => {\n\t\t\t\tvar source = sources.get(key);\n\t\t\t\treturn source === undefined || source.v !== UNINITIALIZED;\n\t\t\t});\n\n\t\t\tfor (var [key, source] of sources) {\n\t\t\t\tif (source.v !== UNINITIALIZED && !(key in target)) {\n\t\t\t\t\town_keys.push(key);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\treturn own_keys;\n\t\t},\n\n\t\tsetPrototypeOf() {\n\t\t\te.state_prototype_fixed();\n\t\t}\n\t});\n}\n\n/**\n * @param {Source<number>} signal\n * @param {1 | -1} [d]\n */\nfunction update_version(signal, d = 1) {\n\tset(signal, signal.v + d);\n}\n\n/**\n * @param {any} value\n */\nexport function get_proxied_value(value) {\n\ttry {\n\t\tif (value !== null && typeof value === 'object' && STATE_SYMBOL in value) {\n\t\t\treturn value[STATE_SYMBOL];\n\t\t}\n\t} catch {\n\t\t// the above if check can throw an error if the value in question\n\t\t// is the contentWindow of an iframe on another domain, in which\n\t\t// case we want to just return the value (because it's definitely\n\t\t// not a proxied value) so we don't break any JavaScript interacting\n\t\t// with that iframe (such as various payment companies client side\n\t\t// JavaScript libraries interacting with their iframes on the same\n\t\t// domain)\n\t}\n\n\treturn value;\n}\n\n/**\n * @param {any} a\n * @param {any} b\n */\nexport function is(a, b) {\n\treturn Object.is(get_proxied_value(a), get_proxied_value(b));\n}\n","/** @import { TemplateNode } from '#client' */\nimport { hydrate_node, hydrating, set_hydrate_node } from './hydration.js';\nimport { DEV } from 'esm-env';\nimport { init_array_prototype_warnings } from '../dev/equality.js';\nimport { get_descriptor, is_extensible } from '../../shared/utils.js';\n\n// export these for reference in the compiled code, making global name deduplication unnecessary\n/** @type {Window} */\nexport var $window;\n\n/** @type {Document} */\nexport var $document;\n\n/** @type {boolean} */\nexport var is_firefox;\n\n/** @type {() => Node | null} */\nvar first_child_getter;\n/** @type {() => Node | null} */\nvar next_sibling_getter;\n\n/**\n * Initialize these lazily to avoid issues when using the runtime in a server context\n * where these globals are not available while avoiding a separate server entry point\n */\nexport function init_operations() {\n\tif ($window !== undefined) {\n\t\treturn;\n\t}\n\n\t$window = window;\n\t$document = document;\n\tis_firefox = /Firefox/.test(navigator.userAgent);\n\n\tvar element_prototype = Element.prototype;\n\tvar node_prototype = Node.prototype;\n\tvar text_prototype = Text.prototype;\n\n\t// @ts-ignore\n\tfirst_child_getter = get_descriptor(node_prototype, 'firstChild').get;\n\t// @ts-ignore\n\tnext_sibling_getter = get_descriptor(node_prototype, 'nextSibling').get;\n\n\tif (is_extensible(element_prototype)) {\n\t\t// the following assignments improve perf of lookups on DOM nodes\n\t\t// @ts-expect-error\n\t\telement_prototype.__click = undefined;\n\t\t// @ts-expect-error\n\t\telement_prototype.__className = undefined;\n\t\t// @ts-expect-error\n\t\telement_prototype.__attributes = null;\n\t\t// @ts-expect-error\n\t\telement_prototype.__style = undefined;\n\t\t// @ts-expect-error\n\t\telement_prototype.__e = undefined;\n\t}\n\n\tif (is_extensible(text_prototype)) {\n\t\t// @ts-expect-error\n\t\ttext_prototype.__t = undefined;\n\t}\n\n\tif (DEV) {\n\t\t// @ts-expect-error\n\t\telement_prototype.__svelte_meta = null;\n\n\t\tinit_array_prototype_warnings();\n\t}\n}\n\n/**\n * @param {string} value\n * @returns {Text}\n */\nexport function create_text(value = '') {\n\treturn document.createTextNode(value);\n}\n\n/**\n * @template {Node} N\n * @param {N} node\n * @returns {Node | null}\n */\n/*@__NO_SIDE_EFFECTS__*/\nexport function get_first_child(node) {\n\treturn first_child_getter.call(node);\n}\n\n/**\n * @template {Node} N\n * @param {N} node\n * @returns {Node | null}\n */\n/*@__NO_SIDE_EFFECTS__*/\nexport function get_next_sibling(node) {\n\treturn next_sibling_getter.call(node);\n}\n\n/**\n * Don't mark this as side-effect-free, hydration needs to walk all nodes\n * @template {Node} N\n * @param {N} node\n * @param {boolean} is_text\n * @returns {Node | null}\n */\nexport function child(node, is_text) {\n\tif (!hydrating) {\n\t\treturn get_first_child(node);\n\t}\n\n\tvar child = /** @type {TemplateNode} */ (get_first_child(hydrate_node));\n\n\t// Child can be null if we have an element with a single child, like `<p>{text}</p>`, where `text` is empty\n\tif (child === null) {\n\t\tchild = hydrate_node.appendChild(create_text());\n\t} else if (is_text && child.nodeType !== 3) {\n\t\tvar text = create_text();\n\t\tchild?.before(text);\n\t\tset_hydrate_node(text);\n\t\treturn text;\n\t}\n\n\tset_hydrate_node(child);\n\treturn child;\n}\n\n/**\n * Don't mark this as side-effect-free, hydration needs to walk all nodes\n * @param {DocumentFragment | TemplateNode[]} fragment\n * @param {boolean} is_text\n * @returns {Node | null}\n */\nexport function first_child(fragment, is_text) {\n\tif (!hydrating) {\n\t\t// when not hydrating, `fragment` is a `DocumentFragment` (the result of calling `open_frag`)\n\t\tvar first = /** @type {DocumentFragment} */ (get_first_child(/** @type {Node} */ (fragment)));\n\n\t\t// TODO prevent user comments with the empty string when preserveComments is true\n\t\tif (first instanceof Comment && first.data === '') return get_next_sibling(first);\n\n\t\treturn first;\n\t}\n\n\t// if an {expression} is empty during SSR, there might be no\n\t// text node to hydrate — we must therefore create one\n\tif (is_text && hydrate_node?.nodeType !== 3) {\n\t\tvar text = create_text();\n\n\t\thydrate_node?.before(text);\n\t\tset_hydrate_node(text);\n\t\treturn text;\n\t}\n\n\treturn hydrate_node;\n}\n\n/**\n * Don't mark this as side-effect-free, hydration needs to walk all nodes\n * @param {TemplateNode} node\n * @param {number} count\n * @param {boolean} is_text\n * @returns {Node | null}\n */\nexport function sibling(node, count = 1, is_text = false) {\n\tlet next_sibling = hydrating ? hydrate_node : node;\n\tvar last_sibling;\n\n\twhile (count--) {\n\t\tlast_sibling = next_sibling;\n\t\tnext_sibling = /** @type {TemplateNode} */ (get_next_sibling(next_sibling));\n\t}\n\n\tif (!hydrating) {\n\t\treturn next_sibling;\n\t}\n\n\tvar type = next_sibling?.nodeType;\n\n\t// if a sibling {expression} is empty during SSR, there might be no\n\t// text node to hydrate — we must therefore create one\n\tif (is_text && type !== 3) {\n\t\tvar text = create_text();\n\t\t// If the next sibling is `null` and we're handling text then it's because\n\t\t// the SSR content was empty for the text, so we need to generate a new text\n\t\t// node and insert it after the last sibling\n\t\tif (next_sibling === null) {\n\t\t\tlast_sibling?.after(text);\n\t\t} else {\n\t\t\tnext_sibling.before(text);\n\t\t}\n\t\tset_hydrate_node(text);\n\t\treturn text;\n\t}\n\n\tset_hydrate_node(next_sibling);\n\treturn /** @type {TemplateNode} */ (next_sibling);\n}\n\n/**\n * @template {Node} N\n * @param {N} node\n * @returns {void}\n */\nexport function clear_text_content(node) {\n\tnode.textContent = '';\n}\n","/** @import { Equals } from '#client' */\n\n/** @type {Equals} */\nexport function equals(value) {\n\treturn value === this.v;\n}\n\n/**\n * @param {unknown} a\n * @param {unknown} b\n * @returns {boolean}\n */\nexport function safe_not_equal(a, b) {\n\treturn a != a\n\t\t? b == b\n\t\t: a !== b || (a !== null && typeof a === 'object') || typeof a === 'function';\n}\n\n/**\n * @param {unknown} a\n * @param {unknown} b\n * @returns {boolean}\n */\nexport function not_equal(a, b) {\n\treturn a !== b;\n}\n\n/** @type {Equals} */\nexport function safe_equals(value) {\n\treturn !safe_not_equal(value, this.v);\n}\n","/** @import { Derived, Effect } from '#client' */\nimport { DEV } from 'esm-env';\nimport { CLEAN, DERIVED, DIRTY, EFFECT_HAS_DERIVED, MAYBE_DIRTY, UNOWNED } from '#client/constants';\nimport {\n\tactive_reaction,\n\tactive_effect,\n\tset_signal_status,\n\tskip_reaction,\n\tupdate_reaction,\n\tincrement_write_version,\n\tset_active_effect,\n\tpush_reaction_value\n} from '../runtime.js';\nimport { equals, safe_equals } from './equality.js';\nimport * as e from '../errors.js';\nimport { destroy_effect } from './effects.js';\nimport { inspect_effects, set_inspect_effects } from './sources.js';\nimport { get_stack } from '../dev/tracing.js';\nimport { tracing_mode_flag } from '../../flags/index.js';\nimport { component_context } from '../context.js';\n\n/**\n * @template V\n * @param {() => V} fn\n * @returns {Derived<V>}\n */\n/*#__NO_SIDE_EFFECTS__*/\nexport function derived(fn) {\n\tvar flags = DERIVED | DIRTY;\n\tvar parent_derived =\n\t\tactive_reaction !== null && (active_reaction.f & DERIVED) !== 0\n\t\t\t? /** @type {Derived} */ (active_reaction)\n\t\t\t: null;\n\n\tif (active_effect === null || (parent_derived !== null && (parent_derived.f & UNOWNED) !== 0)) {\n\t\tflags |= UNOWNED;\n\t} else {\n\t\t// Since deriveds are evaluated lazily, any effects created inside them are\n\t\t// created too late to ensure that the parent effect is added to the tree\n\t\tactive_effect.f |= EFFECT_HAS_DERIVED;\n\t}\n\n\t/** @type {Derived<V>} */\n\tconst signal = {\n\t\tctx: component_context,\n\t\tdeps: null,\n\t\teffects: null,\n\t\tequals,\n\t\tf: flags,\n\t\tfn,\n\t\treactions: null,\n\t\trv: 0,\n\t\tv: /** @type {V} */ (null),\n\t\twv: 0,\n\t\tparent: parent_derived ?? active_effect\n\t};\n\n\tif (DEV && tracing_mode_flag) {\n\t\tsignal.created = get_stack('CreatedAt');\n\t}\n\n\treturn signal;\n}\n\n/**\n * @template V\n * @param {() => V} fn\n * @returns {Derived<V>}\n */\n/*#__NO_SIDE_EFFECTS__*/\nexport function user_derived(fn) {\n\tconst d = derived(fn);\n\n\tpush_reaction_value(d);\n\n\treturn d;\n}\n\n/**\n * @template V\n * @param {() => V} fn\n * @returns {Derived<V>}\n */\n/*#__NO_SIDE_EFFECTS__*/\nexport function derived_safe_equal(fn) {\n\tconst signal = derived(fn);\n\tsignal.equals = safe_equals;\n\treturn signal;\n}\n\n/**\n * @param {Derived} derived\n * @returns {void}\n */\nexport function destroy_derived_effects(derived) {\n\tvar effects = derived.effects;\n\n\tif (effects !== null) {\n\t\tderived.effects = null;\n\n\t\tfor (var i = 0; i < effects.length; i += 1) {\n\t\t\tdestroy_effect(/** @type {Effect} */ (effects[i]));\n\t\t}\n\t}\n}\n\n/**\n * The currently updating deriveds, used to detect infinite recursion\n * in dev mode and provide a nicer error than 'too much recursion'\n * @type {Derived[]}\n */\nlet stack = [];\n\n/**\n * @param {Derived} derived\n * @returns {Effect | null}\n */\nfunction get_derived_parent_effect(derived) {\n\tvar parent = derived.parent;\n\twhile (parent !== null) {\n\t\tif ((parent.f & DERIVED) === 0) {\n\t\t\treturn /** @type {Effect} */ (parent);\n\t\t}\n\t\tparent = parent.parent;\n\t}\n\treturn null;\n}\n\n/**\n * @template T\n * @param {Derived} derived\n * @returns {T}\n */\nexport function execute_derived(derived) {\n\tvar value;\n\tvar prev_active_effect = active_effect;\n\n\tset_active_effect(get_derived_parent_effect(derived));\n\n\tif (DEV) {\n\t\tlet prev_inspect_effects = inspect_effects;\n\t\tset_inspect_effects(new Set());\n\t\ttry {\n\t\t\tif (stack.includes(derived)) {\n\t\t\t\te.derived_references_self();\n\t\t\t}\n\n\t\t\tstack.push(derived);\n\n\t\t\tdestroy_derived_effects(derived);\n\t\t\tvalue = update_reaction(derived);\n\t\t} finally {\n\t\t\tset_active_effect(prev_active_effect);\n\t\t\tset_inspect_effects(prev_inspect_effects);\n\t\t\tstack.pop();\n\t\t}\n\t} else {\n\t\ttry {\n\t\t\tdestroy_derived_effects(derived);\n\t\t\tvalue = update_reaction(derived);\n\t\t} finally {\n\t\t\tset_active_effect(prev_active_effect);\n\t\t}\n\t}\n\n\treturn value;\n}\n\n/**\n * @param {Derived} derived\n * @returns {void}\n */\nexport function update_derived(derived) {\n\tvar value = execute_derived(derived);\n\tvar status =\n\t\t(skip_reaction || (derived.f & UNOWNED) !== 0) && derived.deps !== null ? MAYBE_DIRTY : CLEAN;\n\n\tset_signal_status(derived, status);\n\n\tif (!derived.equals(value)) {\n\t\tderived.v = value;\n\t\tderived.wv = increment_write_version();\n\t}\n}\n","/** @import { ComponentContext, ComponentContextLegacy, Derived, Effect, TemplateNode, TransitionManager } from '#client' */\nimport {\n\tcheck_dirtiness,\n\tactive_effect,\n\tactive_reaction,\n\tupdate_effect,\n\tget,\n\tis_destroying_effect,\n\tremove_reactions,\n\tschedule_effect,\n\tset_active_reaction,\n\tset_is_destroying_effect,\n\tset_signal_status,\n\tuntrack,\n\tuntracking\n} from '../runtime.js';\nimport {\n\tDIRTY,\n\tBRANCH_EFFECT,\n\tRENDER_EFFECT,\n\tEFFECT,\n\tDESTROYED,\n\tINERT,\n\tEFFECT_RAN,\n\tBLOCK_EFFECT,\n\tROOT_EFFECT,\n\tEFFECT_TRANSPARENT,\n\tDERIVED,\n\tUNOWNED,\n\tCLEAN,\n\tINSPECT_EFFECT,\n\tHEAD_EFFECT,\n\tMAYBE_DIRTY,\n\tEFFECT_HAS_DERIVED,\n\tBOUNDARY_EFFECT\n} from '#client/constants';\nimport { set } from './sources.js';\nimport * as e from '../errors.js';\nimport { DEV } from 'esm-env';\nimport { define_property } from '../../shared/utils.js';\nimport { get_next_sibling } from '../dom/operations.js';\nimport { derived } from './deriveds.js';\nimport { component_context, dev_current_component_function } from '../context.js';\n\n/**\n * @param {'$effect' | '$effect.pre' | '$inspect'} rune\n */\nexport function validate_effect(rune) {\n\tif (active_effect === null && active_reaction === null) {\n\t\te.effect_orphan(rune);\n\t}\n\n\tif (active_reaction !== null && (active_reaction.f & UNOWNED) !== 0 && active_effect === null) {\n\t\te.effect_in_unowned_derived();\n\t}\n\n\tif (is_destroying_effect) {\n\t\te.effect_in_teardown(rune);\n\t}\n}\n\n/**\n * @param {Effect} effect\n * @param {Effect} parent_effect\n */\nfunction push_effect(effect, parent_effect) {\n\tvar parent_last = parent_effect.last;\n\tif (parent_last === null) {\n\t\tparent_effect.last = parent_effect.first = effect;\n\t} else {\n\t\tparent_last.next = effect;\n\t\teffect.prev = parent_last;\n\t\tparent_effect.last = effect;\n\t}\n}\n\n/**\n * @param {number} type\n * @param {null | (() => void | (() => void))} fn\n * @param {boolean} sync\n * @param {boolean} push\n * @returns {Effect}\n */\nfunction create_effect(type, fn, sync, push = true) {\n\tvar parent = active_effect;\n\n\tif (DEV) {\n\t\t// Ensure the parent is never an inspect effect\n\t\twhile (parent !== null && (parent.f & INSPECT_EFFECT) !== 0) {\n\t\t\tparent = parent.parent;\n\t\t}\n\t}\n\n\t/** @type {Effect} */\n\tvar effect = {\n\t\tctx: component_context,\n\t\tdeps: null,\n\t\tnodes_start: null,\n\t\tnodes_end: null,\n\t\tf: type | DIRTY,\n\t\tfirst: null,\n\t\tfn,\n\t\tlast: null,\n\t\tnext: null,\n\t\tparent,\n\t\tprev: null,\n\t\tteardown: null,\n\t\ttransitions: null,\n\t\twv: 0\n\t};\n\n\tif (DEV) {\n\t\teffect.component_function = dev_current_component_function;\n\t}\n\n\tif (sync) {\n\t\ttry {\n\t\t\tupdate_effect(effect);\n\t\t\teffect.f |= EFFECT_RAN;\n\t\t} catch (e) {\n\t\t\tdestroy_effect(effect);\n\t\t\tthrow e;\n\t\t}\n\t} else if (fn !== null) {\n\t\tschedule_effect(effect);\n\t}\n\n\t// if an effect has no dependencies, no DOM and no teardown function,\n\t// don't bother adding it to the effect tree\n\tvar inert =\n\t\tsync &&\n\t\teffect.deps === null &&\n\t\teffect.first === null &&\n\t\teffect.nodes_start === null &&\n\t\teffect.teardown === null &&\n\t\t(effect.f & (EFFECT_HAS_DERIVED | BOUNDARY_EFFECT)) === 0;\n\n\tif (!inert && push) {\n\t\tif (parent !== null) {\n\t\t\tpush_effect(effect, parent);\n\t\t}\n\n\t\t// if we're in a derived, add the effect there too\n\t\tif (active_reaction !== null && (active_reaction.f & DERIVED) !== 0) {\n\t\t\tvar derived = /** @type {Derived} */ (active_reaction);\n\t\t\t(derived.effects ??= []).push(effect);\n\t\t}\n\t}\n\n\treturn effect;\n}\n\n/**\n * Internal representation of `$effect.tracking()`\n * @returns {boolean}\n */\nexport function effect_tracking() {\n\treturn active_reaction !== null && !untracking;\n}\n\n/**\n * @param {() => void} fn\n */\nexport function teardown(fn) {\n\tconst effect = create_effect(RENDER_EFFECT, null, false);\n\tset_signal_status(effect, CLEAN);\n\teffect.teardown = fn;\n\treturn effect;\n}\n\n/**\n * Internal representation of `$effect(...)`\n * @param {() => void | (() => void)} fn\n */\nexport function user_effect(fn) {\n\tvalidate_effect('$effect');\n\n\t// Non-nested `$effect(...)` in a component should be deferred\n\t// until the component is mounted\n\tvar defer =\n\t\tactive_effect !== null &&\n\t\t(active_effect.f & BRANCH_EFFECT) !== 0 &&\n\t\tcomponent_context !== null &&\n\t\t!component_context.m;\n\n\tif (DEV) {\n\t\tdefine_property(fn, 'name', {\n\t\t\tvalue: '$effect'\n\t\t});\n\t}\n\n\tif (defer) {\n\t\tvar context = /** @type {ComponentContext} */ (component_context);\n\t\t(context.e ??= []).push({\n\t\t\tfn,\n\t\t\teffect: active_effect,\n\t\t\treaction: active_reaction\n\t\t});\n\t} else {\n\t\tvar signal = effect(fn);\n\t\treturn signal;\n\t}\n}\n\n/**\n * Internal representation of `$effect.pre(...)`\n * @param {() => void | (() => void)} fn\n * @returns {Effect}\n */\nexport function user_pre_effect(fn) {\n\tvalidate_effect('$effect.pre');\n\tif (DEV) {\n\t\tdefine_property(fn, 'name', {\n\t\t\tvalue: '$effect.pre'\n\t\t});\n\t}\n\treturn render_effect(fn);\n}\n\n/** @param {() => void | (() => void)} fn */\nexport function inspect_effect(fn) {\n\treturn create_effect(INSPECT_EFFECT, fn, true);\n}\n\n/**\n * Internal representation of `$effect.root(...)`\n * @param {() => void | (() => void)} fn\n * @returns {() => void}\n */\nexport function effect_root(fn) {\n\tconst effect = create_effect(ROOT_EFFECT, fn, true);\n\n\treturn () => {\n\t\tdestroy_effect(effect);\n\t};\n}\n\n/**\n * An effect root whose children can transition out\n * @param {() => void} fn\n * @returns {(options?: { outro?: boolean }) => Promise<void>}\n */\nexport function component_root(fn) {\n\tconst effect = create_effect(ROOT_EFFECT, fn, true);\n\n\treturn (options = {}) => {\n\t\treturn new Promise((fulfil) => {\n\t\t\tif (options.outro) {\n\t\t\t\tpause_effect(effect, () => {\n\t\t\t\t\tdestroy_effect(effect);\n\t\t\t\t\tfulfil(undefined);\n\t\t\t\t});\n\t\t\t} else {\n\t\t\t\tdestroy_effect(effect);\n\t\t\t\tfulfil(undefined);\n\t\t\t}\n\t\t});\n\t};\n}\n\n/**\n * @param {() => void | (() => void)} fn\n * @returns {Effect}\n */\nexport function effect(fn) {\n\treturn create_effect(EFFECT, fn, false);\n}\n\n/**\n * Internal representation of `$: ..`\n * @param {() => any} deps\n * @param {() => void | (() => void)} fn\n */\nexport function legacy_pre_effect(deps, fn) {\n\tvar context = /** @type {ComponentContextLegacy} */ (component_context);\n\n\t/** @type {{ effect: null | Effect, ran: boolean }} */\n\tvar token = { effect: null, ran: false };\n\tcontext.l.r1.push(token);\n\n\ttoken.effect = render_effect(() => {\n\t\tdeps();\n\n\t\t// If this legacy pre effect has already run before the end of the reset, then\n\t\t// bail out to emulate the same behavior.\n\t\tif (token.ran) return;\n\n\t\ttoken.ran = true;\n\t\tset(context.l.r2, true);\n\t\tuntrack(fn);\n\t});\n}\n\nexport function legacy_pre_effect_reset() {\n\tvar context = /** @type {ComponentContextLegacy} */ (component_context);\n\n\trender_effect(() => {\n\t\tif (!get(context.l.r2)) return;\n\n\t\t// Run dirty `$:` statements\n\t\tfor (var token of context.l.r1) {\n\t\t\tvar effect = token.effect;\n\n\t\t\t// If the effect is CLEAN, then make it MAYBE_DIRTY. This ensures we traverse through\n\t\t\t// the effects dependencies and correctly ensure each dependency is up-to-date.\n\t\t\tif ((effect.f & CLEAN) !== 0) {\n\t\t\t\tset_signal_status(effect, MAYBE_DIRTY);\n\t\t\t}\n\n\t\t\tif (check_dirtiness(effect)) {\n\t\t\t\tupdate_effect(effect);\n\t\t\t}\n\n\t\t\ttoken.ran = false;\n\t\t}\n\n\t\tcontext.l.r2.v = false; // set directly to avoid rerunning this effect\n\t});\n}\n\n/**\n * @param {() => void | (() => void)} fn\n * @returns {Effect}\n */\nexport function render_effect(fn) {\n\treturn create_effect(RENDER_EFFECT, fn, true);\n}\n\n/**\n * @param {(...expressions: any) => void | (() => void)} fn\n * @param {Array<() => any>} thunks\n * @returns {Effect}\n */\nexport function template_effect(fn, thunks = [], d = derived) {\n\tconst deriveds = thunks.map(d);\n\tconst effect = () => fn(...deriveds.map(get));\n\n\tif (DEV) {\n\t\tdefine_property(effect, 'name', {\n\t\t\tvalue: '{expression}'\n\t\t});\n\t}\n\n\treturn block(effect);\n}\n\n/**\n * @param {(() => void)} fn\n * @param {number} flags\n */\nexport function block(fn, flags = 0) {\n\treturn create_effect(RENDER_EFFECT | BLOCK_EFFECT | flags, fn, true);\n}\n\n/**\n * @param {(() => void)} fn\n * @param {boolean} [push]\n */\nexport function branch(fn, push = true) {\n\treturn create_effect(RENDER_EFFECT | BRANCH_EFFECT, fn, true, push);\n}\n\n/**\n * @param {Effect} effect\n */\nexport function execute_effect_teardown(effect) {\n\tvar teardown = effect.teardown;\n\tif (teardown !== null) {\n\t\tconst previously_destroying_effect = is_destroying_effect;\n\t\tconst previous_reaction = active_reaction;\n\t\tset_is_destroying_effect(true);\n\t\tset_active_reaction(null);\n\t\ttry {\n\t\t\tteardown.call(null);\n\t\t} finally {\n\t\t\tset_is_destroying_effect(previously_destroying_effect);\n\t\t\tset_active_reaction(previous_reaction);\n\t\t}\n\t}\n}\n\n/**\n * @param {Effect} signal\n * @param {boolean} remove_dom\n * @returns {void}\n */\nexport function destroy_effect_children(signal, remove_dom = false) {\n\tvar effect = signal.first;\n\tsignal.first = signal.last = null;\n\n\twhile (effect !== null) {\n\t\tvar next = effect.next;\n\n\t\tif ((effect.f & ROOT_EFFECT) !== 0) {\n\t\t\t// this is now an independent root\n\t\t\teffect.parent = null;\n\t\t} else {\n\t\t\tdestroy_effect(effect, remove_dom);\n\t\t}\n\n\t\teffect = next;\n\t}\n}\n\n/**\n * @param {Effect} signal\n * @returns {void}\n */\nexport function destroy_block_effect_children(signal) {\n\tvar effect = signal.first;\n\n\twhile (effect !== null) {\n\t\tvar next = effect.next;\n\t\tif ((effect.f & BRANCH_EFFECT) === 0) {\n\t\t\tdestroy_effect(effect);\n\t\t}\n\t\teffect = next;\n\t}\n}\n\n/**\n * @param {Effect} effect\n * @param {boolean} [remove_dom]\n * @returns {void}\n */\nexport function destroy_effect(effect, remove_dom = true) {\n\tvar removed = false;\n\n\tif ((remove_dom || (effect.f & HEAD_EFFECT) !== 0) && effect.nodes_start !== null) {\n\t\tremove_effect_dom(effect.nodes_start, /** @type {TemplateNode} */ (effect.nodes_end));\n\t\tremoved = true;\n\t}\n\n\tdestroy_effect_children(effect, remove_dom && !removed);\n\tremove_reactions(effect, 0);\n\tset_signal_status(effect, DESTROYED);\n\n\tvar transitions = effect.transitions;\n\n\tif (transitions !== null) {\n\t\tfor (const transition of transitions) {\n\t\t\ttransition.stop();\n\t\t}\n\t}\n\n\texecute_effect_teardown(effect);\n\n\tvar parent = effect.parent;\n\n\t// If the parent doesn't have any children, then skip this work altogether\n\tif (parent !== null && parent.first !== null) {\n\t\tunlink_effect(effect);\n\t}\n\n\tif (DEV) {\n\t\teffect.component_function = null;\n\t}\n\n\t// `first` and `child` are nulled out in destroy_effect_children\n\t// we don't null out `parent` so that error propagation can work correctly\n\teffect.next =\n\t\teffect.prev =\n\t\teffect.teardown =\n\t\teffect.ctx =\n\t\teffect.deps =\n\t\teffect.fn =\n\t\teffect.nodes_start =\n\t\teffect.nodes_end =\n\t\t\tnull;\n}\n\n/**\n *\n * @param {TemplateNode | null} node\n * @param {TemplateNode} end\n */\nexport function remove_effect_dom(node, end) {\n\twhile (node !== null) {\n\t\t/** @type {TemplateNode | null} */\n\t\tvar next = node === end ? null : /** @type {TemplateNode} */ (get_next_sibling(node));\n\n\t\tnode.remove();\n\t\tnode = next;\n\t}\n}\n\n/**\n * Detach an effect from the effect tree, freeing up memory and\n * reducing the amount of work that happens on subsequent traversals\n * @param {Effect} effect\n */\nexport function unlink_effect(effect) {\n\tvar parent = effect.parent;\n\tvar prev = effect.prev;\n\tvar next = effect.next;\n\n\tif (prev !== null) prev.next = next;\n\tif (next !== null) next.prev = prev;\n\n\tif (parent !== null) {\n\t\tif (parent.first === effect) parent.first = next;\n\t\tif (parent.last === effect) parent.last = prev;\n\t}\n}\n\n/**\n * When a block effect is removed, we don't immediately destroy it or yank it\n * out of the DOM, because it might have transitions. Instead, we 'pause' it.\n * It stays around (in memory, and in the DOM) until outro transitions have\n * completed, and if the state change is reversed then we _resume_ it.\n * A paused effect does not update, and the DOM subtree becomes inert.\n * @param {Effect} effect\n * @param {() => void} [callback]\n */\nexport function pause_effect(effect, callback) {\n\t/** @type {TransitionManager[]} */\n\tvar transitions = [];\n\n\tpause_children(effect, transitions, true);\n\n\trun_out_transitions(transitions, () => {\n\t\tdestroy_effect(effect);\n\t\tif (callback) callback();\n\t});\n}\n\n/**\n * @param {TransitionManager[]} transitions\n * @param {() => void} fn\n */\nexport function run_out_transitions(transitions, fn) {\n\tvar remaining = transitions.length;\n\tif (remaining > 0) {\n\t\tvar check = () => --remaining || fn();\n\t\tfor (var transition of transitions) {\n\t\t\ttransition.out(check);\n\t\t}\n\t} else {\n\t\tfn();\n\t}\n}\n\n/**\n * @param {Effect} effect\n * @param {TransitionManager[]} transitions\n * @param {boolean} local\n */\nexport function pause_children(effect, transitions, local) {\n\tif ((effect.f & INERT) !== 0) return;\n\teffect.f ^= INERT;\n\n\tif (effect.transitions !== null) {\n\t\tfor (const transition of effect.transitions) {\n\t\t\tif (transition.is_global || local) {\n\t\t\t\ttransitions.push(transition);\n\t\t\t}\n\t\t}\n\t}\n\n\tvar child = effect.first;\n\n\twhile (child !== null) {\n\t\tvar sibling = child.next;\n\t\tvar transparent = (child.f & EFFECT_TRANSPARENT) !== 0 || (child.f & BRANCH_EFFECT) !== 0;\n\t\t// TODO we don't need to call pause_children recursively with a linked list in place\n\t\t// it's slightly more involved though as we have to account for `transparent` changing\n\t\t// through the tree.\n\t\tpause_children(child, transitions, transparent ? local : false);\n\t\tchild = sibling;\n\t}\n}\n\n/**\n * The opposite of `pause_effect`. We call this if (for example)\n * `x` becomes falsy then truthy: `{#if x}...{/if}`\n * @param {Effect} effect\n */\nexport function resume_effect(effect) {\n\tresume_children(effect, true);\n}\n\n/**\n * @param {Effect} effect\n * @param {boolean} local\n */\nfunction resume_children(effect, local) {\n\tif ((effect.f & INERT) === 0) return;\n\teffect.f ^= INERT;\n\n\t// Ensure the effect is marked as clean again so that any dirty child\n\t// effects can schedule themselves for execution\n\tif ((effect.f & CLEAN) === 0) {\n\t\teffect.f ^= CLEAN;\n\t}\n\n\t// If a dependency of this effect changed while it was paused,\n\t// schedule the effect to update\n\tif (check_dirtiness(effect)) {\n\t\tset_signal_status(effect, DIRTY);\n\t\tschedule_effect(effect);\n\t}\n\n\tvar child = effect.first;\n\n\twhile (child !== null) {\n\t\tvar sibling = child.next;\n\t\tvar transparent = (child.f & EFFECT_TRANSPARENT) !== 0 || (child.f & BRANCH_EFFECT) !== 0;\n\t\t// TODO we don't need to call resume_children recursively with a linked list in place\n\t\t// it's slightly more involved though as we have to account for `transparent` changing\n\t\t// through the tree.\n\t\tresume_children(child, transparent ? local : false);\n\t\tchild = sibling;\n\t}\n\n\tif (effect.transitions !== null) {\n\t\tfor (const transition of effect.transitions) {\n\t\t\tif (transition.is_global || local) {\n\t\t\t\ttransition.in();\n\t\t\t}\n\t\t}\n\t}\n}\n","import { run_all } from '../../shared/utils.js';\n\n// Fallback for when requestIdleCallback is not available\nconst request_idle_callback =\n\ttypeof requestIdleCallback === 'undefined'\n\t\t? (/** @type {() => void} */ cb) => setTimeout(cb, 1)\n\t\t: requestIdleCallback;\n\n/** @type {Array<() => void>} */\nlet micro_tasks = [];\n\n/** @type {Array<() => void>} */\nlet idle_tasks = [];\n\nfunction run_micro_tasks() {\n\tvar tasks = micro_tasks;\n\tmicro_tasks = [];\n\trun_all(tasks);\n}\n\nfunction run_idle_tasks() {\n\tvar tasks = idle_tasks;\n\tidle_tasks = [];\n\trun_all(tasks);\n}\n\n/**\n * @param {() => void} fn\n */\nexport function queue_micro_task(fn) {\n\tif (micro_tasks.length === 0) {\n\t\tqueueMicrotask(run_micro_tasks);\n\t}\n\n\tmicro_tasks.push(fn);\n}\n\n/**\n * @param {() => void} fn\n */\nexport function queue_idle_task(fn) {\n\tif (idle_tasks.length === 0) {\n\t\trequest_idle_callback(run_idle_tasks);\n\t}\n\n\tidle_tasks.push(fn);\n}\n\n/**\n * Synchronously run any queued tasks.\n */\nexport function flush_tasks() {\n\tif (micro_tasks.length > 0) {\n\t\trun_micro_tasks();\n\t}\n\n\tif (idle_tasks.length > 0) {\n\t\trun_idle_tasks();\n\t}\n}\n","/** @import { ComponentContext, Derived, Effect, Reaction, Signal, Source, Value } from '#client' */\nimport { DEV } from 'esm-env';\nimport { define_property, get_descriptors, get_prototype_of, index_of } from '../shared/utils.js';\nimport {\n\tdestroy_block_effect_children,\n\tdestroy_effect_children,\n\texecute_effect_teardown,\n\tunlink_effect\n} from './reactivity/effects.js';\nimport {\n\tEFFECT,\n\tDIRTY,\n\tMAYBE_DIRTY,\n\tCLEAN,\n\tDERIVED,\n\tUNOWNED,\n\tDESTROYED,\n\tINERT,\n\tBRANCH_EFFECT,\n\tSTATE_SYMBOL,\n\tBLOCK_EFFECT,\n\tROOT_EFFECT,\n\tLEGACY_DERIVED_PROP,\n\tDISCONNECTED,\n\tBOUNDARY_EFFECT,\n\tEFFECT_IS_UPDATING\n} from './constants.js';\nimport { flush_tasks } from './dom/task.js';\nimport { internal_set, old_values } from './reactivity/sources.js';\nimport { destroy_derived_effects, update_derived } from './reactivity/deriveds.js';\nimport * as e from './errors.js';\nimport { FILENAME } from '../../constants.js';\nimport { tracing_mode_flag } from '../flags/index.js';\nimport { tracing_expressions, get_stack } from './dev/tracing.js';\nimport {\n\tcomponent_context,\n\tdev_current_component_function,\n\tis_runes,\n\tset_component_context,\n\tset_dev_current_component_function\n} from './context.js';\nimport { is_firefox } from './dom/operations.js';\n\n// Used for DEV time error handling\n/** @param {WeakSet<Error>} value */\nconst handled_errors = new WeakSet();\nlet is_throwing_error = false;\n\nlet is_flushing = false;\n\n/** @type {Effect | null} */\nlet last_scheduled_effect = null;\n\nlet is_updating_effect = false;\n\nexport let is_destroying_effect = false;\n\n/** @param {boolean} value */\nexport function set_is_destroying_effect(value) {\n\tis_destroying_effect = value;\n}\n\n// Handle effect queues\n\n/** @type {Effect[]} */\nlet queued_root_effects = [];\n\n/** @type {Effect[]} Stack of effects, dev only */\nlet dev_effect_stack = [];\n// Handle signal reactivity tree dependencies and reactions\n\n/** @type {null | Reaction} */\nexport let active_reaction = null;\n\nexport let untracking = false;\n\n/** @param {null | Reaction} reaction */\nexport function set_active_reaction(reaction) {\n\tactive_reaction = reaction;\n}\n\n/** @type {null | Effect} */\nexport let active_effect = null;\n\n/** @param {null | Effect} effect */\nexport function set_active_effect(effect) {\n\tactive_effect = effect;\n}\n\n/**\n * When sources are created within a reaction, reading and writing\n * them should not cause a re-run\n * @type {null | Source[]}\n */\nexport let reaction_sources = null;\n\n/** @param {Value} value */\nexport function push_reaction_value(value) {\n\tif (active_reaction !== null && active_reaction.f & EFFECT_IS_UPDATING) {\n\t\tif (reaction_sources === null) {\n\t\t\treaction_sources = [value];\n\t\t} else {\n\t\t\treaction_sources.push(value);\n\t\t}\n\t}\n}\n\n/**\n * The dependencies of the reaction that is currently being executed. In many cases,\n * the dependencies are unchanged between runs, and so this will be `null` unless\n * and until a new dependency is accessed — we track this via `skipped_deps`\n * @type {null | Value[]}\n */\nlet new_deps = null;\n\nlet skipped_deps = 0;\n\n/**\n * Tracks writes that the effect it's executed in doesn't listen to yet,\n * so that the dependency can be added to the effect later on if it then reads it\n * @type {null | Source[]}\n */\nexport let untracked_writes = null;\n\n/** @param {null | Source[]} value */\nexport function set_untracked_writes(value) {\n\tuntracked_writes = value;\n}\n\n/**\n * @type {number} Used by sources and deriveds for handling updates.\n * Version starts from 1 so that unowned deriveds differentiate between a created effect and a run one for tracing\n **/\nlet write_version = 1;\n\n/** @type {number} Used to version each read of a source of derived to avoid duplicating depedencies inside a reaction */\nlet read_version = 0;\n\n// If we are working with a get() chain that has no active container,\n// to prevent memory leaks, we skip adding the reaction.\nexport let skip_reaction = false;\n// Handle collecting all signals which are read during a specific time frame\n/** @type {Set<Value> | null} */\nexport let captured_signals = null;\n\n/** @param {Set<Value> | null} value */\nexport function set_captured_signals(value) {\n\tcaptured_signals = value;\n}\n\nexport function increment_write_version() {\n\treturn ++write_version;\n}\n\n/**\n * Determines whether a derived or effect is dirty.\n * If it is MAYBE_DIRTY, will set the status to CLEAN\n * @param {Reaction} reaction\n * @returns {boolean}\n */\nexport function check_dirtiness(reaction) {\n\tvar flags = reaction.f;\n\n\tif ((flags & DIRTY) !== 0) {\n\t\treturn true;\n\t}\n\n\tif ((flags & MAYBE_DIRTY) !== 0) {\n\t\tvar dependencies = reaction.deps;\n\t\tvar is_unowned = (flags & UNOWNED) !== 0;\n\n\t\tif (dependencies !== null) {\n\t\t\tvar i;\n\t\t\tvar dependency;\n\t\t\tvar is_disconnected = (flags & DISCONNECTED) !== 0;\n\t\t\tvar is_unowned_connected = is_unowned && active_effect !== null && !skip_reaction;\n\t\t\tvar length = dependencies.length;\n\n\t\t\t// If we are working with a disconnected or an unowned signal that is now connected (due to an active effect)\n\t\t\t// then we need to re-connect the reaction to the dependency\n\t\t\tif (is_disconnected || is_unowned_connected) {\n\t\t\t\tvar derived = /** @type {Derived} */ (reaction);\n\t\t\t\tvar parent = derived.parent;\n\n\t\t\t\tfor (i = 0; i < length; i++) {\n\t\t\t\t\tdependency = dependencies[i];\n\n\t\t\t\t\t// We always re-add all reactions (even duplicates) if the derived was\n\t\t\t\t\t// previously disconnected, however we don't if it was unowned as we\n\t\t\t\t\t// de-duplicate dependencies in that case\n\t\t\t\t\tif (is_disconnected || !dependency?.reactions?.includes(derived)) {\n\t\t\t\t\t\t(dependency.reactions ??= []).push(derived);\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tif (is_disconnected) {\n\t\t\t\t\tderived.f ^= DISCONNECTED;\n\t\t\t\t}\n\t\t\t\t// If the unowned derived is now fully connected to the graph again (it's unowned and reconnected, has a parent\n\t\t\t\t// and the parent is not unowned), then we can mark it as connected again, removing the need for the unowned\n\t\t\t\t// flag\n\t\t\t\tif (is_unowned_connected && parent !== null && (parent.f & UNOWNED) === 0) {\n\t\t\t\t\tderived.f ^= UNOWNED;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tfor (i = 0; i < length; i++) {\n\t\t\t\tdependency = dependencies[i];\n\n\t\t\t\tif (check_dirtiness(/** @type {Derived} */ (dependency))) {\n\t\t\t\t\tupdate_derived(/** @type {Derived} */ (dependency));\n\t\t\t\t}\n\n\t\t\t\tif (dependency.wv > reaction.wv) {\n\t\t\t\t\treturn true;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\t// Unowned signals should never be marked as clean unless they\n\t\t// are used within an active_effect without skip_reaction\n\t\tif (!is_unowned || (active_effect !== null && !skip_reaction)) {\n\t\t\tset_signal_status(reaction, CLEAN);\n\t\t}\n\t}\n\n\treturn false;\n}\n\n/**\n * @param {unknown} error\n * @param {Effect} effect\n */\nfunction propagate_error(error, effect) {\n\t/** @type {Effect | null} */\n\tvar current = effect;\n\n\twhile (current !== null) {\n\t\tif ((current.f & BOUNDARY_EFFECT) !== 0) {\n\t\t\ttry {\n\t\t\t\t// @ts-expect-error\n\t\t\t\tcurrent.fn(error);\n\t\t\t\treturn;\n\t\t\t} catch {\n\t\t\t\t// Remove boundary flag from effect\n\t\t\t\tcurrent.f ^= BOUNDARY_EFFECT;\n\t\t\t}\n\t\t}\n\n\t\tcurrent = current.parent;\n\t}\n\n\tis_throwing_error = false;\n\tthrow error;\n}\n\n/**\n * @param {Effect} effect\n */\nfunction should_rethrow_error(effect) {\n\treturn (\n\t\t(effect.f & DESTROYED) === 0 &&\n\t\t(effect.parent === null || (effect.parent.f & BOUNDARY_EFFECT) === 0)\n\t);\n}\n\nexport function reset_is_throwing_error() {\n\tis_throwing_error = false;\n}\n\n/**\n * @param {unknown} error\n * @param {Effect} effect\n * @param {Effect | null} previous_effect\n * @param {ComponentContext | null} component_context\n */\nexport function handle_error(error, effect, previous_effect, component_context) {\n\tif (is_throwing_error) {\n\t\tif (previous_effect === null) {\n\t\t\tis_throwing_error = false;\n\t\t}\n\n\t\tif (should_rethrow_error(effect)) {\n\t\t\tthrow error;\n\t\t}\n\n\t\treturn;\n\t}\n\n\tif (previous_effect !== null) {\n\t\tis_throwing_error = true;\n\t}\n\n\tif (DEV && component_context !== null && error instanceof Error && !handled_errors.has(error)) {\n\t\thandled_errors.add(error);\n\n\t\tconst component_stack = [];\n\n\t\tconst effect_name = effect.fn?.name;\n\n\t\tif (effect_name) {\n\t\t\tcomponent_stack.push(effect_name);\n\t\t}\n\n\t\t/** @type {ComponentContext | null} */\n\t\tlet current_context = component_context;\n\n\t\twhile (current_context !== null) {\n\t\t\t/** @type {string} */\n\t\t\tvar filename = current_context.function?.[FILENAME];\n\n\t\t\tif (filename) {\n\t\t\t\tconst file = filename.split('/').pop();\n\t\t\t\tcomponent_stack.push(file);\n\t\t\t}\n\n\t\t\tcurrent_context = current_context.p;\n\t\t}\n\n\t\tconst indent = is_firefox ? '  ' : '\\t';\n\t\tdefine_property(error, 'message', {\n\t\t\tvalue:\n\t\t\t\terror.message + `\\n${component_stack.map((name) => `\\n${indent}in ${name}`).join('')}\\n`\n\t\t});\n\t\tdefine_property(error, 'component_stack', {\n\t\t\tvalue: component_stack\n\t\t});\n\n\t\tconst stack = error.stack;\n\n\t\t// Filter out internal files from callstack\n\t\tif (stack) {\n\t\t\tconst lines = stack.split('\\n');\n\t\t\tconst new_lines = [];\n\t\t\tfor (let i = 0; i < lines.length; i++) {\n\t\t\t\tconst line = lines[i];\n\t\t\t\tif (line.includes('svelte/src/internal')) {\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\t\t\t\tnew_lines.push(line);\n\t\t\t}\n\t\t\tdefine_property(error, 'stack', {\n\t\t\t\tvalue: new_lines.join('\\n')\n\t\t\t});\n\t\t}\n\t}\n\n\tpropagate_error(error, effect);\n\n\tif (should_rethrow_error(effect)) {\n\t\tthrow error;\n\t}\n}\n\n/**\n * @param {Value} signal\n * @param {Effect} effect\n * @param {boolean} [root]\n */\nfunction schedule_possible_effect_self_invalidation(signal, effect, root = true) {\n\tvar reactions = signal.reactions;\n\tif (reactions === null) return;\n\n\tfor (var i = 0; i < reactions.length; i++) {\n\t\tvar reaction = reactions[i];\n\n\t\tif (reaction_sources?.includes(signal)) continue;\n\n\t\tif ((reaction.f & DERIVED) !== 0) {\n\t\t\tschedule_possible_effect_self_invalidation(/** @type {Derived} */ (reaction), effect, false);\n\t\t} else if (effect === reaction) {\n\t\t\tif (root) {\n\t\t\t\tset_signal_status(reaction, DIRTY);\n\t\t\t} else if ((reaction.f & CLEAN) !== 0) {\n\t\t\t\tset_signal_status(reaction, MAYBE_DIRTY);\n\t\t\t}\n\t\t\tschedule_effect(/** @type {Effect} */ (reaction));\n\t\t}\n\t}\n}\n\n/**\n * @template V\n * @param {Reaction} reaction\n * @returns {V}\n */\nexport function update_reaction(reaction) {\n\tvar previous_deps = new_deps;\n\tvar previous_skipped_deps = skipped_deps;\n\tvar previous_untracked_writes = untracked_writes;\n\tvar previous_reaction = active_reaction;\n\tvar previous_skip_reaction = skip_reaction;\n\tvar previous_reaction_sources = reaction_sources;\n\tvar previous_component_context = component_context;\n\tvar previous_untracking = untracking;\n\n\tvar flags = reaction.f;\n\n\tnew_deps = /** @type {null | Value[]} */ (null);\n\tskipped_deps = 0;\n\tuntracked_writes = null;\n\tskip_reaction =\n\t\t(flags & UNOWNED) !== 0 && (untracking || !is_updating_effect || active_reaction === null);\n\tactive_reaction = (flags & (BRANCH_EFFECT | ROOT_EFFECT)) === 0 ? reaction : null;\n\n\treaction_sources = null;\n\tset_component_context(reaction.ctx);\n\tuntracking = false;\n\tread_version++;\n\n\treaction.f |= EFFECT_IS_UPDATING;\n\n\ttry {\n\t\tvar result = /** @type {Function} */ (0, reaction.fn)();\n\t\tvar deps = reaction.deps;\n\n\t\tif (new_deps !== null) {\n\t\t\tvar i;\n\n\t\t\tremove_reactions(reaction, skipped_deps);\n\n\t\t\tif (deps !== null && skipped_deps > 0) {\n\t\t\t\tdeps.length = skipped_deps + new_deps.length;\n\t\t\t\tfor (i = 0; i < new_deps.length; i++) {\n\t\t\t\t\tdeps[skipped_deps + i] = new_deps[i];\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\treaction.deps = deps = new_deps;\n\t\t\t}\n\n\t\t\tif (!skip_reaction) {\n\t\t\t\tfor (i = skipped_deps; i < deps.length; i++) {\n\t\t\t\t\t(deps[i].reactions ??= []).push(reaction);\n\t\t\t\t}\n\t\t\t}\n\t\t} else if (deps !== null && skipped_deps < deps.length) {\n\t\t\tremove_reactions(reaction, skipped_deps);\n\t\t\tdeps.length = skipped_deps;\n\t\t}\n\n\t\t// If we're inside an effect and we have untracked writes, then we need to\n\t\t// ensure that if any of those untracked writes result in re-invalidation\n\t\t// of the current effect, then that happens accordingly\n\t\tif (\n\t\t\tis_runes() &&\n\t\t\tuntracked_writes !== null &&\n\t\t\t!untracking &&\n\t\t\tdeps !== null &&\n\t\t\t(reaction.f & (DERIVED | MAYBE_DIRTY | DIRTY)) === 0\n\t\t) {\n\t\t\tfor (i = 0; i < /** @type {Source[]} */ (untracked_writes).length; i++) {\n\t\t\t\tschedule_possible_effect_self_invalidation(\n\t\t\t\t\tuntracked_writes[i],\n\t\t\t\t\t/** @type {Effect} */ (reaction)\n\t\t\t\t);\n\t\t\t}\n\t\t}\n\n\t\t// If we are returning to an previous reaction then\n\t\t// we need to increment the read version to ensure that\n\t\t// any dependencies in this reaction aren't marked with\n\t\t// the same version\n\t\tif (previous_reaction !== null && previous_reaction !== reaction) {\n\t\t\tread_version++;\n\n\t\t\tif (untracked_writes !== null) {\n\t\t\t\tif (previous_untracked_writes === null) {\n\t\t\t\t\tprevious_untracked_writes = untracked_writes;\n\t\t\t\t} else {\n\t\t\t\t\tprevious_untracked_writes.push(.../** @type {Source[]} */ (untracked_writes));\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\treturn result;\n\t} finally {\n\t\tnew_deps = previous_deps;\n\t\tskipped_deps = previous_skipped_deps;\n\t\tuntracked_writes = previous_untracked_writes;\n\t\tactive_reaction = previous_reaction;\n\t\tskip_reaction = previous_skip_reaction;\n\t\treaction_sources = previous_reaction_sources;\n\t\tset_component_context(previous_component_context);\n\t\tuntracking = previous_untracking;\n\n\t\treaction.f ^= EFFECT_IS_UPDATING;\n\t}\n}\n\n/**\n * @template V\n * @param {Reaction} signal\n * @param {Value<V>} dependency\n * @returns {void}\n */\nfunction remove_reaction(signal, dependency) {\n\tlet reactions = dependency.reactions;\n\tif (reactions !== null) {\n\t\tvar index = index_of.call(reactions, signal);\n\t\tif (index !== -1) {\n\t\t\tvar new_length = reactions.length - 1;\n\t\t\tif (new_length === 0) {\n\t\t\t\treactions = dependency.reactions = null;\n\t\t\t} else {\n\t\t\t\t// Swap with last element and then remove.\n\t\t\t\treactions[index] = reactions[new_length];\n\t\t\t\treactions.pop();\n\t\t\t}\n\t\t}\n\t}\n\t// If the derived has no reactions, then we can disconnect it from the graph,\n\t// allowing it to either reconnect in the future, or be GC'd by the VM.\n\tif (\n\t\treactions === null &&\n\t\t(dependency.f & DERIVED) !== 0 &&\n\t\t// Destroying a child effect while updating a parent effect can cause a dependency to appear\n\t\t// to be unused, when in fact it is used by the currently-updating parent. Checking `new_deps`\n\t\t// allows us to skip the expensive work of disconnecting and immediately reconnecting it\n\t\t(new_deps === null || !new_deps.includes(dependency))\n\t) {\n\t\tset_signal_status(dependency, MAYBE_DIRTY);\n\t\t// If we are working with a derived that is owned by an effect, then mark it as being\n\t\t// disconnected.\n\t\tif ((dependency.f & (UNOWNED | DISCONNECTED)) === 0) {\n\t\t\tdependency.f ^= DISCONNECTED;\n\t\t}\n\t\t// Disconnect any reactions owned by this reaction\n\t\tdestroy_derived_effects(/** @type {Derived} **/ (dependency));\n\t\tremove_reactions(/** @type {Derived} **/ (dependency), 0);\n\t}\n}\n\n/**\n * @param {Reaction} signal\n * @param {number} start_index\n * @returns {void}\n */\nexport function remove_reactions(signal, start_index) {\n\tvar dependencies = signal.deps;\n\tif (dependencies === null) return;\n\n\tfor (var i = start_index; i < dependencies.length; i++) {\n\t\tremove_reaction(signal, dependencies[i]);\n\t}\n}\n\n/**\n * @param {Effect} effect\n * @returns {void}\n */\nexport function update_effect(effect) {\n\tvar flags = effect.f;\n\n\tif ((flags & DESTROYED) !== 0) {\n\t\treturn;\n\t}\n\n\tset_signal_status(effect, CLEAN);\n\n\tvar previous_effect = active_effect;\n\tvar previous_component_context = component_context;\n\tvar was_updating_effect = is_updating_effect;\n\n\tactive_effect = effect;\n\tis_updating_effect = true;\n\n\tif (DEV) {\n\t\tvar previous_component_fn = dev_current_component_function;\n\t\tset_dev_current_component_function(effect.component_function);\n\t}\n\n\ttry {\n\t\tif ((flags & BLOCK_EFFECT) !== 0) {\n\t\t\tdestroy_block_effect_children(effect);\n\t\t} else {\n\t\t\tdestroy_effect_children(effect);\n\t\t}\n\n\t\texecute_effect_teardown(effect);\n\t\tvar teardown = update_reaction(effect);\n\t\teffect.teardown = typeof teardown === 'function' ? teardown : null;\n\t\teffect.wv = write_version;\n\n\t\tvar deps = effect.deps;\n\n\t\t// In DEV, we need to handle a case where $inspect.trace() might\n\t\t// incorrectly state a source dependency has not changed when it has.\n\t\t// That's beacuse that source was changed by the same effect, causing\n\t\t// the versions to match. We can avoid this by incrementing the version\n\t\tif (DEV && tracing_mode_flag && (effect.f & DIRTY) !== 0 && deps !== null) {\n\t\t\tfor (let i = 0; i < deps.length; i++) {\n\t\t\t\tvar dep = deps[i];\n\t\t\t\tif (dep.trace_need_increase) {\n\t\t\t\t\tdep.wv = increment_write_version();\n\t\t\t\t\tdep.trace_need_increase = undefined;\n\t\t\t\t\tdep.trace_v = undefined;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tif (DEV) {\n\t\t\tdev_effect_stack.push(effect);\n\t\t}\n\t} catch (error) {\n\t\thandle_error(error, effect, previous_effect, previous_component_context || effect.ctx);\n\t} finally {\n\t\tis_updating_effect = was_updating_effect;\n\t\tactive_effect = previous_effect;\n\n\t\tif (DEV) {\n\t\t\tset_dev_current_component_function(previous_component_fn);\n\t\t}\n\t}\n}\n\nfunction log_effect_stack() {\n\t// eslint-disable-next-line no-console\n\tconsole.error(\n\t\t'Last ten effects were: ',\n\t\tdev_effect_stack.slice(-10).map((d) => d.fn)\n\t);\n\tdev_effect_stack = [];\n}\n\nfunction infinite_loop_guard() {\n\ttry {\n\t\te.effect_update_depth_exceeded();\n\t} catch (error) {\n\t\tif (DEV) {\n\t\t\t// stack is garbage, ignore. Instead add a console.error message.\n\t\t\tdefine_property(error, 'stack', {\n\t\t\t\tvalue: ''\n\t\t\t});\n\t\t}\n\t\t// Try and handle the error so it can be caught at a boundary, that's\n\t\t// if there's an effect available from when it was last scheduled\n\t\tif (last_scheduled_effect !== null) {\n\t\t\tif (DEV) {\n\t\t\t\ttry {\n\t\t\t\t\thandle_error(error, last_scheduled_effect, null, null);\n\t\t\t\t} catch (e) {\n\t\t\t\t\t// Only log the effect stack if the error is re-thrown\n\t\t\t\t\tlog_effect_stack();\n\t\t\t\t\tthrow e;\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\thandle_error(error, last_scheduled_effect, null, null);\n\t\t\t}\n\t\t} else {\n\t\t\tif (DEV) {\n\t\t\t\tlog_effect_stack();\n\t\t\t}\n\t\t\tthrow error;\n\t\t}\n\t}\n}\n\nfunction flush_queued_root_effects() {\n\tvar was_updating_effect = is_updating_effect;\n\n\ttry {\n\t\tvar flush_count = 0;\n\t\tis_updating_effect = true;\n\n\t\twhile (queued_root_effects.length > 0) {\n\t\t\tif (flush_count++ > 1000) {\n\t\t\t\tinfinite_loop_guard();\n\t\t\t}\n\n\t\t\tvar root_effects = queued_root_effects;\n\t\t\tvar length = root_effects.length;\n\n\t\t\tqueued_root_effects = [];\n\n\t\t\tfor (var i = 0; i < length; i++) {\n\t\t\t\tvar collected_effects = process_effects(root_effects[i]);\n\t\t\t\tflush_queued_effects(collected_effects);\n\t\t\t}\n\t\t\told_values.clear();\n\t\t}\n\t} finally {\n\t\tis_flushing = false;\n\t\tis_updating_effect = was_updating_effect;\n\n\t\tlast_scheduled_effect = null;\n\t\tif (DEV) {\n\t\t\tdev_effect_stack = [];\n\t\t}\n\t}\n}\n\n/**\n * @param {Array<Effect>} effects\n * @returns {void}\n */\nfunction flush_queued_effects(effects) {\n\tvar length = effects.length;\n\tif (length === 0) return;\n\n\tfor (var i = 0; i < length; i++) {\n\t\tvar effect = effects[i];\n\n\t\tif ((effect.f & (DESTROYED | INERT)) === 0) {\n\t\t\ttry {\n\t\t\t\tif (check_dirtiness(effect)) {\n\t\t\t\t\tupdate_effect(effect);\n\n\t\t\t\t\t// Effects with no dependencies or teardown do not get added to the effect tree.\n\t\t\t\t\t// Deferred effects (e.g. `$effect(...)`) _are_ added to the tree because we\n\t\t\t\t\t// don't know if we need to keep them until they are executed. Doing the check\n\t\t\t\t\t// here (rather than in `update_effect`) allows us to skip the work for\n\t\t\t\t\t// immediate effects.\n\t\t\t\t\tif (effect.deps === null && effect.first === null && effect.nodes_start === null) {\n\t\t\t\t\t\tif (effect.teardown === null) {\n\t\t\t\t\t\t\t// remove this effect from the graph\n\t\t\t\t\t\t\tunlink_effect(effect);\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t// keep the effect in the graph, but free up some memory\n\t\t\t\t\t\t\teffect.fn = null;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t} catch (error) {\n\t\t\t\thandle_error(error, effect, null, effect.ctx);\n\t\t\t}\n\t\t}\n\t}\n}\n\n/**\n * @param {Effect} signal\n * @returns {void}\n */\nexport function schedule_effect(signal) {\n\tif (!is_flushing) {\n\t\tis_flushing = true;\n\t\tqueueMicrotask(flush_queued_root_effects);\n\t}\n\n\tvar effect = (last_scheduled_effect = signal);\n\n\twhile (effect.parent !== null) {\n\t\teffect = effect.parent;\n\t\tvar flags = effect.f;\n\n\t\tif ((flags & (ROOT_EFFECT | BRANCH_EFFECT)) !== 0) {\n\t\t\tif ((flags & CLEAN) === 0) return;\n\t\t\teffect.f ^= CLEAN;\n\t\t}\n\t}\n\n\tqueued_root_effects.push(effect);\n}\n\n/**\n *\n * This function both runs render effects and collects user effects in topological order\n * from the starting effect passed in. Effects will be collected when they match the filtered\n * bitwise flag passed in only. The collected effects array will be populated with all the user\n * effects to be flushed.\n *\n * @param {Effect} root\n * @returns {Effect[]}\n */\nfunction process_effects(root) {\n\t/** @type {Effect[]} */\n\tvar effects = [];\n\n\t/** @type {Effect | null} */\n\tvar effect = root;\n\n\twhile (effect !== null) {\n\t\tvar flags = effect.f;\n\t\tvar is_branch = (flags & (BRANCH_EFFECT | ROOT_EFFECT)) !== 0;\n\t\tvar is_skippable_branch = is_branch && (flags & CLEAN) !== 0;\n\n\t\tif (!is_skippable_branch && (flags & INERT) === 0) {\n\t\t\tif ((flags & EFFECT) !== 0) {\n\t\t\t\teffects.push(effect);\n\t\t\t} else if (is_branch) {\n\t\t\t\teffect.f ^= CLEAN;\n\t\t\t} else {\n\t\t\t\ttry {\n\t\t\t\t\tif (check_dirtiness(effect)) {\n\t\t\t\t\t\tupdate_effect(effect);\n\t\t\t\t\t}\n\t\t\t\t} catch (error) {\n\t\t\t\t\thandle_error(error, effect, null, effect.ctx);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t/** @type {Effect | null} */\n\t\t\tvar child = effect.first;\n\n\t\t\tif (child !== null) {\n\t\t\t\teffect = child;\n\t\t\t\tcontinue;\n\t\t\t}\n\t\t}\n\n\t\tvar parent = effect.parent;\n\t\teffect = effect.next;\n\n\t\twhile (effect === null && parent !== null) {\n\t\t\teffect = parent.next;\n\t\t\tparent = parent.parent;\n\t\t}\n\t}\n\n\treturn effects;\n}\n\n/**\n * Synchronously flush any pending updates.\n * Returns void if no callback is provided, otherwise returns the result of calling the callback.\n * @template [T=void]\n * @param {(() => T) | undefined} [fn]\n * @returns {T}\n */\nexport function flushSync(fn) {\n\tvar result;\n\n\tif (fn) {\n\t\tis_flushing = true;\n\t\tflush_queued_root_effects();\n\t\tresult = fn();\n\t}\n\n\tflush_tasks();\n\n\twhile (queued_root_effects.length > 0) {\n\t\tis_flushing = true;\n\t\tflush_queued_root_effects();\n\t\tflush_tasks();\n\t}\n\n\treturn /** @type {T} */ (result);\n}\n\n/**\n * Returns a promise that resolves once any pending state changes have been applied.\n * @returns {Promise<void>}\n */\nexport async function tick() {\n\tawait Promise.resolve();\n\t// By calling flushSync we guarantee that any pending state changes are applied after one tick.\n\t// TODO look into whether we can make flushing subsequent updates synchronously in the future.\n\tflushSync();\n}\n\n/**\n * @template V\n * @param {Value<V>} signal\n * @returns {V}\n */\nexport function get(signal) {\n\tvar flags = signal.f;\n\tvar is_derived = (flags & DERIVED) !== 0;\n\n\tif (captured_signals !== null) {\n\t\tcaptured_signals.add(signal);\n\t}\n\n\t// Register the dependency on the current reaction signal.\n\tif (active_reaction !== null && !untracking) {\n\t\tif (!reaction_sources?.includes(signal)) {\n\t\t\tvar deps = active_reaction.deps;\n\t\t\tif (signal.rv < read_version) {\n\t\t\t\tsignal.rv = read_version;\n\t\t\t\t// If the signal is accessing the same dependencies in the same\n\t\t\t\t// order as it did last time, increment `skipped_deps`\n\t\t\t\t// rather than updating `new_deps`, which creates GC cost\n\t\t\t\tif (new_deps === null && deps !== null && deps[skipped_deps] === signal) {\n\t\t\t\t\tskipped_deps++;\n\t\t\t\t} else if (new_deps === null) {\n\t\t\t\t\tnew_deps = [signal];\n\t\t\t\t} else if (!skip_reaction || !new_deps.includes(signal)) {\n\t\t\t\t\t// Normally we can push duplicated dependencies to `new_deps`, but if we're inside\n\t\t\t\t\t// an unowned derived because skip_reaction is true, then we need to ensure that\n\t\t\t\t\t// we don't have duplicates\n\t\t\t\t\tnew_deps.push(signal);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t} else if (\n\t\tis_derived &&\n\t\t/** @type {Derived} */ (signal).deps === null &&\n\t\t/** @type {Derived} */ (signal).effects === null\n\t) {\n\t\tvar derived = /** @type {Derived} */ (signal);\n\t\tvar parent = derived.parent;\n\n\t\tif (parent !== null && (parent.f & UNOWNED) === 0) {\n\t\t\t// If the derived is owned by another derived then mark it as unowned\n\t\t\t// as the derived value might have been referenced in a different context\n\t\t\t// since and thus its parent might not be its true owner anymore\n\t\t\tderived.f ^= UNOWNED;\n\t\t}\n\t}\n\n\tif (is_derived) {\n\t\tderived = /** @type {Derived} */ (signal);\n\n\t\tif (check_dirtiness(derived)) {\n\t\t\tupdate_derived(derived);\n\t\t}\n\t}\n\n\tif (\n\t\tDEV &&\n\t\ttracing_mode_flag &&\n\t\ttracing_expressions !== null &&\n\t\tactive_reaction !== null &&\n\t\ttracing_expressions.reaction === active_reaction\n\t) {\n\t\t// Used when mapping state between special blocks like `each`\n\t\tif (signal.debug) {\n\t\t\tsignal.debug();\n\t\t} else if (signal.created) {\n\t\t\tvar entry = tracing_expressions.entries.get(signal);\n\n\t\t\tif (entry === undefined) {\n\t\t\t\tentry = { read: [] };\n\t\t\t\ttracing_expressions.entries.set(signal, entry);\n\t\t\t}\n\n\t\t\tentry.read.push(get_stack('TracedAt'));\n\t\t}\n\t}\n\n\tif (is_destroying_effect && old_values.has(signal)) {\n\t\treturn old_values.get(signal);\n\t}\n\n\treturn signal.v;\n}\n\n/**\n * Like `get`, but checks for `undefined`. Used for `var` declarations because they can be accessed before being declared\n * @template V\n * @param {Value<V> | undefined} signal\n * @returns {V | undefined}\n */\nexport function safe_get(signal) {\n\treturn signal && get(signal);\n}\n\n/**\n * Capture an array of all the signals that are read when `fn` is called\n * @template T\n * @param {() => T} fn\n */\nfunction capture_signals(fn) {\n\tvar previous_captured_signals = captured_signals;\n\tcaptured_signals = new Set();\n\n\tvar captured = captured_signals;\n\tvar signal;\n\n\ttry {\n\t\tuntrack(fn);\n\t\tif (previous_captured_signals !== null) {\n\t\t\tfor (signal of captured_signals) {\n\t\t\t\tprevious_captured_signals.add(signal);\n\t\t\t}\n\t\t}\n\t} finally {\n\t\tcaptured_signals = previous_captured_signals;\n\t}\n\n\treturn captured;\n}\n\n/**\n * Invokes a function and captures all signals that are read during the invocation,\n * then invalidates them.\n * @param {() => any} fn\n */\nexport function invalidate_inner_signals(fn) {\n\tvar captured = capture_signals(() => untrack(fn));\n\n\tfor (var signal of captured) {\n\t\t// Go one level up because derived signals created as part of props in legacy mode\n\t\tif ((signal.f & LEGACY_DERIVED_PROP) !== 0) {\n\t\t\tfor (const dep of /** @type {Derived} */ (signal).deps || []) {\n\t\t\t\tif ((dep.f & DERIVED) === 0) {\n\t\t\t\t\t// Use internal_set instead of set here and below to avoid mutation validation\n\t\t\t\t\tinternal_set(dep, dep.v);\n\t\t\t\t}\n\t\t\t}\n\t\t} else {\n\t\t\tinternal_set(signal, signal.v);\n\t\t}\n\t}\n}\n\n/**\n * When used inside a [`$derived`](https://svelte.dev/docs/svelte/$derived) or [`$effect`](https://svelte.dev/docs/svelte/$effect),\n * any state read inside `fn` will not be treated as a dependency.\n *\n * ```ts\n * $effect(() => {\n *   // this will run when `data` changes, but not when `time` changes\n *   save(data, {\n *     timestamp: untrack(() => time)\n *   });\n * });\n * ```\n * @template T\n * @param {() => T} fn\n * @returns {T}\n */\nexport function untrack(fn) {\n\tvar previous_untracking = untracking;\n\ttry {\n\t\tuntracking = true;\n\t\treturn fn();\n\t} finally {\n\t\tuntracking = previous_untracking;\n\t}\n}\n\nconst STATUS_MASK = ~(DIRTY | MAYBE_DIRTY | CLEAN);\n\n/**\n * @param {Signal} signal\n * @param {number} status\n * @returns {void}\n */\nexport function set_signal_status(signal, status) {\n\tsignal.f = (signal.f & STATUS_MASK) | status;\n}\n\n/**\n * @param {Record<string, unknown>} obj\n * @param {string[]} keys\n * @returns {Record<string, unknown>}\n */\nexport function exclude_from_object(obj, keys) {\n\t/** @type {Record<string, unknown>} */\n\tvar result = {};\n\n\tfor (var key in obj) {\n\t\tif (!keys.includes(key)) {\n\t\t\tresult[key] = obj[key];\n\t\t}\n\t}\n\n\treturn result;\n}\n\n/**\n * Possibly traverse an object and read all its properties so that they're all reactive in case this is `$state`.\n * Does only check first level of an object for performance reasons (heuristic should be good for 99% of all cases).\n * @param {any} value\n * @returns {void}\n */\nexport function deep_read_state(value) {\n\tif (typeof value !== 'object' || !value || value instanceof EventTarget) {\n\t\treturn;\n\t}\n\n\tif (STATE_SYMBOL in value) {\n\t\tdeep_read(value);\n\t} else if (!Array.isArray(value)) {\n\t\tfor (let key in value) {\n\t\t\tconst prop = value[key];\n\t\t\tif (typeof prop === 'object' && prop && STATE_SYMBOL in prop) {\n\t\t\t\tdeep_read(prop);\n\t\t\t}\n\t\t}\n\t}\n}\n\n/**\n * Deeply traverse an object and read all its properties\n * so that they're all reactive in case this is `$state`\n * @param {any} value\n * @param {Set<any>} visited\n * @returns {void}\n */\nexport function deep_read(value, visited = new Set()) {\n\tif (\n\t\ttypeof value === 'object' &&\n\t\tvalue !== null &&\n\t\t// We don't want to traverse DOM elements\n\t\t!(value instanceof EventTarget) &&\n\t\t!visited.has(value)\n\t) {\n\t\tvisited.add(value);\n\t\t// When working with a possible SvelteDate, this\n\t\t// will ensure we capture changes to it.\n\t\tif (value instanceof Date) {\n\t\t\tvalue.getTime();\n\t\t}\n\t\tfor (let key in value) {\n\t\t\ttry {\n\t\t\t\tdeep_read(value[key], visited);\n\t\t\t} catch (e) {\n\t\t\t\t// continue\n\t\t\t}\n\t\t}\n\t\tconst proto = get_prototype_of(value);\n\t\tif (\n\t\t\tproto !== Object.prototype &&\n\t\t\tproto !== Array.prototype &&\n\t\t\tproto !== Map.prototype &&\n\t\t\tproto !== Set.prototype &&\n\t\t\tproto !== Date.prototype\n\t\t) {\n\t\t\tconst descriptors = get_descriptors(proto);\n\t\t\tfor (let key in descriptors) {\n\t\t\t\tconst get = descriptors[key].get;\n\t\t\t\tif (get) {\n\t\t\t\t\ttry {\n\t\t\t\t\t\tget.call(value);\n\t\t\t\t\t} catch (e) {\n\t\t\t\t\t\t// continue\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n}\n","/** @import { Derived, Effect, Source, Value } from '#client' */\nimport { DEV } from 'esm-env';\nimport {\n\tactive_reaction,\n\tactive_effect,\n\tuntracked_writes,\n\tget,\n\tschedule_effect,\n\tset_untracked_writes,\n\tset_signal_status,\n\tuntrack,\n\tincrement_write_version,\n\tupdate_effect,\n\treaction_sources,\n\tcheck_dirtiness,\n\tuntracking,\n\tis_destroying_effect,\n\tpush_reaction_value\n} from '../runtime.js';\nimport { equals, safe_equals } from './equality.js';\nimport {\n\tCLEAN,\n\tDERIVED,\n\tDIRTY,\n\tBRANCH_EFFECT,\n\tINSPECT_EFFECT,\n\tUNOWNED,\n\tMAYBE_DIRTY,\n\tBLOCK_EFFECT,\n\tROOT_EFFECT\n} from '#client/constants';\nimport * as e from '../errors.js';\nimport { legacy_mode_flag, tracing_mode_flag } from '../../flags/index.js';\nimport { get_stack } from '../dev/tracing.js';\nimport { component_context, is_runes } from '../context.js';\nimport { proxy } from '../proxy.js';\nimport { execute_derived } from './deriveds.js';\n\nexport let inspect_effects = new Set();\nexport const old_values = new Map();\n\n/**\n * @param {Set<any>} v\n */\nexport function set_inspect_effects(v) {\n\tinspect_effects = v;\n}\n\n/**\n * @template V\n * @param {V} v\n * @param {Error | null} [stack]\n * @returns {Source<V>}\n */\n// TODO rename this to `state` throughout the codebase\nexport function source(v, stack) {\n\t/** @type {Value} */\n\tvar signal = {\n\t\tf: 0, // TODO ideally we could skip this altogether, but it causes type errors\n\t\tv,\n\t\treactions: null,\n\t\tequals,\n\t\trv: 0,\n\t\twv: 0\n\t};\n\n\tif (DEV && tracing_mode_flag) {\n\t\tsignal.created = stack ?? get_stack('CreatedAt');\n\t\tsignal.debug = null;\n\t}\n\n\treturn signal;\n}\n\n/**\n * @template V\n * @param {V} v\n * @param {Error | null} [stack]\n */\n/*#__NO_SIDE_EFFECTS__*/\nexport function state(v, stack) {\n\tconst s = source(v, stack);\n\n\tpush_reaction_value(s);\n\n\treturn s;\n}\n\n/**\n * @template V\n * @param {V} initial_value\n * @param {boolean} [immutable]\n * @returns {Source<V>}\n */\n/*#__NO_SIDE_EFFECTS__*/\nexport function mutable_source(initial_value, immutable = false) {\n\tconst s = source(initial_value);\n\tif (!immutable) {\n\t\ts.equals = safe_equals;\n\t}\n\n\t// bind the signal to the component context, in case we need to\n\t// track updates to trigger beforeUpdate/afterUpdate callbacks\n\tif (legacy_mode_flag && component_context !== null && component_context.l !== null) {\n\t\t(component_context.l.s ??= []).push(s);\n\t}\n\n\treturn s;\n}\n\n/**\n * @template V\n * @param {Value<V>} source\n * @param {V} value\n */\nexport function mutate(source, value) {\n\tset(\n\t\tsource,\n\t\tuntrack(() => get(source))\n\t);\n\treturn value;\n}\n\n/**\n * @template V\n * @param {Source<V>} source\n * @param {V} value\n * @param {boolean} [should_proxy]\n * @returns {V}\n */\nexport function set(source, value, should_proxy = false) {\n\tif (\n\t\tactive_reaction !== null &&\n\t\t!untracking &&\n\t\tis_runes() &&\n\t\t(active_reaction.f & (DERIVED | BLOCK_EFFECT)) !== 0 &&\n\t\t!reaction_sources?.includes(source)\n\t) {\n\t\te.state_unsafe_mutation();\n\t}\n\n\tlet new_value = should_proxy ? proxy(value) : value;\n\n\treturn internal_set(source, new_value);\n}\n\n/**\n * @template V\n * @param {Source<V>} source\n * @param {V} value\n * @returns {V}\n */\nexport function internal_set(source, value) {\n\tif (!source.equals(value)) {\n\t\tvar old_value = source.v;\n\n\t\tif (is_destroying_effect) {\n\t\t\told_values.set(source, value);\n\t\t} else {\n\t\t\told_values.set(source, old_value);\n\t\t}\n\n\t\tsource.v = value;\n\n\t\tif (DEV && tracing_mode_flag) {\n\t\t\tsource.updated = get_stack('UpdatedAt');\n\t\t\tif (active_effect != null) {\n\t\t\t\tsource.trace_need_increase = true;\n\t\t\t\tsource.trace_v ??= old_value;\n\t\t\t}\n\t\t}\n\n\t\tif ((source.f & DERIVED) !== 0) {\n\t\t\t// if we are assigning to a dirty derived we set it to clean/maybe dirty but we also eagerly execute it to track the dependencies\n\t\t\tif ((source.f & DIRTY) !== 0) {\n\t\t\t\texecute_derived(/** @type {Derived} */ (source));\n\t\t\t}\n\t\t\tset_signal_status(source, (source.f & UNOWNED) === 0 ? CLEAN : MAYBE_DIRTY);\n\t\t}\n\n\t\tsource.wv = increment_write_version();\n\n\t\tmark_reactions(source, DIRTY);\n\n\t\t// It's possible that the current reaction might not have up-to-date dependencies\n\t\t// whilst it's actively running. So in the case of ensuring it registers the reaction\n\t\t// properly for itself, we need to ensure the current effect actually gets\n\t\t// scheduled. i.e: `$effect(() => x++)`\n\t\tif (\n\t\t\tis_runes() &&\n\t\t\tactive_effect !== null &&\n\t\t\t(active_effect.f & CLEAN) !== 0 &&\n\t\t\t(active_effect.f & (BRANCH_EFFECT | ROOT_EFFECT)) === 0\n\t\t) {\n\t\t\tif (untracked_writes === null) {\n\t\t\t\tset_untracked_writes([source]);\n\t\t\t} else {\n\t\t\t\tuntracked_writes.push(source);\n\t\t\t}\n\t\t}\n\n\t\tif (DEV && inspect_effects.size > 0) {\n\t\t\tconst inspects = Array.from(inspect_effects);\n\n\t\t\tfor (const effect of inspects) {\n\t\t\t\t// Mark clean inspect-effects as maybe dirty and then check their dirtiness\n\t\t\t\t// instead of just updating the effects - this way we avoid overfiring.\n\t\t\t\tif ((effect.f & CLEAN) !== 0) {\n\t\t\t\t\tset_signal_status(effect, MAYBE_DIRTY);\n\t\t\t\t}\n\t\t\t\tif (check_dirtiness(effect)) {\n\t\t\t\t\tupdate_effect(effect);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tinspect_effects.clear();\n\t\t}\n\t}\n\n\treturn value;\n}\n\n/**\n * @template {number | bigint} T\n * @param {Source<T>} source\n * @param {1 | -1} [d]\n * @returns {T}\n */\nexport function update(source, d = 1) {\n\tvar value = get(source);\n\tvar result = d === 1 ? value++ : value--;\n\n\tset(source, value);\n\n\t// @ts-expect-error\n\treturn result;\n}\n\n/**\n * @template {number | bigint} T\n * @param {Source<T>} source\n * @param {1 | -1} [d]\n * @returns {T}\n */\nexport function update_pre(source, d = 1) {\n\tvar value = get(source);\n\n\t// @ts-expect-error\n\treturn set(source, d === 1 ? ++value : --value);\n}\n\n/**\n * @param {Value} signal\n * @param {number} status should be DIRTY or MAYBE_DIRTY\n * @returns {void}\n */\nfunction mark_reactions(signal, status) {\n\tvar reactions = signal.reactions;\n\tif (reactions === null) return;\n\n\tvar runes = is_runes();\n\tvar length = reactions.length;\n\n\tfor (var i = 0; i < length; i++) {\n\t\tvar reaction = reactions[i];\n\t\tvar flags = reaction.f;\n\n\t\t// Skip any effects that are already dirty\n\t\tif ((flags & DIRTY) !== 0) continue;\n\n\t\t// In legacy mode, skip the current effect to prevent infinite loops\n\t\tif (!runes && reaction === active_effect) continue;\n\n\t\t// Inspect effects need to run immediately, so that the stack trace makes sense\n\t\tif (DEV && (flags & INSPECT_EFFECT) !== 0) {\n\t\t\tinspect_effects.add(reaction);\n\t\t\tcontinue;\n\t\t}\n\n\t\tset_signal_status(reaction, status);\n\n\t\t// If the signal a) was previously clean or b) is an unowned derived, then mark it\n\t\tif ((flags & (CLEAN | UNOWNED)) !== 0) {\n\t\t\tif ((flags & DERIVED) !== 0) {\n\t\t\t\tmark_reactions(/** @type {Derived} */ (reaction), MAYBE_DIRTY);\n\t\t\t} else {\n\t\t\t\tschedule_effect(/** @type {Effect} */ (reaction));\n\t\t\t}\n\t\t}\n\t}\n}\n","/** @import { ComponentContext } from '#client' */\n\nimport { DEV } from 'esm-env';\nimport { lifecycle_outside_component } from '../shared/errors.js';\nimport { source } from './reactivity/sources.js';\nimport {\n\tactive_effect,\n\tactive_reaction,\n\tset_active_effect,\n\tset_active_reaction\n} from './runtime.js';\nimport { effect, teardown } from './reactivity/effects.js';\nimport { legacy_mode_flag } from '../flags/index.js';\n\n/** @type {ComponentContext | null} */\nexport let component_context = null;\n\n/** @param {ComponentContext | null} context */\nexport function set_component_context(context) {\n\tcomponent_context = context;\n}\n\n/**\n * The current component function. Different from current component context:\n * ```html\n * <!-- App.svelte -->\n * <Foo>\n *   <Bar /> <!-- context == Foo.svelte, function == App.svelte -->\n * </Foo>\n * ```\n * @type {ComponentContext['function']}\n */\nexport let dev_current_component_function = null;\n\n/** @param {ComponentContext['function']} fn */\nexport function set_dev_current_component_function(fn) {\n\tdev_current_component_function = fn;\n}\n\n/**\n * Retrieves the context that belongs to the closest parent component with the specified `key`.\n * Must be called during component initialisation.\n *\n * @template T\n * @param {any} key\n * @returns {T}\n */\nexport function getContext(key) {\n\tconst context_map = get_or_init_context_map('getContext');\n\tconst result = /** @type {T} */ (context_map.get(key));\n\treturn result;\n}\n\n/**\n * Associates an arbitrary `context` object with the current component and the specified `key`\n * and returns that object. The context is then available to children of the component\n * (including slotted content) with `getContext`.\n *\n * Like lifecycle functions, this must be called during component initialisation.\n *\n * @template T\n * @param {any} key\n * @param {T} context\n * @returns {T}\n */\nexport function setContext(key, context) {\n\tconst context_map = get_or_init_context_map('setContext');\n\tcontext_map.set(key, context);\n\treturn context;\n}\n\n/**\n * Checks whether a given `key` has been set in the context of a parent component.\n * Must be called during component initialisation.\n *\n * @param {any} key\n * @returns {boolean}\n */\nexport function hasContext(key) {\n\tconst context_map = get_or_init_context_map('hasContext');\n\treturn context_map.has(key);\n}\n\n/**\n * Retrieves the whole context map that belongs to the closest parent component.\n * Must be called during component initialisation. Useful, for example, if you\n * programmatically create a component and want to pass the existing context to it.\n *\n * @template {Map<any, any>} [T=Map<any, any>]\n * @returns {T}\n */\nexport function getAllContexts() {\n\tconst context_map = get_or_init_context_map('getAllContexts');\n\treturn /** @type {T} */ (context_map);\n}\n\n/**\n * @param {Record<string, unknown>} props\n * @param {any} runes\n * @param {Function} [fn]\n * @returns {void}\n */\nexport function push(props, runes = false, fn) {\n\tvar ctx = (component_context = {\n\t\tp: component_context,\n\t\tc: null,\n\t\td: false,\n\t\te: null,\n\t\tm: false,\n\t\ts: props,\n\t\tx: null,\n\t\tl: null\n\t});\n\n\tif (legacy_mode_flag && !runes) {\n\t\tcomponent_context.l = {\n\t\t\ts: null,\n\t\t\tu: null,\n\t\t\tr1: [],\n\t\t\tr2: source(false)\n\t\t};\n\t}\n\n\tteardown(() => {\n\t\t/** @type {ComponentContext} */ (ctx).d = true;\n\t});\n\n\tif (DEV) {\n\t\t// component function\n\t\tcomponent_context.function = fn;\n\t\tdev_current_component_function = fn;\n\t}\n}\n\n/**\n * @template {Record<string, any>} T\n * @param {T} [component]\n * @returns {T}\n */\nexport function pop(component) {\n\tconst context_stack_item = component_context;\n\tif (context_stack_item !== null) {\n\t\tif (component !== undefined) {\n\t\t\tcontext_stack_item.x = component;\n\t\t}\n\t\tconst component_effects = context_stack_item.e;\n\t\tif (component_effects !== null) {\n\t\t\tvar previous_effect = active_effect;\n\t\t\tvar previous_reaction = active_reaction;\n\t\t\tcontext_stack_item.e = null;\n\t\t\ttry {\n\t\t\t\tfor (var i = 0; i < component_effects.length; i++) {\n\t\t\t\t\tvar component_effect = component_effects[i];\n\t\t\t\t\tset_active_effect(component_effect.effect);\n\t\t\t\t\tset_active_reaction(component_effect.reaction);\n\t\t\t\t\teffect(component_effect.fn);\n\t\t\t\t}\n\t\t\t} finally {\n\t\t\t\tset_active_effect(previous_effect);\n\t\t\t\tset_active_reaction(previous_reaction);\n\t\t\t}\n\t\t}\n\t\tcomponent_context = context_stack_item.p;\n\t\tif (DEV) {\n\t\t\tdev_current_component_function = context_stack_item.p?.function ?? null;\n\t\t}\n\t\tcontext_stack_item.m = true;\n\t}\n\t// Micro-optimization: Don't set .a above to the empty object\n\t// so it can be garbage-collected when the return here is unused\n\treturn component || /** @type {T} */ ({});\n}\n\n/** @returns {boolean} */\nexport function is_runes() {\n\treturn !legacy_mode_flag || (component_context !== null && component_context.l === null);\n}\n\n/**\n * @param {string} name\n * @returns {Map<unknown, unknown>}\n */\nfunction get_or_init_context_map(name) {\n\tif (component_context === null) {\n\t\tlifecycle_outside_component(name);\n\t}\n\n\treturn (component_context.c ??= new Map(get_parent_context(component_context) || undefined));\n}\n\n/**\n * @param {ComponentContext} component_context\n * @returns {Map<unknown, unknown> | null}\n */\nfunction get_parent_context(component_context) {\n\tlet parent = component_context.p;\n\twhile (parent !== null) {\n\t\tconst context_map = parent.c;\n\t\tif (context_map !== null) {\n\t\t\treturn context_map;\n\t\t}\n\t\tparent = parent.p;\n\t}\n\treturn null;\n}\n","import { hydrating } from '../hydration.js';\nimport { clear_text_content, get_first_child } from '../operations.js';\nimport { queue_micro_task } from '../task.js';\n\n/**\n * @param {HTMLElement} dom\n * @param {boolean} value\n * @returns {void}\n */\nexport function autofocus(dom, value) {\n\tif (value) {\n\t\tconst body = document.body;\n\t\tdom.autofocus = true;\n\n\t\tqueue_micro_task(() => {\n\t\t\tif (document.activeElement === body) {\n\t\t\t\tdom.focus();\n\t\t\t}\n\t\t});\n\t}\n}\n\n/**\n * The child of a textarea actually corresponds to the defaultValue property, so we need\n * to remove it upon hydration to avoid a bug when someone resets the form value.\n * @param {HTMLTextAreaElement} dom\n * @returns {void}\n */\nexport function remove_textarea_child(dom) {\n\tif (hydrating && get_first_child(dom) !== null) {\n\t\tclear_text_content(dom);\n\t}\n}\n\nlet listening_to_form_reset = false;\n\nexport function add_form_reset_listener() {\n\tif (!listening_to_form_reset) {\n\t\tlistening_to_form_reset = true;\n\t\tdocument.addEventListener(\n\t\t\t'reset',\n\t\t\t(evt) => {\n\t\t\t\t// Needs to happen one tick later or else the dom properties of the form\n\t\t\t\t// elements have not updated to their reset values yet\n\t\t\t\tPromise.resolve().then(() => {\n\t\t\t\t\tif (!evt.defaultPrevented) {\n\t\t\t\t\t\tfor (const e of /**@type {HTMLFormElement} */ (evt.target).elements) {\n\t\t\t\t\t\t\t// @ts-expect-error\n\t\t\t\t\t\t\te.__on_r?.();\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t},\n\t\t\t// In the capture phase to guarantee we get noticed of it (no possiblity of stopPropagation)\n\t\t\t{ capture: true }\n\t\t);\n\t}\n}\n","import { teardown } from '../../../reactivity/effects.js';\nimport {\n\tactive_effect,\n\tactive_reaction,\n\tset_active_effect,\n\tset_active_reaction\n} from '../../../runtime.js';\nimport { add_form_reset_listener } from '../misc.js';\n\n/**\n * Fires the handler once immediately (unless corresponding arg is set to `false`),\n * then listens to the given events until the render effect context is destroyed\n * @param {EventTarget} target\n * @param {Array<string>} events\n * @param {(event?: Event) => void} handler\n * @param {any} call_handler_immediately\n */\nexport function listen(target, events, handler, call_handler_immediately = true) {\n\tif (call_handler_immediately) {\n\t\thandler();\n\t}\n\n\tfor (var name of events) {\n\t\ttarget.addEventListener(name, handler);\n\t}\n\n\tteardown(() => {\n\t\tfor (var name of events) {\n\t\t\ttarget.removeEventListener(name, handler);\n\t\t}\n\t});\n}\n\n/**\n * @template T\n * @param {() => T} fn\n */\nexport function without_reactive_context(fn) {\n\tvar previous_reaction = active_reaction;\n\tvar previous_effect = active_effect;\n\tset_active_reaction(null);\n\tset_active_effect(null);\n\ttry {\n\t\treturn fn();\n\t} finally {\n\t\tset_active_reaction(previous_reaction);\n\t\tset_active_effect(previous_effect);\n\t}\n}\n\n/**\n * Listen to the given event, and then instantiate a global form reset listener if not already done,\n * to notify all bindings when the form is reset\n * @param {HTMLElement} element\n * @param {string} event\n * @param {(is_reset?: true) => void} handler\n * @param {(is_reset?: true) => void} [on_reset]\n */\nexport function listen_to_event_and_reset_event(element, event, handler, on_reset = handler) {\n\telement.addEventListener(event, () => without_reactive_context(handler));\n\t// @ts-expect-error\n\tconst prev = element.__on_r;\n\tif (prev) {\n\t\t// special case for checkbox that can have multiple binds (group & checked)\n\t\t// @ts-expect-error\n\t\telement.__on_r = () => {\n\t\t\tprev();\n\t\t\ton_reset(true);\n\t\t};\n\t} else {\n\t\t// @ts-expect-error\n\t\telement.__on_r = () => on_reset(true);\n\t}\n\n\tadd_form_reset_listener();\n}\n","import { teardown } from '../../reactivity/effects.js';\nimport { define_property, is_array } from '../../../shared/utils.js';\nimport { hydrating } from '../hydration.js';\nimport { queue_micro_task } from '../task.js';\nimport { FILENAME } from '../../../../constants.js';\nimport * as w from '../../warnings.js';\nimport {\n\tactive_effect,\n\tactive_reaction,\n\tset_active_effect,\n\tset_active_reaction\n} from '../../runtime.js';\nimport { without_reactive_context } from './bindings/shared.js';\n\n/** @type {Set<string>} */\nexport const all_registered_events = new Set();\n\n/** @type {Set<(events: Array<string>) => void>} */\nexport const root_event_handles = new Set();\n\n/**\n * SSR adds onload and onerror attributes to catch those events before the hydration.\n * This function detects those cases, removes the attributes and replays the events.\n * @param {HTMLElement} dom\n */\nexport function replay_events(dom) {\n\tif (!hydrating) return;\n\n\tif (dom.onload) {\n\t\tdom.removeAttribute('onload');\n\t}\n\tif (dom.onerror) {\n\t\tdom.removeAttribute('onerror');\n\t}\n\t// @ts-expect-error\n\tconst event = dom.__e;\n\tif (event !== undefined) {\n\t\t// @ts-expect-error\n\t\tdom.__e = undefined;\n\t\tqueueMicrotask(() => {\n\t\t\tif (dom.isConnected) {\n\t\t\t\tdom.dispatchEvent(event);\n\t\t\t}\n\t\t});\n\t}\n}\n\n/**\n * @param {string} event_name\n * @param {EventTarget} dom\n * @param {EventListener} [handler]\n * @param {AddEventListenerOptions} [options]\n */\nexport function create_event(event_name, dom, handler, options = {}) {\n\t/**\n\t * @this {EventTarget}\n\t */\n\tfunction target_handler(/** @type {Event} */ event) {\n\t\tif (!options.capture) {\n\t\t\t// Only call in the bubble phase, else delegated events would be called before the capturing events\n\t\t\thandle_event_propagation.call(dom, event);\n\t\t}\n\t\tif (!event.cancelBubble) {\n\t\t\treturn without_reactive_context(() => {\n\t\t\t\treturn handler?.call(this, event);\n\t\t\t});\n\t\t}\n\t}\n\n\t// Chrome has a bug where pointer events don't work when attached to a DOM element that has been cloned\n\t// with cloneNode() and the DOM element is disconnected from the document. To ensure the event works, we\n\t// defer the attachment till after it's been appended to the document. TODO: remove this once Chrome fixes\n\t// this bug. The same applies to wheel events and touch events.\n\tif (\n\t\tevent_name.startsWith('pointer') ||\n\t\tevent_name.startsWith('touch') ||\n\t\tevent_name === 'wheel'\n\t) {\n\t\tqueue_micro_task(() => {\n\t\t\tdom.addEventListener(event_name, target_handler, options);\n\t\t});\n\t} else {\n\t\tdom.addEventListener(event_name, target_handler, options);\n\t}\n\n\treturn target_handler;\n}\n\n/**\n * Attaches an event handler to an element and returns a function that removes the handler. Using this\n * rather than `addEventListener` will preserve the correct order relative to handlers added declaratively\n * (with attributes like `onclick`), which use event delegation for performance reasons\n *\n * @param {EventTarget} element\n * @param {string} type\n * @param {EventListener} handler\n * @param {AddEventListenerOptions} [options]\n */\nexport function on(element, type, handler, options = {}) {\n\tvar target_handler = create_event(type, element, handler, options);\n\n\treturn () => {\n\t\telement.removeEventListener(type, target_handler, options);\n\t};\n}\n\n/**\n * @param {string} event_name\n * @param {Element} dom\n * @param {EventListener} [handler]\n * @param {boolean} [capture]\n * @param {boolean} [passive]\n * @returns {void}\n */\nexport function event(event_name, dom, handler, capture, passive) {\n\tvar options = { capture, passive };\n\tvar target_handler = create_event(event_name, dom, handler, options);\n\n\t// @ts-ignore\n\tif (dom === document.body || dom === window || dom === document) {\n\t\tteardown(() => {\n\t\t\tdom.removeEventListener(event_name, target_handler, options);\n\t\t});\n\t}\n}\n\n/**\n * @param {Array<string>} events\n * @returns {void}\n */\nexport function delegate(events) {\n\tfor (var i = 0; i < events.length; i++) {\n\t\tall_registered_events.add(events[i]);\n\t}\n\n\tfor (var fn of root_event_handles) {\n\t\tfn(events);\n\t}\n}\n\n/**\n * @this {EventTarget}\n * @param {Event} event\n * @returns {void}\n */\nexport function handle_event_propagation(event) {\n\tvar handler_element = this;\n\tvar owner_document = /** @type {Node} */ (handler_element).ownerDocument;\n\tvar event_name = event.type;\n\tvar path = event.composedPath?.() || [];\n\tvar current_target = /** @type {null | Element} */ (path[0] || event.target);\n\n\t// composedPath contains list of nodes the event has propagated through.\n\t// We check __root to skip all nodes below it in case this is a\n\t// parent of the __root node, which indicates that there's nested\n\t// mounted apps. In this case we don't want to trigger events multiple times.\n\tvar path_idx = 0;\n\n\t// @ts-expect-error is added below\n\tvar handled_at = event.__root;\n\n\tif (handled_at) {\n\t\tvar at_idx = path.indexOf(handled_at);\n\t\tif (\n\t\t\tat_idx !== -1 &&\n\t\t\t(handler_element === document || handler_element === /** @type {any} */ (window))\n\t\t) {\n\t\t\t// This is the fallback document listener or a window listener, but the event was already handled\n\t\t\t// -> ignore, but set handle_at to document/window so that we're resetting the event\n\t\t\t// chain in case someone manually dispatches the same event object again.\n\t\t\t// @ts-expect-error\n\t\t\tevent.__root = handler_element;\n\t\t\treturn;\n\t\t}\n\n\t\t// We're deliberately not skipping if the index is higher, because\n\t\t// someone could create an event programmatically and emit it multiple times,\n\t\t// in which case we want to handle the whole propagation chain properly each time.\n\t\t// (this will only be a false negative if the event is dispatched multiple times and\n\t\t// the fallback document listener isn't reached in between, but that's super rare)\n\t\tvar handler_idx = path.indexOf(handler_element);\n\t\tif (handler_idx === -1) {\n\t\t\t// handle_idx can theoretically be -1 (happened in some JSDOM testing scenarios with an event listener on the window object)\n\t\t\t// so guard against that, too, and assume that everything was handled at this point.\n\t\t\treturn;\n\t\t}\n\n\t\tif (at_idx <= handler_idx) {\n\t\t\tpath_idx = at_idx;\n\t\t}\n\t}\n\n\tcurrent_target = /** @type {Element} */ (path[path_idx] || event.target);\n\t// there can only be one delegated event per element, and we either already handled the current target,\n\t// or this is the very first target in the chain which has a non-delegated listener, in which case it's safe\n\t// to handle a possible delegated event on it later (through the root delegation listener for example).\n\tif (current_target === handler_element) return;\n\n\t// Proxy currentTarget to correct target\n\tdefine_property(event, 'currentTarget', {\n\t\tconfigurable: true,\n\t\tget() {\n\t\t\treturn current_target || owner_document;\n\t\t}\n\t});\n\n\t// This started because of Chromium issue https://chromestatus.com/feature/5128696823545856,\n\t// where removal or moving of of the DOM can cause sync `blur` events to fire, which can cause logic\n\t// to run inside the current `active_reaction`, which isn't what we want at all. However, on reflection,\n\t// it's probably best that all event handled by Svelte have this behaviour, as we don't really want\n\t// an event handler to run in the context of another reaction or effect.\n\tvar previous_reaction = active_reaction;\n\tvar previous_effect = active_effect;\n\tset_active_reaction(null);\n\tset_active_effect(null);\n\n\ttry {\n\t\t/**\n\t\t * @type {unknown}\n\t\t */\n\t\tvar throw_error;\n\t\t/**\n\t\t * @type {unknown[]}\n\t\t */\n\t\tvar other_errors = [];\n\n\t\twhile (current_target !== null) {\n\t\t\t/** @type {null | Element} */\n\t\t\tvar parent_element =\n\t\t\t\tcurrent_target.assignedSlot ||\n\t\t\t\tcurrent_target.parentNode ||\n\t\t\t\t/** @type {any} */ (current_target).host ||\n\t\t\t\tnull;\n\n\t\t\ttry {\n\t\t\t\t// @ts-expect-error\n\t\t\t\tvar delegated = current_target['__' + event_name];\n\n\t\t\t\tif (\n\t\t\t\t\tdelegated != null &&\n\t\t\t\t\t(!(/** @type {any} */ (current_target).disabled) ||\n\t\t\t\t\t\t// DOM could've been updated already by the time this is reached, so we check this as well\n\t\t\t\t\t\t// -> the target could not have been disabled because it emits the event in the first place\n\t\t\t\t\t\tevent.target === current_target)\n\t\t\t\t) {\n\t\t\t\t\tif (is_array(delegated)) {\n\t\t\t\t\t\tvar [fn, ...data] = delegated;\n\t\t\t\t\t\tfn.apply(current_target, [event, ...data]);\n\t\t\t\t\t} else {\n\t\t\t\t\t\tdelegated.call(current_target, event);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t} catch (error) {\n\t\t\t\tif (throw_error) {\n\t\t\t\t\tother_errors.push(error);\n\t\t\t\t} else {\n\t\t\t\t\tthrow_error = error;\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (event.cancelBubble || parent_element === handler_element || parent_element === null) {\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\tcurrent_target = parent_element;\n\t\t}\n\n\t\tif (throw_error) {\n\t\t\tfor (let error of other_errors) {\n\t\t\t\t// Throw the rest of the errors, one-by-one on a microtask\n\t\t\t\tqueueMicrotask(() => {\n\t\t\t\t\tthrow error;\n\t\t\t\t});\n\t\t\t}\n\t\t\tthrow throw_error;\n\t\t}\n\t} finally {\n\t\t// @ts-expect-error is used above\n\t\tevent.__root = handler_element;\n\t\t// @ts-ignore remove proxy on currentTarget\n\t\tdelete event.currentTarget;\n\t\tset_active_reaction(previous_reaction);\n\t\tset_active_effect(previous_effect);\n\t}\n}\n\n/**\n * In dev, warn if an event handler is not a function, as it means the\n * user probably called the handler or forgot to add a `() =>`\n * @param {() => (event: Event, ...args: any) => void} thunk\n * @param {EventTarget} element\n * @param {[Event, ...any]} args\n * @param {any} component\n * @param {[number, number]} [loc]\n * @param {boolean} [remove_parens]\n */\nexport function apply(\n\tthunk,\n\telement,\n\targs,\n\tcomponent,\n\tloc,\n\thas_side_effects = false,\n\tremove_parens = false\n) {\n\tlet handler;\n\tlet error;\n\n\ttry {\n\t\thandler = thunk();\n\t} catch (e) {\n\t\terror = e;\n\t}\n\n\tif (typeof handler !== 'function' && (has_side_effects || handler != null || error)) {\n\t\tconst filename = component?.[FILENAME];\n\t\tconst location = loc ? ` at ${filename}:${loc[0]}:${loc[1]}` : ` in ${filename}`;\n\t\tconst phase = args[0]?.eventPhase < Event.BUBBLING_PHASE ? 'capture' : '';\n\t\tconst event_name = args[0]?.type + phase;\n\t\tconst description = `\\`${event_name}\\` handler${location}`;\n\t\tconst suggestion = remove_parens ? 'remove the trailing `()`' : 'add a leading `() =>`';\n\n\t\tw.event_handler_invalid(description, suggestion);\n\n\t\tif (error) {\n\t\t\tthrow error;\n\t\t}\n\t}\n\thandler?.apply(element, args);\n}\n","/** @import { Effect, TemplateNode } from '#client' */\nimport { hydrate_next, hydrate_node, hydrating, set_hydrate_node } from './hydration.js';\nimport { create_text, get_first_child, is_firefox } from './operations.js';\nimport { create_fragment_from_html } from './reconciler.js';\nimport { active_effect } from '../runtime.js';\nimport { TEMPLATE_FRAGMENT, TEMPLATE_USE_IMPORT_NODE } from '../../../constants.js';\n\n/**\n * @param {TemplateNode} start\n * @param {TemplateNode | null} end\n */\nexport function assign_nodes(start, end) {\n\tvar effect = /** @type {Effect} */ (active_effect);\n\tif (effect.nodes_start === null) {\n\t\teffect.nodes_start = start;\n\t\teffect.nodes_end = end;\n\t}\n}\n\n/**\n * @param {string} content\n * @param {number} flags\n * @returns {() => Node | Node[]}\n */\n/*#__NO_SIDE_EFFECTS__*/\nexport function template(content, flags) {\n\tvar is_fragment = (flags & TEMPLATE_FRAGMENT) !== 0;\n\tvar use_import_node = (flags & TEMPLATE_USE_IMPORT_NODE) !== 0;\n\n\t/** @type {Node} */\n\tvar node;\n\n\t/**\n\t * Whether or not the first item is a text/element node. If not, we need to\n\t * create an additional comment node to act as `effect.nodes.start`\n\t */\n\tvar has_start = !content.startsWith('<!>');\n\n\treturn () => {\n\t\tif (hydrating) {\n\t\t\tassign_nodes(hydrate_node, null);\n\t\t\treturn hydrate_node;\n\t\t}\n\n\t\tif (node === undefined) {\n\t\t\tnode = create_fragment_from_html(has_start ? content : '<!>' + content);\n\t\t\tif (!is_fragment) node = /** @type {Node} */ (get_first_child(node));\n\t\t}\n\n\t\tvar clone = /** @type {TemplateNode} */ (\n\t\t\tuse_import_node || is_firefox ? document.importNode(node, true) : node.cloneNode(true)\n\t\t);\n\n\t\tif (is_fragment) {\n\t\t\tvar start = /** @type {TemplateNode} */ (get_first_child(clone));\n\t\t\tvar end = /** @type {TemplateNode} */ (clone.lastChild);\n\n\t\t\tassign_nodes(start, end);\n\t\t} else {\n\t\t\tassign_nodes(clone, clone);\n\t\t}\n\n\t\treturn clone;\n\t};\n}\n\n/**\n * @param {string} content\n * @param {number} flags\n * @returns {() => Node | Node[]}\n */\n/*#__NO_SIDE_EFFECTS__*/\nexport function template_with_script(content, flags) {\n\tvar fn = template(content, flags);\n\treturn () => run_scripts(/** @type {Element | DocumentFragment} */ (fn()));\n}\n\n/**\n * @param {string} content\n * @param {number} flags\n * @param {'svg' | 'math'} ns\n * @returns {() => Node | Node[]}\n */\n/*#__NO_SIDE_EFFECTS__*/\nexport function ns_template(content, flags, ns = 'svg') {\n\t/**\n\t * Whether or not the first item is a text/element node. If not, we need to\n\t * create an additional comment node to act as `effect.nodes.start`\n\t */\n\tvar has_start = !content.startsWith('<!>');\n\n\tvar is_fragment = (flags & TEMPLATE_FRAGMENT) !== 0;\n\tvar wrapped = `<${ns}>${has_start ? content : '<!>' + content}</${ns}>`;\n\n\t/** @type {Element | DocumentFragment} */\n\tvar node;\n\n\treturn () => {\n\t\tif (hydrating) {\n\t\t\tassign_nodes(hydrate_node, null);\n\t\t\treturn hydrate_node;\n\t\t}\n\n\t\tif (!node) {\n\t\t\tvar fragment = /** @type {DocumentFragment} */ (create_fragment_from_html(wrapped));\n\t\t\tvar root = /** @type {Element} */ (get_first_child(fragment));\n\n\t\t\tif (is_fragment) {\n\t\t\t\tnode = document.createDocumentFragment();\n\t\t\t\twhile (get_first_child(root)) {\n\t\t\t\t\tnode.appendChild(/** @type {Node} */ (get_first_child(root)));\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tnode = /** @type {Element} */ (get_first_child(root));\n\t\t\t}\n\t\t}\n\n\t\tvar clone = /** @type {TemplateNode} */ (node.cloneNode(true));\n\n\t\tif (is_fragment) {\n\t\t\tvar start = /** @type {TemplateNode} */ (get_first_child(clone));\n\t\t\tvar end = /** @type {TemplateNode} */ (clone.lastChild);\n\n\t\t\tassign_nodes(start, end);\n\t\t} else {\n\t\t\tassign_nodes(clone, clone);\n\t\t}\n\n\t\treturn clone;\n\t};\n}\n\n/**\n * @param {string} content\n * @param {number} flags\n * @returns {() => Node | Node[]}\n */\n/*#__NO_SIDE_EFFECTS__*/\nexport function svg_template_with_script(content, flags) {\n\tvar fn = ns_template(content, flags);\n\treturn () => run_scripts(/** @type {Element | DocumentFragment} */ (fn()));\n}\n\n/**\n * @param {string} content\n * @param {number} flags\n * @returns {() => Node | Node[]}\n */\n/*#__NO_SIDE_EFFECTS__*/\nexport function mathml_template(content, flags) {\n\treturn ns_template(content, flags, 'math');\n}\n\n/**\n * Creating a document fragment from HTML that contains script tags will not execute\n * the scripts. We need to replace the script tags with new ones so that they are executed.\n * @param {Element | DocumentFragment} node\n * @returns {Node | Node[]}\n */\nfunction run_scripts(node) {\n\t// scripts were SSR'd, in which case they will run\n\tif (hydrating) return node;\n\n\tconst is_fragment = node.nodeType === 11;\n\tconst scripts =\n\t\t/** @type {HTMLElement} */ (node).tagName === 'SCRIPT'\n\t\t\t? [/** @type {HTMLScriptElement} */ (node)]\n\t\t\t: node.querySelectorAll('script');\n\tconst effect = /** @type {Effect} */ (active_effect);\n\n\tfor (const script of scripts) {\n\t\tconst clone = document.createElement('script');\n\t\tfor (var attribute of script.attributes) {\n\t\t\tclone.setAttribute(attribute.name, attribute.value);\n\t\t}\n\n\t\tclone.textContent = script.textContent;\n\n\t\t// The script has changed - if it's at the edges, the effect now points at dead nodes\n\t\tif (is_fragment ? node.firstChild === script : node === script) {\n\t\t\teffect.nodes_start = clone;\n\t\t}\n\t\tif (is_fragment ? node.lastChild === script : node === script) {\n\t\t\teffect.nodes_end = clone;\n\t\t}\n\n\t\tscript.replaceWith(clone);\n\t}\n\treturn node;\n}\n\n/**\n * Don't mark this as side-effect-free, hydration needs to walk all nodes\n * @param {any} value\n */\nexport function text(value = '') {\n\tif (!hydrating) {\n\t\tvar t = create_text(value + '');\n\t\tassign_nodes(t, t);\n\t\treturn t;\n\t}\n\n\tvar node = hydrate_node;\n\n\tif (node.nodeType !== 3) {\n\t\t// if an {expression} is empty during SSR, we need to insert an empty text node\n\t\tnode.before((node = create_text()));\n\t\tset_hydrate_node(node);\n\t}\n\n\tassign_nodes(node, node);\n\treturn node;\n}\n\nexport function comment() {\n\t// we're not delegating to `template` here for performance reasons\n\tif (hydrating) {\n\t\tassign_nodes(hydrate_node, null);\n\t\treturn hydrate_node;\n\t}\n\n\tvar frag = document.createDocumentFragment();\n\tvar start = document.createComment('');\n\tvar anchor = create_text();\n\tfrag.append(start, anchor);\n\n\tassign_nodes(start, anchor);\n\n\treturn frag;\n}\n\n/**\n * Assign the created (or in hydration mode, traversed) dom elements to the current block\n * and insert the elements into the dom (in client mode).\n * @param {Text | Comment | Element} anchor\n * @param {DocumentFragment | Element} dom\n */\nexport function append(anchor, dom) {\n\tif (hydrating) {\n\t\t/** @type {Effect} */ (active_effect).nodes_end = hydrate_node;\n\t\thydrate_next();\n\t\treturn;\n\t}\n\n\tif (anchor === null) {\n\t\t// edge case — void `<svelte:element>` with content\n\t\treturn;\n\t}\n\n\tanchor.before(/** @type {Node} */ (dom));\n}\n\n/**\n * Create (or hydrate) an unique UID for the component instance.\n */\nexport function props_id() {\n\tif (\n\t\thydrating &&\n\t\thydrate_node &&\n\t\thydrate_node.nodeType === 8 &&\n\t\thydrate_node.textContent?.startsWith(`#`)\n\t) {\n\t\tconst id = hydrate_node.textContent.substring(1);\n\t\thydrate_next();\n\t\treturn id;\n\t}\n\n\t// @ts-expect-error This way we ensure the id is unique even across Svelte runtimes\n\t(window.__svelte ??= {}).uid ??= 1;\n\n\t// @ts-expect-error\n\treturn `c${window.__svelte.uid++}`;\n}\n","/** @param {string} html */\nexport function create_fragment_from_html(html) {\n\tvar elem = document.createElement('template');\n\telem.innerHTML = html;\n\treturn elem.content;\n}\n","/** @import { ComponentContext, Effect, TemplateNode } from '#client' */\n/** @import { Component, ComponentType, SvelteComponent, MountOptions } from '../../index.js' */\nimport { DEV } from 'esm-env';\nimport {\n\tclear_text_content,\n\tcreate_text,\n\tget_first_child,\n\tget_next_sibling,\n\tinit_operations\n} from './dom/operations.js';\nimport { HYDRATION_END, HYDRATION_ERROR, HYDRATION_START } from '../../constants.js';\nimport { active_effect } from './runtime.js';\nimport { push, pop, component_context } from './context.js';\nimport { component_root, branch } from './reactivity/effects.js';\nimport {\n\thydrate_next,\n\thydrate_node,\n\thydrating,\n\tset_hydrate_node,\n\tset_hydrating\n} from './dom/hydration.js';\nimport { array_from } from '../shared/utils.js';\nimport {\n\tall_registered_events,\n\thandle_event_propagation,\n\troot_event_handles\n} from './dom/elements/events.js';\nimport { reset_head_anchor } from './dom/blocks/svelte-head.js';\nimport * as w from './warnings.js';\nimport * as e from './errors.js';\nimport { assign_nodes } from './dom/template.js';\nimport { is_passive_event } from '../../utils.js';\n\n/**\n * This is normally true — block effects should run their intro transitions —\n * but is false during hydration (unless `options.intro` is `true`) and\n * when creating the children of a `<svelte:element>` that just changed tag\n */\nexport let should_intro = true;\n\n/** @param {boolean} value */\nexport function set_should_intro(value) {\n\tshould_intro = value;\n}\n\n/**\n * @param {Element} text\n * @param {string} value\n * @returns {void}\n */\nexport function set_text(text, value) {\n\t// For objects, we apply string coercion (which might make things like $state array references in the template reactive) before diffing\n\tvar str = value == null ? '' : typeof value === 'object' ? value + '' : value;\n\t// @ts-expect-error\n\tif (str !== (text.__t ??= text.nodeValue)) {\n\t\t// @ts-expect-error\n\t\ttext.__t = str;\n\t\ttext.nodeValue = str + '';\n\t}\n}\n\n/**\n * Mounts a component to the given target and returns the exports and potentially the props (if compiled with `accessors: true`) of the component.\n * Transitions will play during the initial render unless the `intro` option is set to `false`.\n *\n * @template {Record<string, any>} Props\n * @template {Record<string, any>} Exports\n * @param {ComponentType<SvelteComponent<Props>> | Component<Props, Exports, any>} component\n * @param {MountOptions<Props>} options\n * @returns {Exports}\n */\nexport function mount(component, options) {\n\treturn _mount(component, options);\n}\n\n/**\n * Hydrates a component on the given target and returns the exports and potentially the props (if compiled with `accessors: true`) of the component\n *\n * @template {Record<string, any>} Props\n * @template {Record<string, any>} Exports\n * @param {ComponentType<SvelteComponent<Props>> | Component<Props, Exports, any>} component\n * @param {{} extends Props ? {\n * \t\ttarget: Document | Element | ShadowRoot;\n * \t\tprops?: Props;\n * \t\tevents?: Record<string, (e: any) => any>;\n *  \tcontext?: Map<any, any>;\n * \t\tintro?: boolean;\n * \t\trecover?: boolean;\n * \t} : {\n * \t\ttarget: Document | Element | ShadowRoot;\n * \t\tprops: Props;\n * \t\tevents?: Record<string, (e: any) => any>;\n *  \tcontext?: Map<any, any>;\n * \t\tintro?: boolean;\n * \t\trecover?: boolean;\n * \t}} options\n * @returns {Exports}\n */\nexport function hydrate(component, options) {\n\tinit_operations();\n\toptions.intro = options.intro ?? false;\n\tconst target = options.target;\n\tconst was_hydrating = hydrating;\n\tconst previous_hydrate_node = hydrate_node;\n\n\ttry {\n\t\tvar anchor = /** @type {TemplateNode} */ (get_first_child(target));\n\t\twhile (\n\t\t\tanchor &&\n\t\t\t(anchor.nodeType !== 8 || /** @type {Comment} */ (anchor).data !== HYDRATION_START)\n\t\t) {\n\t\t\tanchor = /** @type {TemplateNode} */ (get_next_sibling(anchor));\n\t\t}\n\n\t\tif (!anchor) {\n\t\t\tthrow HYDRATION_ERROR;\n\t\t}\n\n\t\tset_hydrating(true);\n\t\tset_hydrate_node(/** @type {Comment} */ (anchor));\n\t\thydrate_next();\n\n\t\tconst instance = _mount(component, { ...options, anchor });\n\n\t\tif (\n\t\t\thydrate_node === null ||\n\t\t\thydrate_node.nodeType !== 8 ||\n\t\t\t/** @type {Comment} */ (hydrate_node).data !== HYDRATION_END\n\t\t) {\n\t\t\tw.hydration_mismatch();\n\t\t\tthrow HYDRATION_ERROR;\n\t\t}\n\n\t\tset_hydrating(false);\n\n\t\treturn /**  @type {Exports} */ (instance);\n\t} catch (error) {\n\t\tif (error === HYDRATION_ERROR) {\n\t\t\tif (options.recover === false) {\n\t\t\t\te.hydration_failed();\n\t\t\t}\n\n\t\t\t// If an error occured above, the operations might not yet have been initialised.\n\t\t\tinit_operations();\n\t\t\tclear_text_content(target);\n\n\t\t\tset_hydrating(false);\n\t\t\treturn mount(component, options);\n\t\t}\n\n\t\tthrow error;\n\t} finally {\n\t\tset_hydrating(was_hydrating);\n\t\tset_hydrate_node(previous_hydrate_node);\n\t\treset_head_anchor();\n\t}\n}\n\n/** @type {Map<string, number>} */\nconst document_listeners = new Map();\n\n/**\n * @template {Record<string, any>} Exports\n * @param {ComponentType<SvelteComponent<any>> | Component<any>} Component\n * @param {MountOptions} options\n * @returns {Exports}\n */\nfunction _mount(Component, { target, anchor, props = {}, events, context, intro = true }) {\n\tinit_operations();\n\n\tvar registered_events = new Set();\n\n\t/** @param {Array<string>} events */\n\tvar event_handle = (events) => {\n\t\tfor (var i = 0; i < events.length; i++) {\n\t\t\tvar event_name = events[i];\n\n\t\t\tif (registered_events.has(event_name)) continue;\n\t\t\tregistered_events.add(event_name);\n\n\t\t\tvar passive = is_passive_event(event_name);\n\n\t\t\t// Add the event listener to both the container and the document.\n\t\t\t// The container listener ensures we catch events from within in case\n\t\t\t// the outer content stops propagation of the event.\n\t\t\ttarget.addEventListener(event_name, handle_event_propagation, { passive });\n\n\t\t\tvar n = document_listeners.get(event_name);\n\n\t\t\tif (n === undefined) {\n\t\t\t\t// The document listener ensures we catch events that originate from elements that were\n\t\t\t\t// manually moved outside of the container (e.g. via manual portals).\n\t\t\t\tdocument.addEventListener(event_name, handle_event_propagation, { passive });\n\t\t\t\tdocument_listeners.set(event_name, 1);\n\t\t\t} else {\n\t\t\t\tdocument_listeners.set(event_name, n + 1);\n\t\t\t}\n\t\t}\n\t};\n\n\tevent_handle(array_from(all_registered_events));\n\troot_event_handles.add(event_handle);\n\n\t/** @type {Exports} */\n\t// @ts-expect-error will be defined because the render effect runs synchronously\n\tvar component = undefined;\n\n\tvar unmount = component_root(() => {\n\t\tvar anchor_node = anchor ?? target.appendChild(create_text());\n\n\t\tbranch(() => {\n\t\t\tif (context) {\n\t\t\t\tpush({});\n\t\t\t\tvar ctx = /** @type {ComponentContext} */ (component_context);\n\t\t\t\tctx.c = context;\n\t\t\t}\n\n\t\t\tif (events) {\n\t\t\t\t// We can't spread the object or else we'd lose the state proxy stuff, if it is one\n\t\t\t\t/** @type {any} */ (props).$$events = events;\n\t\t\t}\n\n\t\t\tif (hydrating) {\n\t\t\t\tassign_nodes(/** @type {TemplateNode} */ (anchor_node), null);\n\t\t\t}\n\n\t\t\tshould_intro = intro;\n\t\t\t// @ts-expect-error the public typings are not what the actual function looks like\n\t\t\tcomponent = Component(anchor_node, props) || {};\n\t\t\tshould_intro = true;\n\n\t\t\tif (hydrating) {\n\t\t\t\t/** @type {Effect} */ (active_effect).nodes_end = hydrate_node;\n\t\t\t}\n\n\t\t\tif (context) {\n\t\t\t\tpop();\n\t\t\t}\n\t\t});\n\n\t\treturn () => {\n\t\t\tfor (var event_name of registered_events) {\n\t\t\t\ttarget.removeEventListener(event_name, handle_event_propagation);\n\n\t\t\t\tvar n = /** @type {number} */ (document_listeners.get(event_name));\n\n\t\t\t\tif (--n === 0) {\n\t\t\t\t\tdocument.removeEventListener(event_name, handle_event_propagation);\n\t\t\t\t\tdocument_listeners.delete(event_name);\n\t\t\t\t} else {\n\t\t\t\t\tdocument_listeners.set(event_name, n);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\troot_event_handles.delete(event_handle);\n\n\t\t\tif (anchor_node !== anchor) {\n\t\t\t\tanchor_node.parentNode?.removeChild(anchor_node);\n\t\t\t}\n\t\t};\n\t});\n\n\tmounted_components.set(component, unmount);\n\treturn component;\n}\n\n/**\n * References of the components that were mounted or hydrated.\n * Uses a `WeakMap` to avoid memory leaks.\n */\nlet mounted_components = new WeakMap();\n\n/**\n * Unmounts a component that was previously mounted using `mount` or `hydrate`.\n *\n * Since 5.13.0, if `options.outro` is `true`, [transitions](https://svelte.dev/docs/svelte/transition) will play before the component is removed from the DOM.\n *\n * Returns a `Promise` that resolves after transitions have completed if `options.outro` is true, or immediately otherwise (prior to 5.13.0, returns `void`).\n *\n * ```js\n * import { mount, unmount } from 'svelte';\n * import App from './App.svelte';\n *\n * const app = mount(App, { target: document.body });\n *\n * // later...\n * unmount(app, { outro: true });\n * ```\n * @param {Record<string, any>} component\n * @param {{ outro?: boolean }} [options]\n * @returns {Promise<void>}\n */\nexport function unmount(component, options) {\n\tconst fn = mounted_components.get(component);\n\n\tif (fn) {\n\t\tmounted_components.delete(component);\n\t\treturn fn(options);\n\t}\n\n\tif (DEV) {\n\t\tw.lifecycle_double_unmount();\n\t}\n\n\treturn Promise.resolve();\n}\n","/** @import { Effect, TemplateNode } from '#client' */\nimport { EFFECT_TRANSPARENT } from '#client/constants';\nimport {\n\thydrate_next,\n\thydrate_node,\n\thydrating,\n\tremove_nodes,\n\tset_hydrate_node,\n\tset_hydrating\n} from '../hydration.js';\nimport { block, branch, pause_effect, resume_effect } from '../../reactivity/effects.js';\nimport { HYDRATION_START, HYDRATION_START_ELSE, UNINITIALIZED } from '../../../../constants.js';\n\n/**\n * @param {TemplateNode} node\n * @param {(branch: (fn: (anchor: Node, elseif?: [number,number]) => void, flag?: boolean) => void) => void} fn\n * @param {[number,number]} [elseif]\n * @returns {void}\n */\nexport function if_block(node, fn, [root_index, hydrate_index] = [0, 0]) {\n\tif (hydrating && root_index === 0) {\n\t\thydrate_next();\n\t}\n\n\tvar anchor = node;\n\n\t/** @type {Effect | null} */\n\tvar consequent_effect = null;\n\n\t/** @type {Effect | null} */\n\tvar alternate_effect = null;\n\n\t/** @type {UNINITIALIZED | boolean | null} */\n\tvar condition = UNINITIALIZED;\n\n\tvar flags = root_index > 0 ? EFFECT_TRANSPARENT : 0;\n\n\tvar has_branch = false;\n\n\tconst set_branch = (\n\t\t/** @type {(anchor: Node, elseif?: [number,number]) => void} */ fn,\n\t\tflag = true\n\t) => {\n\t\thas_branch = true;\n\t\tupdate_branch(flag, fn);\n\t};\n\n\tconst update_branch = (\n\t\t/** @type {boolean | null} */ new_condition,\n\t\t/** @type {null | ((anchor: Node, elseif?: [number,number]) => void)} */ fn\n\t) => {\n\t\tif (condition === (condition = new_condition)) return;\n\n\t\t/** Whether or not there was a hydration mismatch. Needs to be a `let` or else it isn't treeshaken out */\n\t\tlet mismatch = false;\n\n\t\tif (hydrating && hydrate_index !== -1) {\n\t\t\tif (root_index === 0) {\n\t\t\t\tconst data = /** @type {Comment} */ (anchor).data;\n\t\t\t\tif (data === HYDRATION_START) {\n\t\t\t\t\thydrate_index = 0;\n\t\t\t\t} else if (data === HYDRATION_START_ELSE) {\n\t\t\t\t\thydrate_index = Infinity;\n\t\t\t\t} else {\n\t\t\t\t\thydrate_index = parseInt(data.substring(1));\n\t\t\t\t\tif (hydrate_index !== hydrate_index) {\n\t\t\t\t\t\t// if hydrate_index is NaN\n\t\t\t\t\t\t// we set an invalid index to force mismatch\n\t\t\t\t\t\thydrate_index = condition ? Infinity : -1;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\tconst is_else = hydrate_index > root_index;\n\n\t\t\tif (!!condition === is_else) {\n\t\t\t\t// Hydration mismatch: remove everything inside the anchor and start fresh.\n\t\t\t\t// This could happen with `{#if browser}...{/if}`, for example\n\t\t\t\tanchor = remove_nodes();\n\n\t\t\t\tset_hydrate_node(anchor);\n\t\t\t\tset_hydrating(false);\n\t\t\t\tmismatch = true;\n\t\t\t\thydrate_index = -1; // ignore hydration in next else if\n\t\t\t}\n\t\t}\n\n\t\tif (condition) {\n\t\t\tif (consequent_effect) {\n\t\t\t\tresume_effect(consequent_effect);\n\t\t\t} else if (fn) {\n\t\t\t\tconsequent_effect = branch(() => fn(anchor));\n\t\t\t}\n\n\t\t\tif (alternate_effect) {\n\t\t\t\tpause_effect(alternate_effect, () => {\n\t\t\t\t\talternate_effect = null;\n\t\t\t\t});\n\t\t\t}\n\t\t} else {\n\t\t\tif (alternate_effect) {\n\t\t\t\tresume_effect(alternate_effect);\n\t\t\t} else if (fn) {\n\t\t\t\talternate_effect = branch(() => fn(anchor, [root_index + 1, hydrate_index]));\n\t\t\t}\n\n\t\t\tif (consequent_effect) {\n\t\t\t\tpause_effect(consequent_effect, () => {\n\t\t\t\t\tconsequent_effect = null;\n\t\t\t\t});\n\t\t\t}\n\t\t}\n\n\t\tif (mismatch) {\n\t\t\t// continue in hydration mode\n\t\t\tset_hydrating(true);\n\t\t}\n\t};\n\n\tblock(() => {\n\t\thas_branch = false;\n\t\tfn(set_branch);\n\t\tif (!has_branch) {\n\t\t\tupdate_branch(null, null);\n\t\t}\n\t}, flags);\n\n\tif (hydrating) {\n\t\tanchor = hydrate_node;\n\t}\n}\n","/** @import { EachItem, EachState, Effect, MaybeSource, Source, TemplateNode, TransitionManager, Value } from '#client' */\nimport {\n\tEACH_INDEX_REACTIVE,\n\tEACH_IS_ANIMATED,\n\tEACH_IS_CONTROLLED,\n\tEACH_ITEM_IMMUTABLE,\n\tEACH_ITEM_REACTIVE,\n\tHYDRATION_END,\n\tHYDRATION_START_ELSE\n} from '../../../../constants.js';\nimport {\n\thydrate_next,\n\thydrate_node,\n\thydrating,\n\tremove_nodes,\n\tset_hydrate_node,\n\tset_hydrating\n} from '../hydration.js';\nimport {\n\tclear_text_content,\n\tcreate_text,\n\tget_first_child,\n\tget_next_sibling\n} from '../operations.js';\nimport {\n\tblock,\n\tbranch,\n\tdestroy_effect,\n\trun_out_transitions,\n\tpause_children,\n\tpause_effect,\n\tresume_effect\n} from '../../reactivity/effects.js';\nimport { source, mutable_source, internal_set } from '../../reactivity/sources.js';\nimport { array_from, is_array } from '../../../shared/utils.js';\nimport { INERT } from '#client/constants';\nimport { queue_micro_task } from '../task.js';\nimport { active_effect, get } from '../../runtime.js';\nimport { DEV } from 'esm-env';\nimport { derived_safe_equal } from '../../reactivity/deriveds.js';\n\n/**\n * The row of a keyed each block that is currently updating. We track this\n * so that `animate:` directives have something to attach themselves to\n * @type {EachItem | null}\n */\nexport let current_each_item = null;\n\n/** @param {EachItem | null} item */\nexport function set_current_each_item(item) {\n\tcurrent_each_item = item;\n}\n\n/**\n * @param {any} _\n * @param {number} i\n */\nexport function index(_, i) {\n\treturn i;\n}\n\n/**\n * Pause multiple effects simultaneously, and coordinate their\n * subsequent destruction. Used in each blocks\n * @param {EachState} state\n * @param {EachItem[]} items\n * @param {null | Node} controlled_anchor\n * @param {Map<any, EachItem>} items_map\n */\nfunction pause_effects(state, items, controlled_anchor, items_map) {\n\t/** @type {TransitionManager[]} */\n\tvar transitions = [];\n\tvar length = items.length;\n\n\tfor (var i = 0; i < length; i++) {\n\t\tpause_children(items[i].e, transitions, true);\n\t}\n\n\tvar is_controlled = length > 0 && transitions.length === 0 && controlled_anchor !== null;\n\t// If we have a controlled anchor, it means that the each block is inside a single\n\t// DOM element, so we can apply a fast-path for clearing the contents of the element.\n\tif (is_controlled) {\n\t\tvar parent_node = /** @type {Element} */ (\n\t\t\t/** @type {Element} */ (controlled_anchor).parentNode\n\t\t);\n\t\tclear_text_content(parent_node);\n\t\tparent_node.append(/** @type {Element} */ (controlled_anchor));\n\t\titems_map.clear();\n\t\tlink(state, items[0].prev, items[length - 1].next);\n\t}\n\n\trun_out_transitions(transitions, () => {\n\t\tfor (var i = 0; i < length; i++) {\n\t\t\tvar item = items[i];\n\t\t\tif (!is_controlled) {\n\t\t\t\titems_map.delete(item.k);\n\t\t\t\tlink(state, item.prev, item.next);\n\t\t\t}\n\t\t\tdestroy_effect(item.e, !is_controlled);\n\t\t}\n\t});\n}\n\n/**\n * @template V\n * @param {Element | Comment} node The next sibling node, or the parent node if this is a 'controlled' block\n * @param {number} flags\n * @param {() => V[]} get_collection\n * @param {(value: V, index: number) => any} get_key\n * @param {(anchor: Node, item: MaybeSource<V>, index: MaybeSource<number>) => void} render_fn\n * @param {null | ((anchor: Node) => void)} fallback_fn\n * @returns {void}\n */\nexport function each(node, flags, get_collection, get_key, render_fn, fallback_fn = null) {\n\tvar anchor = node;\n\n\t/** @type {EachState} */\n\tvar state = { flags, items: new Map(), first: null };\n\n\tvar is_controlled = (flags & EACH_IS_CONTROLLED) !== 0;\n\n\tif (is_controlled) {\n\t\tvar parent_node = /** @type {Element} */ (node);\n\n\t\tanchor = hydrating\n\t\t\t? set_hydrate_node(/** @type {Comment | Text} */ (get_first_child(parent_node)))\n\t\t\t: parent_node.appendChild(create_text());\n\t}\n\n\tif (hydrating) {\n\t\thydrate_next();\n\t}\n\n\t/** @type {Effect | null} */\n\tvar fallback = null;\n\n\tvar was_empty = false;\n\n\t// TODO: ideally we could use derived for runes mode but because of the ability\n\t// to use a store which can be mutated, we can't do that here as mutating a store\n\t// will still result in the collection array being the same from the store\n\tvar each_array = derived_safe_equal(() => {\n\t\tvar collection = get_collection();\n\n\t\treturn is_array(collection) ? collection : collection == null ? [] : array_from(collection);\n\t});\n\n\tblock(() => {\n\t\tvar array = get(each_array);\n\t\tvar length = array.length;\n\n\t\tif (was_empty && length === 0) {\n\t\t\t// ignore updates if the array is empty,\n\t\t\t// and it already was empty on previous run\n\t\t\treturn;\n\t\t}\n\t\twas_empty = length === 0;\n\n\t\t/** `true` if there was a hydration mismatch. Needs to be a `let` or else it isn't treeshaken out */\n\t\tlet mismatch = false;\n\n\t\tif (hydrating) {\n\t\t\tvar is_else = /** @type {Comment} */ (anchor).data === HYDRATION_START_ELSE;\n\n\t\t\tif (is_else !== (length === 0)) {\n\t\t\t\t// hydration mismatch — remove the server-rendered DOM and start over\n\t\t\t\tanchor = remove_nodes();\n\n\t\t\t\tset_hydrate_node(anchor);\n\t\t\t\tset_hydrating(false);\n\t\t\t\tmismatch = true;\n\t\t\t}\n\t\t}\n\n\t\t// this is separate to the previous block because `hydrating` might change\n\t\tif (hydrating) {\n\t\t\t/** @type {EachItem | null} */\n\t\t\tvar prev = null;\n\n\t\t\t/** @type {EachItem} */\n\t\t\tvar item;\n\n\t\t\tfor (var i = 0; i < length; i++) {\n\t\t\t\tif (\n\t\t\t\t\thydrate_node.nodeType === 8 &&\n\t\t\t\t\t/** @type {Comment} */ (hydrate_node).data === HYDRATION_END\n\t\t\t\t) {\n\t\t\t\t\t// The server rendered fewer items than expected,\n\t\t\t\t\t// so break out and continue appending non-hydrated items\n\t\t\t\t\tanchor = /** @type {Comment} */ (hydrate_node);\n\t\t\t\t\tmismatch = true;\n\t\t\t\t\tset_hydrating(false);\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\n\t\t\t\tvar value = array[i];\n\t\t\t\tvar key = get_key(value, i);\n\t\t\t\titem = create_item(\n\t\t\t\t\thydrate_node,\n\t\t\t\t\tstate,\n\t\t\t\t\tprev,\n\t\t\t\t\tnull,\n\t\t\t\t\tvalue,\n\t\t\t\t\tkey,\n\t\t\t\t\ti,\n\t\t\t\t\trender_fn,\n\t\t\t\t\tflags,\n\t\t\t\t\tget_collection\n\t\t\t\t);\n\t\t\t\tstate.items.set(key, item);\n\n\t\t\t\tprev = item;\n\t\t\t}\n\n\t\t\t// remove excess nodes\n\t\t\tif (length > 0) {\n\t\t\t\tset_hydrate_node(remove_nodes());\n\t\t\t}\n\t\t}\n\n\t\tif (!hydrating) {\n\t\t\treconcile(array, state, anchor, render_fn, flags, get_key, get_collection);\n\t\t}\n\n\t\tif (fallback_fn !== null) {\n\t\t\tif (length === 0) {\n\t\t\t\tif (fallback) {\n\t\t\t\t\tresume_effect(fallback);\n\t\t\t\t} else {\n\t\t\t\t\tfallback = branch(() => fallback_fn(anchor));\n\t\t\t\t}\n\t\t\t} else if (fallback !== null) {\n\t\t\t\tpause_effect(fallback, () => {\n\t\t\t\t\tfallback = null;\n\t\t\t\t});\n\t\t\t}\n\t\t}\n\n\t\tif (mismatch) {\n\t\t\t// continue in hydration mode\n\t\t\tset_hydrating(true);\n\t\t}\n\n\t\t// When we mount the each block for the first time, the collection won't be\n\t\t// connected to this effect as the effect hasn't finished running yet and its deps\n\t\t// won't be assigned. However, it's possible that when reconciling the each block\n\t\t// that a mutation occurred and it's made the collection MAYBE_DIRTY, so reading the\n\t\t// collection again can provide consistency to the reactive graph again as the deriveds\n\t\t// will now be `CLEAN`.\n\t\tget(each_array);\n\t});\n\n\tif (hydrating) {\n\t\tanchor = hydrate_node;\n\t}\n}\n\n/**\n * Add, remove, or reorder items output by an each block as its input changes\n * @template V\n * @param {Array<V>} array\n * @param {EachState} state\n * @param {Element | Comment | Text} anchor\n * @param {(anchor: Node, item: MaybeSource<V>, index: number | Source<number>, collection: () => V[]) => void} render_fn\n * @param {number} flags\n * @param {(value: V, index: number) => any} get_key\n * @param {() => V[]} get_collection\n * @returns {void}\n */\nfunction reconcile(array, state, anchor, render_fn, flags, get_key, get_collection) {\n\tvar is_animated = (flags & EACH_IS_ANIMATED) !== 0;\n\tvar should_update = (flags & (EACH_ITEM_REACTIVE | EACH_INDEX_REACTIVE)) !== 0;\n\n\tvar length = array.length;\n\tvar items = state.items;\n\tvar first = state.first;\n\tvar current = first;\n\n\t/** @type {undefined | Set<EachItem>} */\n\tvar seen;\n\n\t/** @type {EachItem | null} */\n\tvar prev = null;\n\n\t/** @type {undefined | Set<EachItem>} */\n\tvar to_animate;\n\n\t/** @type {EachItem[]} */\n\tvar matched = [];\n\n\t/** @type {EachItem[]} */\n\tvar stashed = [];\n\n\t/** @type {V} */\n\tvar value;\n\n\t/** @type {any} */\n\tvar key;\n\n\t/** @type {EachItem | undefined} */\n\tvar item;\n\n\t/** @type {number} */\n\tvar i;\n\n\tif (is_animated) {\n\t\tfor (i = 0; i < length; i += 1) {\n\t\t\tvalue = array[i];\n\t\t\tkey = get_key(value, i);\n\t\t\titem = items.get(key);\n\n\t\t\tif (item !== undefined) {\n\t\t\t\titem.a?.measure();\n\t\t\t\t(to_animate ??= new Set()).add(item);\n\t\t\t}\n\t\t}\n\t}\n\n\tfor (i = 0; i < length; i += 1) {\n\t\tvalue = array[i];\n\t\tkey = get_key(value, i);\n\t\titem = items.get(key);\n\n\t\tif (item === undefined) {\n\t\t\tvar child_anchor = current ? /** @type {TemplateNode} */ (current.e.nodes_start) : anchor;\n\n\t\t\tprev = create_item(\n\t\t\t\tchild_anchor,\n\t\t\t\tstate,\n\t\t\t\tprev,\n\t\t\t\tprev === null ? state.first : prev.next,\n\t\t\t\tvalue,\n\t\t\t\tkey,\n\t\t\t\ti,\n\t\t\t\trender_fn,\n\t\t\t\tflags,\n\t\t\t\tget_collection\n\t\t\t);\n\n\t\t\titems.set(key, prev);\n\n\t\t\tmatched = [];\n\t\t\tstashed = [];\n\n\t\t\tcurrent = prev.next;\n\t\t\tcontinue;\n\t\t}\n\n\t\tif (should_update) {\n\t\t\tupdate_item(item, value, i, flags);\n\t\t}\n\n\t\tif ((item.e.f & INERT) !== 0) {\n\t\t\tresume_effect(item.e);\n\t\t\tif (is_animated) {\n\t\t\t\titem.a?.unfix();\n\t\t\t\t(to_animate ??= new Set()).delete(item);\n\t\t\t}\n\t\t}\n\n\t\tif (item !== current) {\n\t\t\tif (seen !== undefined && seen.has(item)) {\n\t\t\t\tif (matched.length < stashed.length) {\n\t\t\t\t\t// more efficient to move later items to the front\n\t\t\t\t\tvar start = stashed[0];\n\t\t\t\t\tvar j;\n\n\t\t\t\t\tprev = start.prev;\n\n\t\t\t\t\tvar a = matched[0];\n\t\t\t\t\tvar b = matched[matched.length - 1];\n\n\t\t\t\t\tfor (j = 0; j < matched.length; j += 1) {\n\t\t\t\t\t\tmove(matched[j], start, anchor);\n\t\t\t\t\t}\n\n\t\t\t\t\tfor (j = 0; j < stashed.length; j += 1) {\n\t\t\t\t\t\tseen.delete(stashed[j]);\n\t\t\t\t\t}\n\n\t\t\t\t\tlink(state, a.prev, b.next);\n\t\t\t\t\tlink(state, prev, a);\n\t\t\t\t\tlink(state, b, start);\n\n\t\t\t\t\tcurrent = start;\n\t\t\t\t\tprev = b;\n\t\t\t\t\ti -= 1;\n\n\t\t\t\t\tmatched = [];\n\t\t\t\t\tstashed = [];\n\t\t\t\t} else {\n\t\t\t\t\t// more efficient to move earlier items to the back\n\t\t\t\t\tseen.delete(item);\n\t\t\t\t\tmove(item, current, anchor);\n\n\t\t\t\t\tlink(state, item.prev, item.next);\n\t\t\t\t\tlink(state, item, prev === null ? state.first : prev.next);\n\t\t\t\t\tlink(state, prev, item);\n\n\t\t\t\t\tprev = item;\n\t\t\t\t}\n\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\tmatched = [];\n\t\t\tstashed = [];\n\n\t\t\twhile (current !== null && current.k !== key) {\n\t\t\t\t// If the each block isn't inert and an item has an effect that is already inert,\n\t\t\t\t// skip over adding it to our seen Set as the item is already being handled\n\t\t\t\tif ((current.e.f & INERT) === 0) {\n\t\t\t\t\t(seen ??= new Set()).add(current);\n\t\t\t\t}\n\t\t\t\tstashed.push(current);\n\t\t\t\tcurrent = current.next;\n\t\t\t}\n\n\t\t\tif (current === null) {\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\titem = current;\n\t\t}\n\n\t\tmatched.push(item);\n\t\tprev = item;\n\t\tcurrent = item.next;\n\t}\n\n\tif (current !== null || seen !== undefined) {\n\t\tvar to_destroy = seen === undefined ? [] : array_from(seen);\n\n\t\twhile (current !== null) {\n\t\t\t// If the each block isn't inert, then inert effects are currently outroing and will be removed once the transition is finished\n\t\t\tif ((current.e.f & INERT) === 0) {\n\t\t\t\tto_destroy.push(current);\n\t\t\t}\n\t\t\tcurrent = current.next;\n\t\t}\n\n\t\tvar destroy_length = to_destroy.length;\n\n\t\tif (destroy_length > 0) {\n\t\t\tvar controlled_anchor = (flags & EACH_IS_CONTROLLED) !== 0 && length === 0 ? anchor : null;\n\n\t\t\tif (is_animated) {\n\t\t\t\tfor (i = 0; i < destroy_length; i += 1) {\n\t\t\t\t\tto_destroy[i].a?.measure();\n\t\t\t\t}\n\n\t\t\t\tfor (i = 0; i < destroy_length; i += 1) {\n\t\t\t\t\tto_destroy[i].a?.fix();\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tpause_effects(state, to_destroy, controlled_anchor, items);\n\t\t}\n\t}\n\n\tif (is_animated) {\n\t\tqueue_micro_task(() => {\n\t\t\tif (to_animate === undefined) return;\n\t\t\tfor (item of to_animate) {\n\t\t\t\titem.a?.apply();\n\t\t\t}\n\t\t});\n\t}\n\n\t/** @type {Effect} */ (active_effect).first = state.first && state.first.e;\n\t/** @type {Effect} */ (active_effect).last = prev && prev.e;\n}\n\n/**\n * @param {EachItem} item\n * @param {any} value\n * @param {number} index\n * @param {number} type\n * @returns {void}\n */\nfunction update_item(item, value, index, type) {\n\tif ((type & EACH_ITEM_REACTIVE) !== 0) {\n\t\tinternal_set(item.v, value);\n\t}\n\n\tif ((type & EACH_INDEX_REACTIVE) !== 0) {\n\t\tinternal_set(/** @type {Value<number>} */ (item.i), index);\n\t} else {\n\t\titem.i = index;\n\t}\n}\n\n/**\n * @template V\n * @param {Node} anchor\n * @param {EachState} state\n * @param {EachItem | null} prev\n * @param {EachItem | null} next\n * @param {V} value\n * @param {unknown} key\n * @param {number} index\n * @param {(anchor: Node, item: V | Source<V>, index: number | Value<number>, collection: () => V[]) => void} render_fn\n * @param {number} flags\n * @param {() => V[]} get_collection\n * @returns {EachItem}\n */\nfunction create_item(\n\tanchor,\n\tstate,\n\tprev,\n\tnext,\n\tvalue,\n\tkey,\n\tindex,\n\trender_fn,\n\tflags,\n\tget_collection\n) {\n\tvar previous_each_item = current_each_item;\n\tvar reactive = (flags & EACH_ITEM_REACTIVE) !== 0;\n\tvar mutable = (flags & EACH_ITEM_IMMUTABLE) === 0;\n\n\tvar v = reactive ? (mutable ? mutable_source(value) : source(value)) : value;\n\tvar i = (flags & EACH_INDEX_REACTIVE) === 0 ? index : source(index);\n\n\tif (DEV && reactive) {\n\t\t// For tracing purposes, we need to link the source signal we create with the\n\t\t// collection + index so that tracing works as intended\n\t\t/** @type {Value} */ (v).debug = () => {\n\t\t\tvar collection_index = typeof i === 'number' ? index : i.v;\n\t\t\t// eslint-disable-next-line @typescript-eslint/no-unused-expressions\n\t\t\tget_collection()[collection_index];\n\t\t};\n\t}\n\n\t/** @type {EachItem} */\n\tvar item = {\n\t\ti,\n\t\tv,\n\t\tk: key,\n\t\ta: null,\n\t\t// @ts-expect-error\n\t\te: null,\n\t\tprev,\n\t\tnext\n\t};\n\n\tcurrent_each_item = item;\n\n\ttry {\n\t\titem.e = branch(() => render_fn(anchor, v, i, get_collection), hydrating);\n\n\t\titem.e.prev = prev && prev.e;\n\t\titem.e.next = next && next.e;\n\n\t\tif (prev === null) {\n\t\t\tstate.first = item;\n\t\t} else {\n\t\t\tprev.next = item;\n\t\t\tprev.e.next = item.e;\n\t\t}\n\n\t\tif (next !== null) {\n\t\t\tnext.prev = item;\n\t\t\tnext.e.prev = item.e;\n\t\t}\n\n\t\treturn item;\n\t} finally {\n\t\tcurrent_each_item = previous_each_item;\n\t}\n}\n\n/**\n * @param {EachItem} item\n * @param {EachItem | null} next\n * @param {Text | Element | Comment} anchor\n */\nfunction move(item, next, anchor) {\n\tvar end = item.next ? /** @type {TemplateNode} */ (item.next.e.nodes_start) : anchor;\n\n\tvar dest = next ? /** @type {TemplateNode} */ (next.e.nodes_start) : anchor;\n\tvar node = /** @type {TemplateNode} */ (item.e.nodes_start);\n\n\twhile (node !== end) {\n\t\tvar next_node = /** @type {TemplateNode} */ (get_next_sibling(node));\n\t\tdest.before(node);\n\t\tnode = next_node;\n\t}\n}\n\n/**\n * @param {EachState} state\n * @param {EachItem | null} prev\n * @param {EachItem | null} next\n */\nfunction link(state, prev, next) {\n\tif (prev === null) {\n\t\tstate.first = next;\n\t} else {\n\t\tprev.next = next;\n\t\tprev.e.next = next && next.e;\n\t}\n\n\tif (next !== null) {\n\t\tnext.prev = prev;\n\t\tnext.e.prev = prev && prev.e;\n\t}\n}\n","/** @import { TemplateNode } from '#client' */\n\nimport {\n\tHYDRATION_END,\n\tHYDRATION_ERROR,\n\tHYDRATION_START,\n\tHYDRATION_START_ELSE\n} from '../../../constants.js';\nimport * as w from '../warnings.js';\nimport { get_next_sibling } from './operations.js';\n\n/**\n * Use this variable to guard everything related to hydration code so it can be treeshaken out\n * if the user doesn't use the `hydrate` method and these code paths are therefore not needed.\n */\nexport let hydrating = false;\n\n/** @param {boolean} value */\nexport function set_hydrating(value) {\n\thydrating = value;\n}\n\n/**\n * The node that is currently being hydrated. This starts out as the first node inside the opening\n * <!--[--> comment, and updates each time a component calls `$.child(...)` or `$.sibling(...)`.\n * When entering a block (e.g. `{#if ...}`), `hydrate_node` is the block opening comment; by the\n * time we leave the block it is the closing comment, which serves as the block's anchor.\n * @type {TemplateNode}\n */\nexport let hydrate_node;\n\n/** @param {TemplateNode} node */\nexport function set_hydrate_node(node) {\n\tif (node === null) {\n\t\tw.hydration_mismatch();\n\t\tthrow HYDRATION_ERROR;\n\t}\n\n\treturn (hydrate_node = node);\n}\n\nexport function hydrate_next() {\n\treturn set_hydrate_node(/** @type {TemplateNode} */ (get_next_sibling(hydrate_node)));\n}\n\n/** @param {TemplateNode} node */\nexport function reset(node) {\n\tif (!hydrating) return;\n\n\t// If the node has remaining siblings, something has gone wrong\n\tif (get_next_sibling(hydrate_node) !== null) {\n\t\tw.hydration_mismatch();\n\t\tthrow HYDRATION_ERROR;\n\t}\n\n\thydrate_node = node;\n}\n\n/**\n * @param {HTMLTemplateElement} template\n */\nexport function hydrate_template(template) {\n\tif (hydrating) {\n\t\t// @ts-expect-error TemplateNode doesn't include DocumentFragment, but it's actually fine\n\t\thydrate_node = template.content;\n\t}\n}\n\nexport function next(count = 1) {\n\tif (hydrating) {\n\t\tvar i = count;\n\t\tvar node = hydrate_node;\n\n\t\twhile (i--) {\n\t\t\tnode = /** @type {TemplateNode} */ (get_next_sibling(node));\n\t\t}\n\n\t\thydrate_node = node;\n\t}\n}\n\n/**\n * Removes all nodes starting at `hydrate_node` up until the next hydration end comment\n */\nexport function remove_nodes() {\n\tvar depth = 0;\n\tvar node = hydrate_node;\n\n\twhile (true) {\n\t\tif (node.nodeType === 8) {\n\t\t\tvar data = /** @type {Comment} */ (node).data;\n\n\t\t\tif (data === HYDRATION_END) {\n\t\t\t\tif (depth === 0) return node;\n\t\t\t\tdepth -= 1;\n\t\t\t} else if (data === HYDRATION_START || data === HYDRATION_START_ELSE) {\n\t\t\t\tdepth += 1;\n\t\t\t}\n\t\t}\n\n\t\tvar next = /** @type {TemplateNode} */ (get_next_sibling(node));\n\t\tnode.remove();\n\t\tnode = next;\n\t}\n}\n","import { escape_html } from '../../escaping.js';\nimport { clsx as _clsx } from 'clsx';\n\n/**\n * `<div translate={false}>` should be rendered as `<div translate=\"no\">` and _not_\n * `<div translate=\"false\">`, which is equivalent to `<div translate=\"yes\">`. There\n * may be other odd cases that need to be added to this list in future\n * @type {Record<string, Map<any, string>>}\n */\nconst replacements = {\n\ttranslate: new Map([\n\t\t[true, 'yes'],\n\t\t[false, 'no']\n\t])\n};\n\n/**\n * @template V\n * @param {string} name\n * @param {V} value\n * @param {boolean} [is_boolean]\n * @returns {string}\n */\nexport function attr(name, value, is_boolean = false) {\n\tif (value == null || (!value && is_boolean)) return '';\n\tconst normalized = (name in replacements && replacements[name].get(value)) || value;\n\tconst assignment = is_boolean ? '' : `=\"${escape_html(normalized, true)}\"`;\n\treturn ` ${name}${assignment}`;\n}\n\n/**\n * Small wrapper around clsx to preserve Svelte's (weird) handling of falsy values.\n * TODO Svelte 6 revisit this, and likely turn all falsy values into the empty string (what clsx also does)\n * @param  {any} value\n */\nexport function clsx(value) {\n\tif (typeof value === 'object') {\n\t\treturn _clsx(value);\n\t} else {\n\t\treturn value ?? '';\n\t}\n}\n\nconst whitespace = [...' \\t\\n\\r\\f\\u00a0\\u000b\\ufeff'];\n\n/**\n * @param {any} value\n * @param {string | null} [hash]\n * @param {Record<string, boolean>} [directives]\n * @returns {string | null}\n */\nexport function to_class(value, hash, directives) {\n\tvar classname = value == null ? '' : '' + value;\n\n\tif (hash) {\n\t\tclassname = classname ? classname + ' ' + hash : hash;\n\t}\n\n\tif (directives) {\n\t\tfor (var key in directives) {\n\t\t\tif (directives[key]) {\n\t\t\t\tclassname = classname ? classname + ' ' + key : key;\n\t\t\t} else if (classname.length) {\n\t\t\t\tvar len = key.length;\n\t\t\t\tvar a = 0;\n\n\t\t\t\twhile ((a = classname.indexOf(key, a)) >= 0) {\n\t\t\t\t\tvar b = a + len;\n\n\t\t\t\t\tif (\n\t\t\t\t\t\t(a === 0 || whitespace.includes(classname[a - 1])) &&\n\t\t\t\t\t\t(b === classname.length || whitespace.includes(classname[b]))\n\t\t\t\t\t) {\n\t\t\t\t\t\tclassname = (a === 0 ? '' : classname.substring(0, a)) + classname.substring(b + 1);\n\t\t\t\t\t} else {\n\t\t\t\t\t\ta = b;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\treturn classname === '' ? null : classname;\n}\n\n/**\n *\n * @param {Record<string,any>} styles\n * @param {boolean} important\n */\nfunction append_styles(styles, important = false) {\n\tvar separator = important ? ' !important;' : ';';\n\tvar css = '';\n\n\tfor (var key in styles) {\n\t\tvar value = styles[key];\n\t\tif (value != null && value !== '') {\n\t\t\tcss += ' ' + key + ': ' + value + separator;\n\t\t}\n\t}\n\n\treturn css;\n}\n\n/**\n * @param {string} name\n * @returns {string}\n */\nfunction to_css_name(name) {\n\tif (name[0] !== '-' || name[1] !== '-') {\n\t\treturn name.toLowerCase();\n\t}\n\treturn name;\n}\n\n/**\n * @param {any} value\n * @param {Record<string, any> | [Record<string, any>, Record<string, any>]} [styles]\n * @returns {string | null}\n */\nexport function to_style(value, styles) {\n\tif (styles) {\n\t\tvar new_style = '';\n\n\t\t/** @type {Record<string,any> | undefined} */\n\t\tvar normal_styles;\n\n\t\t/** @type {Record<string,any> | undefined} */\n\t\tvar important_styles;\n\n\t\tif (Array.isArray(styles)) {\n\t\t\tnormal_styles = styles[0];\n\t\t\timportant_styles = styles[1];\n\t\t} else {\n\t\t\tnormal_styles = styles;\n\t\t}\n\n\t\tif (value) {\n\t\t\tvalue = String(value)\n\t\t\t\t.replaceAll(/\\s*\\/\\*.*?\\*\\/\\s*/g, '')\n\t\t\t\t.trim();\n\n\t\t\t/** @type {boolean | '\"' | \"'\"} */\n\t\t\tvar in_str = false;\n\t\t\tvar in_apo = 0;\n\t\t\tvar in_comment = false;\n\n\t\t\tvar reserved_names = [];\n\n\t\t\tif (normal_styles) {\n\t\t\t\treserved_names.push(...Object.keys(normal_styles).map(to_css_name));\n\t\t\t}\n\t\t\tif (important_styles) {\n\t\t\t\treserved_names.push(...Object.keys(important_styles).map(to_css_name));\n\t\t\t}\n\n\t\t\tvar start_index = 0;\n\t\t\tvar name_index = -1;\n\n\t\t\tconst len = value.length;\n\t\t\tfor (var i = 0; i < len; i++) {\n\t\t\t\tvar c = value[i];\n\n\t\t\t\tif (in_comment) {\n\t\t\t\t\tif (c === '/' && value[i - 1] === '*') {\n\t\t\t\t\t\tin_comment = false;\n\t\t\t\t\t}\n\t\t\t\t} else if (in_str) {\n\t\t\t\t\tif (in_str === c) {\n\t\t\t\t\t\tin_str = false;\n\t\t\t\t\t}\n\t\t\t\t} else if (c === '/' && value[i + 1] === '*') {\n\t\t\t\t\tin_comment = true;\n\t\t\t\t} else if (c === '\"' || c === \"'\") {\n\t\t\t\t\tin_str = c;\n\t\t\t\t} else if (c === '(') {\n\t\t\t\t\tin_apo++;\n\t\t\t\t} else if (c === ')') {\n\t\t\t\t\tin_apo--;\n\t\t\t\t}\n\n\t\t\t\tif (!in_comment && in_str === false && in_apo === 0) {\n\t\t\t\t\tif (c === ':' && name_index === -1) {\n\t\t\t\t\t\tname_index = i;\n\t\t\t\t\t} else if (c === ';' || i === len - 1) {\n\t\t\t\t\t\tif (name_index !== -1) {\n\t\t\t\t\t\t\tvar name = to_css_name(value.substring(start_index, name_index).trim());\n\n\t\t\t\t\t\t\tif (!reserved_names.includes(name)) {\n\t\t\t\t\t\t\t\tif (c !== ';') {\n\t\t\t\t\t\t\t\t\ti++;\n\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t\tvar property = value.substring(start_index, i).trim();\n\t\t\t\t\t\t\t\tnew_style += ' ' + property + ';';\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tstart_index = i + 1;\n\t\t\t\t\t\tname_index = -1;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tif (normal_styles) {\n\t\t\tnew_style += append_styles(normal_styles);\n\t\t}\n\n\t\tif (important_styles) {\n\t\t\tnew_style += append_styles(important_styles, true);\n\t\t}\n\n\t\tnew_style = new_style.trim();\n\t\treturn new_style === '' ? null : new_style;\n\t}\n\n\treturn value == null ? null : String(value);\n}\n","import { to_class } from '../../../shared/attributes.js';\nimport { hydrating } from '../hydration.js';\n\n/**\n * @param {Element} dom\n * @param {boolean | number} is_html\n * @param {string | null} value\n * @param {string} [hash]\n * @param {Record<string, any>} [prev_classes]\n * @param {Record<string, any>} [next_classes]\n * @returns {Record<string, boolean> | undefined}\n */\nexport function set_class(dom, is_html, value, hash, prev_classes, next_classes) {\n\t// @ts-expect-error need to add __className to patched prototype\n\tvar prev = dom.__className;\n\n\tif (\n\t\thydrating ||\n\t\tprev !== value ||\n\t\tprev === undefined // for edge case of `class={undefined}`\n\t) {\n\t\tvar next_class_name = to_class(value, hash, next_classes);\n\n\t\tif (!hydrating || next_class_name !== dom.getAttribute('class')) {\n\t\t\t// Removing the attribute when the value is only an empty string causes\n\t\t\t// performance issues vs simply making the className an empty string. So\n\t\t\t// we should only remove the class if the the value is nullish\n\t\t\t// and there no hash/directives :\n\t\t\tif (next_class_name == null) {\n\t\t\t\tdom.removeAttribute('class');\n\t\t\t} else if (is_html) {\n\t\t\t\tdom.className = next_class_name;\n\t\t\t} else {\n\t\t\t\tdom.setAttribute('class', next_class_name);\n\t\t\t}\n\t\t}\n\n\t\t// @ts-expect-error need to add __className to patched prototype\n\t\tdom.__className = value;\n\t} else if (next_classes && prev_classes !== next_classes) {\n\t\tfor (var key in next_classes) {\n\t\t\tvar is_present = !!next_classes[key];\n\n\t\t\tif (prev_classes == null || is_present !== !!prev_classes[key]) {\n\t\t\t\tdom.classList.toggle(key, is_present);\n\t\t\t}\n\t\t}\n\t}\n\n\treturn next_classes;\n}\n","import { DEV } from 'esm-env';\nimport { hydrating, set_hydrating } from '../hydration.js';\nimport { get_descriptors, get_prototype_of } from '../../../shared/utils.js';\nimport { create_event, delegate } from './events.js';\nimport { add_form_reset_listener, autofocus } from './misc.js';\nimport * as w from '../../warnings.js';\nimport { LOADING_ATTR_SYMBOL } from '#client/constants';\nimport { queue_idle_task } from '../task.js';\nimport { is_capture_event, is_delegated, normalize_attribute } from '../../../../utils.js';\nimport {\n\tactive_effect,\n\tactive_reaction,\n\tset_active_effect,\n\tset_active_reaction\n} from '../../runtime.js';\nimport { clsx } from '../../../shared/attributes.js';\nimport { set_class } from './class.js';\nimport { set_style } from './style.js';\nimport { NAMESPACE_HTML } from '../../../../constants.js';\n\nexport const CLASS = Symbol('class');\nexport const STYLE = Symbol('style');\n\nconst IS_CUSTOM_ELEMENT = Symbol('is custom element');\nconst IS_HTML = Symbol('is html');\n\n/**\n * The value/checked attribute in the template actually corresponds to the defaultValue property, so we need\n * to remove it upon hydration to avoid a bug when someone resets the form value.\n * @param {HTMLInputElement} input\n * @returns {void}\n */\nexport function remove_input_defaults(input) {\n\tif (!hydrating) return;\n\n\tvar already_removed = false;\n\n\t// We try and remove the default attributes later, rather than sync during hydration.\n\t// Doing it sync during hydration has a negative impact on performance, but deferring the\n\t// work in an idle task alleviates this greatly. If a form reset event comes in before\n\t// the idle callback, then we ensure the input defaults are cleared just before.\n\tvar remove_defaults = () => {\n\t\tif (already_removed) return;\n\t\talready_removed = true;\n\n\t\t// Remove the attributes but preserve the values\n\t\tif (input.hasAttribute('value')) {\n\t\t\tvar value = input.value;\n\t\t\tset_attribute(input, 'value', null);\n\t\t\tinput.value = value;\n\t\t}\n\n\t\tif (input.hasAttribute('checked')) {\n\t\t\tvar checked = input.checked;\n\t\t\tset_attribute(input, 'checked', null);\n\t\t\tinput.checked = checked;\n\t\t}\n\t};\n\n\t// @ts-expect-error\n\tinput.__on_r = remove_defaults;\n\tqueue_idle_task(remove_defaults);\n\tadd_form_reset_listener();\n}\n\n/**\n * @param {Element} element\n * @param {any} value\n */\nexport function set_value(element, value) {\n\tvar attributes = get_attributes(element);\n\n\tif (\n\t\tattributes.value ===\n\t\t\t(attributes.value =\n\t\t\t\t// treat null and undefined the same for the initial value\n\t\t\t\tvalue ?? undefined) ||\n\t\t// @ts-expect-error\n\t\t// `progress` elements always need their value set when it's `0`\n\t\t(element.value === value && (value !== 0 || element.nodeName !== 'PROGRESS'))\n\t) {\n\t\treturn;\n\t}\n\n\t// @ts-expect-error\n\telement.value = value ?? '';\n}\n\n/**\n * @param {Element} element\n * @param {boolean} checked\n */\nexport function set_checked(element, checked) {\n\tvar attributes = get_attributes(element);\n\n\tif (\n\t\tattributes.checked ===\n\t\t(attributes.checked =\n\t\t\t// treat null and undefined the same for the initial value\n\t\t\tchecked ?? undefined)\n\t) {\n\t\treturn;\n\t}\n\n\t// @ts-expect-error\n\telement.checked = checked;\n}\n\n/**\n * Sets the `selected` attribute on an `option` element.\n * Not set through the property because that doesn't reflect to the DOM,\n * which means it wouldn't be taken into account when a form is reset.\n * @param {HTMLOptionElement} element\n * @param {boolean} selected\n */\nexport function set_selected(element, selected) {\n\tif (selected) {\n\t\t// The selected option could've changed via user selection, and\n\t\t// setting the value without this check would set it back.\n\t\tif (!element.hasAttribute('selected')) {\n\t\t\telement.setAttribute('selected', '');\n\t\t}\n\t} else {\n\t\telement.removeAttribute('selected');\n\t}\n}\n\n/**\n * Applies the default checked property without influencing the current checked property.\n * @param {HTMLInputElement} element\n * @param {boolean} checked\n */\nexport function set_default_checked(element, checked) {\n\tconst existing_value = element.checked;\n\telement.defaultChecked = checked;\n\telement.checked = existing_value;\n}\n\n/**\n * Applies the default value property without influencing the current value property.\n * @param {HTMLInputElement | HTMLTextAreaElement} element\n * @param {string} value\n */\nexport function set_default_value(element, value) {\n\tconst existing_value = element.value;\n\telement.defaultValue = value;\n\telement.value = existing_value;\n}\n\n/**\n * @param {Element} element\n * @param {string} attribute\n * @param {string | null} value\n * @param {boolean} [skip_warning]\n */\nexport function set_attribute(element, attribute, value, skip_warning) {\n\tvar attributes = get_attributes(element);\n\n\tif (hydrating) {\n\t\tattributes[attribute] = element.getAttribute(attribute);\n\n\t\tif (\n\t\t\tattribute === 'src' ||\n\t\t\tattribute === 'srcset' ||\n\t\t\t(attribute === 'href' && element.nodeName === 'LINK')\n\t\t) {\n\t\t\tif (!skip_warning) {\n\t\t\t\tcheck_src_in_dev_hydration(element, attribute, value ?? '');\n\t\t\t}\n\n\t\t\t// If we reset these attributes, they would result in another network request, which we want to avoid.\n\t\t\t// We assume they are the same between client and server as checking if they are equal is expensive\n\t\t\t// (we can't just compare the strings as they can be different between client and server but result in the\n\t\t\t// same url, so we would need to create hidden anchor elements to compare them)\n\t\t\treturn;\n\t\t}\n\t}\n\n\tif (attributes[attribute] === (attributes[attribute] = value)) return;\n\n\tif (attribute === 'loading') {\n\t\t// @ts-expect-error\n\t\telement[LOADING_ATTR_SYMBOL] = value;\n\t}\n\n\tif (value == null) {\n\t\telement.removeAttribute(attribute);\n\t} else if (typeof value !== 'string' && get_setters(element).includes(attribute)) {\n\t\t// @ts-ignore\n\t\telement[attribute] = value;\n\t} else {\n\t\telement.setAttribute(attribute, value);\n\t}\n}\n\n/**\n * @param {Element} dom\n * @param {string} attribute\n * @param {string} value\n */\nexport function set_xlink_attribute(dom, attribute, value) {\n\tdom.setAttributeNS('http://www.w3.org/1999/xlink', attribute, value);\n}\n\n/**\n * @param {HTMLElement} node\n * @param {string} prop\n * @param {any} value\n */\nexport function set_custom_element_data(node, prop, value) {\n\t// We need to ensure that setting custom element props, which can\n\t// invoke lifecycle methods on other custom elements, does not also\n\t// associate those lifecycle methods with the current active reaction\n\t// or effect\n\tvar previous_reaction = active_reaction;\n\tvar previous_effect = active_effect;\n\n\t// If we're hydrating but the custom element is from Svelte, and it already scaffolded,\n\t// then it might run block logic in hydration mode, which we have to prevent.\n\tlet was_hydrating = hydrating;\n\tif (hydrating) {\n\t\tset_hydrating(false);\n\t}\n\n\tset_active_reaction(null);\n\tset_active_effect(null);\n\n\ttry {\n\t\tif (\n\t\t\t// `style` should use `set_attribute` rather than the setter\n\t\t\tprop !== 'style' &&\n\t\t\t// Don't compute setters for custom elements while they aren't registered yet,\n\t\t\t// because during their upgrade/instantiation they might add more setters.\n\t\t\t// Instead, fall back to a simple \"an object, then set as property\" heuristic.\n\t\t\t(setters_cache.has(node.nodeName) ||\n\t\t\t// customElements may not be available in browser extension contexts\n\t\t\t!customElements ||\n\t\t\tcustomElements.get(node.tagName.toLowerCase())\n\t\t\t\t? get_setters(node).includes(prop)\n\t\t\t\t: value && typeof value === 'object')\n\t\t) {\n\t\t\t// @ts-expect-error\n\t\t\tnode[prop] = value;\n\t\t} else {\n\t\t\t// We did getters etc checks already, stringify before passing to set_attribute\n\t\t\t// to ensure it doesn't invoke the same logic again, and potentially populating\n\t\t\t// the setters cache too early.\n\t\t\tset_attribute(node, prop, value == null ? value : String(value));\n\t\t}\n\t} finally {\n\t\tset_active_reaction(previous_reaction);\n\t\tset_active_effect(previous_effect);\n\t\tif (was_hydrating) {\n\t\t\tset_hydrating(true);\n\t\t}\n\t}\n}\n\n/**\n * Spreads attributes onto a DOM element, taking into account the currently set attributes\n * @param {Element & ElementCSSInlineStyle} element\n * @param {Record<string | symbol, any> | undefined} prev\n * @param {Record<string | symbol, any>} next New attributes - this function mutates this object\n * @param {string} [css_hash]\n * @param {boolean} [skip_warning]\n * @returns {Record<string, any>}\n */\nexport function set_attributes(element, prev, next, css_hash, skip_warning = false) {\n\tvar attributes = get_attributes(element);\n\n\tvar is_custom_element = attributes[IS_CUSTOM_ELEMENT];\n\tvar preserve_attribute_case = !attributes[IS_HTML];\n\n\t// If we're hydrating but the custom element is from Svelte, and it already scaffolded,\n\t// then it might run block logic in hydration mode, which we have to prevent.\n\tlet is_hydrating_custom_element = hydrating && is_custom_element;\n\tif (is_hydrating_custom_element) {\n\t\tset_hydrating(false);\n\t}\n\n\tvar current = prev || {};\n\tvar is_option_element = element.tagName === 'OPTION';\n\n\tfor (var key in prev) {\n\t\tif (!(key in next)) {\n\t\t\tnext[key] = null;\n\t\t}\n\t}\n\n\tif (next.class) {\n\t\tnext.class = clsx(next.class);\n\t} else if (css_hash || next[CLASS]) {\n\t\tnext.class = null; /* force call to set_class() */\n\t}\n\n\tif (next[STYLE]) {\n\t\tnext.style ??= null; /* force call to set_style() */\n\t}\n\n\tvar setters = get_setters(element);\n\n\t// since key is captured we use const\n\tfor (const key in next) {\n\t\t// let instead of var because referenced in a closure\n\t\tlet value = next[key];\n\n\t\t// Up here because we want to do this for the initial value, too, even if it's undefined,\n\t\t// and this wouldn't be reached in case of undefined because of the equality check below\n\t\tif (is_option_element && key === 'value' && value == null) {\n\t\t\t// The <option> element is a special case because removing the value attribute means\n\t\t\t// the value is set to the text content of the option element, and setting the value\n\t\t\t// to null or undefined means the value is set to the string \"null\" or \"undefined\".\n\t\t\t// To align with how we handle this case in non-spread-scenarios, this logic is needed.\n\t\t\t// There's a super-edge-case bug here that is left in in favor of smaller code size:\n\t\t\t// Because of the \"set missing props to null\" logic above, we can't differentiate\n\t\t\t// between a missing value and an explicitly set value of null or undefined. That means\n\t\t\t// that once set, the value attribute of an <option> element can't be removed. This is\n\t\t\t// a very rare edge case, and removing the attribute altogether isn't possible either\n\t\t\t// for the <option value={undefined}> case, so we're not losing any functionality here.\n\t\t\t// @ts-ignore\n\t\t\telement.value = element.__value = '';\n\t\t\tcurrent[key] = value;\n\t\t\tcontinue;\n\t\t}\n\n\t\tif (key === 'class') {\n\t\t\tvar is_html = element.namespaceURI === 'http://www.w3.org/1999/xhtml';\n\t\t\tset_class(element, is_html, value, css_hash, prev?.[CLASS], next[CLASS]);\n\t\t\tcurrent[key] = value;\n\t\t\tcurrent[CLASS] = next[CLASS];\n\t\t\tcontinue;\n\t\t}\n\n\t\tif (key === 'style') {\n\t\t\tset_style(element, value, prev?.[STYLE], next[STYLE]);\n\t\t\tcurrent[key] = value;\n\t\t\tcurrent[STYLE] = next[STYLE];\n\t\t\tcontinue;\n\t\t}\n\n\t\tvar prev_value = current[key];\n\t\tif (value === prev_value) continue;\n\n\t\tcurrent[key] = value;\n\n\t\tvar prefix = key[0] + key[1]; // this is faster than key.slice(0, 2)\n\t\tif (prefix === '$$') continue;\n\n\t\tif (prefix === 'on') {\n\t\t\t/** @type {{ capture?: true }} */\n\t\t\tconst opts = {};\n\t\t\tconst event_handle_key = '$$' + key;\n\t\t\tlet event_name = key.slice(2);\n\t\t\tvar delegated = is_delegated(event_name);\n\n\t\t\tif (is_capture_event(event_name)) {\n\t\t\t\tevent_name = event_name.slice(0, -7);\n\t\t\t\topts.capture = true;\n\t\t\t}\n\n\t\t\tif (!delegated && prev_value) {\n\t\t\t\t// Listening to same event but different handler -> our handle function below takes care of this\n\t\t\t\t// If we were to remove and add listeners in this case, it could happen that the event is \"swallowed\"\n\t\t\t\t// (the browser seems to not know yet that a new one exists now) and doesn't reach the handler\n\t\t\t\t// https://github.com/sveltejs/svelte/issues/11903\n\t\t\t\tif (value != null) continue;\n\n\t\t\t\telement.removeEventListener(event_name, current[event_handle_key], opts);\n\t\t\t\tcurrent[event_handle_key] = null;\n\t\t\t}\n\n\t\t\tif (value != null) {\n\t\t\t\tif (!delegated) {\n\t\t\t\t\t/**\n\t\t\t\t\t * @this {any}\n\t\t\t\t\t * @param {Event} evt\n\t\t\t\t\t */\n\t\t\t\t\tfunction handle(evt) {\n\t\t\t\t\t\tcurrent[key].call(this, evt);\n\t\t\t\t\t}\n\n\t\t\t\t\tcurrent[event_handle_key] = create_event(event_name, element, handle, opts);\n\t\t\t\t} else {\n\t\t\t\t\t// @ts-ignore\n\t\t\t\t\telement[`__${event_name}`] = value;\n\t\t\t\t\tdelegate([event_name]);\n\t\t\t\t}\n\t\t\t} else if (delegated) {\n\t\t\t\t// @ts-ignore\n\t\t\t\telement[`__${event_name}`] = undefined;\n\t\t\t}\n\t\t} else if (key === 'style') {\n\t\t\t// avoid using the setter\n\t\t\tset_attribute(element, key, value);\n\t\t} else if (key === 'autofocus') {\n\t\t\tautofocus(/** @type {HTMLElement} */ (element), Boolean(value));\n\t\t} else if (!is_custom_element && (key === '__value' || (key === 'value' && value != null))) {\n\t\t\t// @ts-ignore We're not running this for custom elements because __value is actually\n\t\t\t// how Lit stores the current value on the element, and messing with that would break things.\n\t\t\telement.value = element.__value = value;\n\t\t} else if (key === 'selected' && is_option_element) {\n\t\t\tset_selected(/** @type {HTMLOptionElement} */ (element), value);\n\t\t} else {\n\t\t\tvar name = key;\n\t\t\tif (!preserve_attribute_case) {\n\t\t\t\tname = normalize_attribute(name);\n\t\t\t}\n\n\t\t\tvar is_default = name === 'defaultValue' || name === 'defaultChecked';\n\n\t\t\tif (value == null && !is_custom_element && !is_default) {\n\t\t\t\tattributes[key] = null;\n\n\t\t\t\tif (name === 'value' || name === 'checked') {\n\t\t\t\t\t// removing value/checked also removes defaultValue/defaultChecked — preserve\n\t\t\t\t\tlet input = /** @type {HTMLInputElement} */ (element);\n\t\t\t\t\tconst use_default = prev === undefined;\n\t\t\t\t\tif (name === 'value') {\n\t\t\t\t\t\tlet previous = input.defaultValue;\n\t\t\t\t\t\tinput.removeAttribute(name);\n\t\t\t\t\t\tinput.defaultValue = previous;\n\t\t\t\t\t\t// @ts-ignore\n\t\t\t\t\t\tinput.value = input.__value = use_default ? previous : null;\n\t\t\t\t\t} else {\n\t\t\t\t\t\tlet previous = input.defaultChecked;\n\t\t\t\t\t\tinput.removeAttribute(name);\n\t\t\t\t\t\tinput.defaultChecked = previous;\n\t\t\t\t\t\tinput.checked = use_default ? previous : false;\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\telement.removeAttribute(key);\n\t\t\t\t}\n\t\t\t} else if (\n\t\t\t\tis_default ||\n\t\t\t\t(setters.includes(name) && (is_custom_element || typeof value !== 'string'))\n\t\t\t) {\n\t\t\t\t// @ts-ignore\n\t\t\t\telement[name] = value;\n\t\t\t} else if (typeof value !== 'function') {\n\t\t\t\tset_attribute(element, name, value, skip_warning);\n\t\t\t}\n\t\t}\n\t}\n\n\tif (is_hydrating_custom_element) {\n\t\tset_hydrating(true);\n\t}\n\n\treturn current;\n}\n\n/**\n *\n * @param {Element} element\n */\nfunction get_attributes(element) {\n\treturn /** @type {Record<string | symbol, unknown>} **/ (\n\t\t// @ts-expect-error\n\t\telement.__attributes ??= {\n\t\t\t[IS_CUSTOM_ELEMENT]: element.nodeName.includes('-'),\n\t\t\t[IS_HTML]: element.namespaceURI === NAMESPACE_HTML\n\t\t}\n\t);\n}\n\n/** @type {Map<string, string[]>} */\nvar setters_cache = new Map();\n\n/** @param {Element} element */\nfunction get_setters(element) {\n\tvar setters = setters_cache.get(element.nodeName);\n\tif (setters) return setters;\n\tsetters_cache.set(element.nodeName, (setters = []));\n\n\tvar descriptors;\n\tvar proto = element; // In the case of custom elements there might be setters on the instance\n\tvar element_proto = Element.prototype;\n\n\t// Stop at Element, from there on there's only unnecessary setters we're not interested in\n\t// Do not use contructor.name here as that's unreliable in some browser environments\n\twhile (element_proto !== proto) {\n\t\tdescriptors = get_descriptors(proto);\n\n\t\tfor (var key in descriptors) {\n\t\t\tif (descriptors[key].set) {\n\t\t\t\tsetters.push(key);\n\t\t\t}\n\t\t}\n\n\t\tproto = get_prototype_of(proto);\n\t}\n\n\treturn setters;\n}\n\n/**\n * @param {any} element\n * @param {string} attribute\n * @param {string} value\n */\nfunction check_src_in_dev_hydration(element, attribute, value) {\n\tif (!DEV) return;\n\tif (attribute === 'srcset' && srcset_url_equal(element, value)) return;\n\tif (src_url_equal(element.getAttribute(attribute) ?? '', value)) return;\n\n\tw.hydration_attribute_changed(\n\t\tattribute,\n\t\telement.outerHTML.replace(element.innerHTML, element.innerHTML && '...'),\n\t\tString(value)\n\t);\n}\n\n/**\n * @param {string} element_src\n * @param {string} url\n * @returns {boolean}\n */\nfunction src_url_equal(element_src, url) {\n\tif (element_src === url) return true;\n\treturn new URL(element_src, document.baseURI).href === new URL(url, document.baseURI).href;\n}\n\n/** @param {string} srcset */\nfunction split_srcset(srcset) {\n\treturn srcset.split(',').map((src) => src.trim().split(' ').filter(Boolean));\n}\n\n/**\n * @param {HTMLSourceElement | HTMLImageElement} element\n * @param {string} srcset\n * @returns {boolean}\n */\nfunction srcset_url_equal(element, srcset) {\n\tvar element_urls = split_srcset(element.srcset);\n\tvar urls = split_srcset(srcset);\n\n\treturn (\n\t\turls.length === element_urls.length &&\n\t\turls.every(\n\t\t\t([url, width], i) =>\n\t\t\t\twidth === element_urls[i][1] &&\n\t\t\t\t// We need to test both ways because Vite will create an a full URL with\n\t\t\t\t// `new URL(asset, import.meta.url).href` for the client when `base: './'`, and the\n\t\t\t\t// relative URLs inside srcset are not automatically resolved to absolute URLs by\n\t\t\t\t// browsers (in contrast to img.src). This means both SSR and DOM code could\n\t\t\t\t// contain relative or absolute URLs.\n\t\t\t\t(src_url_equal(element_urls[i][0], url) || src_url_equal(url, element_urls[i][0]))\n\t\t)\n\t);\n}\n","import { DEV } from 'esm-env';\nimport { render_effect, teardown } from '../../../reactivity/effects.js';\nimport { listen_to_event_and_reset_event } from './shared.js';\nimport * as e from '../../../errors.js';\nimport { is } from '../../../proxy.js';\nimport { queue_micro_task } from '../../task.js';\nimport { hydrating } from '../../hydration.js';\nimport { untrack } from '../../../runtime.js';\nimport { is_runes } from '../../../context.js';\n\n/**\n * @param {HTMLInputElement} input\n * @param {() => unknown} get\n * @param {(value: unknown) => void} set\n * @returns {void}\n */\nexport function bind_value(input, get, set = get) {\n\tvar runes = is_runes();\n\n\tlisten_to_event_and_reset_event(input, 'input', (is_reset) => {\n\t\tif (DEV && input.type === 'checkbox') {\n\t\t\t// TODO should this happen in prod too?\n\t\t\te.bind_invalid_checkbox_value();\n\t\t}\n\n\t\t/** @type {any} */\n\t\tvar value = is_reset ? input.defaultValue : input.value;\n\t\tvalue = is_numberlike_input(input) ? to_number(value) : value;\n\t\tset(value);\n\n\t\t// In runes mode, respect any validation in accessors (doesn't apply in legacy mode,\n\t\t// because we use mutable state which ensures the render effect always runs)\n\t\tif (runes && value !== (value = get())) {\n\t\t\tvar start = input.selectionStart;\n\t\t\tvar end = input.selectionEnd;\n\n\t\t\t// the value is coerced on assignment\n\t\t\tinput.value = value ?? '';\n\n\t\t\t// Restore selection\n\t\t\tif (end !== null) {\n\t\t\t\tinput.selectionStart = start;\n\t\t\t\tinput.selectionEnd = Math.min(end, input.value.length);\n\t\t\t}\n\t\t}\n\t});\n\n\tif (\n\t\t// If we are hydrating and the value has since changed,\n\t\t// then use the updated value from the input instead.\n\t\t(hydrating && input.defaultValue !== input.value) ||\n\t\t// If defaultValue is set, then value == defaultValue\n\t\t// TODO Svelte 6: remove input.value check and set to empty string?\n\t\t(untrack(get) == null && input.value)\n\t) {\n\t\tset(is_numberlike_input(input) ? to_number(input.value) : input.value);\n\t}\n\n\trender_effect(() => {\n\t\tif (DEV && input.type === 'checkbox') {\n\t\t\t// TODO should this happen in prod too?\n\t\t\te.bind_invalid_checkbox_value();\n\t\t}\n\n\t\tvar value = get();\n\n\t\tif (is_numberlike_input(input) && value === to_number(input.value)) {\n\t\t\t// handles 0 vs 00 case (see https://github.com/sveltejs/svelte/issues/9959)\n\t\t\treturn;\n\t\t}\n\n\t\tif (input.type === 'date' && !value && !input.value) {\n\t\t\t// Handles the case where a temporarily invalid date is set (while typing, for example with a leading 0 for the day)\n\t\t\t// and prevents this state from clearing the other parts of the date input (see https://github.com/sveltejs/svelte/issues/7897)\n\t\t\treturn;\n\t\t}\n\n\t\t// don't set the value of the input if it's the same to allow\n\t\t// minlength to work properly\n\t\tif (value !== input.value) {\n\t\t\t// @ts-expect-error the value is coerced on assignment\n\t\t\tinput.value = value ?? '';\n\t\t}\n\t});\n}\n\n/** @type {Set<HTMLInputElement[]>} */\nconst pending = new Set();\n\n/**\n * @param {HTMLInputElement[]} inputs\n * @param {null | [number]} group_index\n * @param {HTMLInputElement} input\n * @param {() => unknown} get\n * @param {(value: unknown) => void} set\n * @returns {void}\n */\nexport function bind_group(inputs, group_index, input, get, set = get) {\n\tvar is_checkbox = input.getAttribute('type') === 'checkbox';\n\tvar binding_group = inputs;\n\n\t// needs to be let or related code isn't treeshaken out if it's always false\n\tlet hydration_mismatch = false;\n\n\tif (group_index !== null) {\n\t\tfor (var index of group_index) {\n\t\t\t// @ts-expect-error\n\t\t\tbinding_group = binding_group[index] ??= [];\n\t\t}\n\t}\n\n\tbinding_group.push(input);\n\n\tlisten_to_event_and_reset_event(\n\t\tinput,\n\t\t'change',\n\t\t() => {\n\t\t\t// @ts-ignore\n\t\t\tvar value = input.__value;\n\n\t\t\tif (is_checkbox) {\n\t\t\t\tvalue = get_binding_group_value(binding_group, value, input.checked);\n\t\t\t}\n\n\t\t\tset(value);\n\t\t},\n\t\t// TODO better default value handling\n\t\t() => set(is_checkbox ? [] : null)\n\t);\n\n\trender_effect(() => {\n\t\tvar value = get();\n\n\t\t// If we are hydrating and the value has since changed, then use the update value\n\t\t// from the input instead.\n\t\tif (hydrating && input.defaultChecked !== input.checked) {\n\t\t\thydration_mismatch = true;\n\t\t\treturn;\n\t\t}\n\n\t\tif (is_checkbox) {\n\t\t\tvalue = value || [];\n\t\t\t// @ts-ignore\n\t\t\tinput.checked = value.includes(input.__value);\n\t\t} else {\n\t\t\t// @ts-ignore\n\t\t\tinput.checked = is(input.__value, value);\n\t\t}\n\t});\n\n\tteardown(() => {\n\t\tvar index = binding_group.indexOf(input);\n\n\t\tif (index !== -1) {\n\t\t\tbinding_group.splice(index, 1);\n\t\t}\n\t});\n\n\tif (!pending.has(binding_group)) {\n\t\tpending.add(binding_group);\n\n\t\tqueue_micro_task(() => {\n\t\t\t// necessary to maintain binding group order in all insertion scenarios\n\t\t\tbinding_group.sort((a, b) => (a.compareDocumentPosition(b) === 4 ? -1 : 1));\n\t\t\tpending.delete(binding_group);\n\t\t});\n\t}\n\n\tqueue_micro_task(() => {\n\t\tif (hydration_mismatch) {\n\t\t\tvar value;\n\n\t\t\tif (is_checkbox) {\n\t\t\t\tvalue = get_binding_group_value(binding_group, value, input.checked);\n\t\t\t} else {\n\t\t\t\tvar hydration_input = binding_group.find((input) => input.checked);\n\t\t\t\t// @ts-ignore\n\t\t\t\tvalue = hydration_input?.__value;\n\t\t\t}\n\n\t\t\tset(value);\n\t\t}\n\t});\n}\n\n/**\n * @param {HTMLInputElement} input\n * @param {() => unknown} get\n * @param {(value: unknown) => void} set\n * @returns {void}\n */\nexport function bind_checked(input, get, set = get) {\n\tlisten_to_event_and_reset_event(input, 'change', (is_reset) => {\n\t\tvar value = is_reset ? input.defaultChecked : input.checked;\n\t\tset(value);\n\t});\n\n\tif (\n\t\t// If we are hydrating and the value has since changed,\n\t\t// then use the update value from the input instead.\n\t\t(hydrating && input.defaultChecked !== input.checked) ||\n\t\t// If defaultChecked is set, then checked == defaultChecked\n\t\tuntrack(get) == null\n\t) {\n\t\tset(input.checked);\n\t}\n\n\trender_effect(() => {\n\t\tvar value = get();\n\t\tinput.checked = Boolean(value);\n\t});\n}\n\n/**\n * @template V\n * @param {Array<HTMLInputElement>} group\n * @param {V} __value\n * @param {boolean} checked\n * @returns {V[]}\n */\nfunction get_binding_group_value(group, __value, checked) {\n\tvar value = new Set();\n\n\tfor (var i = 0; i < group.length; i += 1) {\n\t\tif (group[i].checked) {\n\t\t\t// @ts-ignore\n\t\t\tvalue.add(group[i].__value);\n\t\t}\n\t}\n\n\tif (!checked) {\n\t\tvalue.delete(__value);\n\t}\n\n\treturn Array.from(value);\n}\n\n/**\n * @param {HTMLInputElement} input\n */\nfunction is_numberlike_input(input) {\n\tvar type = input.type;\n\treturn type === 'number' || type === 'range';\n}\n\n/**\n * @param {string} value\n */\nfunction to_number(value) {\n\treturn value === '' ? null : +value;\n}\n\n/**\n * @param {HTMLInputElement} input\n * @param {() => FileList | null} get\n * @param {(value: FileList | null) => void} set\n */\nexport function bind_files(input, get, set = get) {\n\tlisten_to_event_and_reset_event(input, 'change', () => {\n\t\tset(input.files);\n\t});\n\n\tif (\n\t\t// If we are hydrating and the value has since changed,\n\t\t// then use the updated value from the input instead.\n\t\thydrating &&\n\t\tinput.files\n\t) {\n\t\tset(input.files);\n\t}\n\n\trender_effect(() => {\n\t\tinput.files = get();\n\t});\n}\n","/** @import { ComponentContextLegacy } from '#client' */\nimport { run, run_all } from '../../../shared/utils.js';\nimport { component_context } from '../../context.js';\nimport { derived } from '../../reactivity/deriveds.js';\nimport { user_pre_effect, user_effect } from '../../reactivity/effects.js';\nimport { deep_read_state, get, untrack } from '../../runtime.js';\n\n/**\n * Legacy-mode only: Call `onMount` callbacks and set up `beforeUpdate`/`afterUpdate` effects\n * @param {boolean} [immutable]\n */\nexport function init(immutable = false) {\n\tconst context = /** @type {ComponentContextLegacy} */ (component_context);\n\n\tconst callbacks = context.l.u;\n\tif (!callbacks) return;\n\n\tlet props = () => deep_read_state(context.s);\n\n\tif (immutable) {\n\t\tlet version = 0;\n\t\tlet prev = /** @type {Record<string, any>} */ ({});\n\n\t\t// In legacy immutable mode, before/afterUpdate only fire if the object identity of a prop changes\n\t\tconst d = derived(() => {\n\t\t\tlet changed = false;\n\t\t\tconst props = context.s;\n\t\t\tfor (const key in props) {\n\t\t\t\tif (props[key] !== prev[key]) {\n\t\t\t\t\tprev[key] = props[key];\n\t\t\t\t\tchanged = true;\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (changed) version++;\n\t\t\treturn version;\n\t\t});\n\n\t\tprops = () => get(d);\n\t}\n\n\t// beforeUpdate\n\tif (callbacks.b.length) {\n\t\tuser_pre_effect(() => {\n\t\t\tobserve_all(context, props);\n\t\t\trun_all(callbacks.b);\n\t\t});\n\t}\n\n\t// onMount (must run before afterUpdate)\n\tuser_effect(() => {\n\t\tconst fns = untrack(() => callbacks.m.map(run));\n\t\treturn () => {\n\t\t\tfor (const fn of fns) {\n\t\t\t\tif (typeof fn === 'function') {\n\t\t\t\t\tfn();\n\t\t\t\t}\n\t\t\t}\n\t\t};\n\t});\n\n\t// afterUpdate\n\tif (callbacks.a.length) {\n\t\tuser_effect(() => {\n\t\t\tobserve_all(context, props);\n\t\t\trun_all(callbacks.a);\n\t\t});\n\t}\n}\n\n/**\n * Invoke the getter of all signals associated with a component\n * so they can be registered to the effect this function is called in.\n * @param {ComponentContextLegacy} context\n * @param {(() => void)} props\n */\nfunction observe_all(context, props) {\n\tif (context.l.s) {\n\t\tfor (const signal of context.l.s) get(signal);\n\t}\n\n\tprops();\n}\n","/** @import { ComponentContext, ComponentContextLegacy } from '#client' */\n/** @import { EventDispatcher } from './index.js' */\n/** @import { NotFunction } from './internal/types.js' */\nimport { untrack } from './internal/client/runtime.js';\nimport { is_array } from './internal/shared/utils.js';\nimport { user_effect } from './internal/client/index.js';\nimport * as e from './internal/client/errors.js';\nimport { lifecycle_outside_component } from './internal/shared/errors.js';\nimport { legacy_mode_flag } from './internal/flags/index.js';\nimport { component_context } from './internal/client/context.js';\nimport { DEV } from 'esm-env';\n\nif (DEV) {\n\t/**\n\t * @param {string} rune\n\t */\n\tfunction throw_rune_error(rune) {\n\t\tif (!(rune in globalThis)) {\n\t\t\t// TODO if people start adjusting the \"this can contain runes\" config through v-p-s more, adjust this message\n\t\t\t/** @type {any} */\n\t\t\tlet value; // let's hope noone modifies this global, but belts and braces\n\t\t\tObject.defineProperty(globalThis, rune, {\n\t\t\t\tconfigurable: true,\n\t\t\t\t// eslint-disable-next-line getter-return\n\t\t\t\tget: () => {\n\t\t\t\t\tif (value !== undefined) {\n\t\t\t\t\t\treturn value;\n\t\t\t\t\t}\n\n\t\t\t\t\te.rune_outside_svelte(rune);\n\t\t\t\t},\n\t\t\t\tset: (v) => {\n\t\t\t\t\tvalue = v;\n\t\t\t\t}\n\t\t\t});\n\t\t}\n\t}\n\n\tthrow_rune_error('$state');\n\tthrow_rune_error('$effect');\n\tthrow_rune_error('$derived');\n\tthrow_rune_error('$inspect');\n\tthrow_rune_error('$props');\n\tthrow_rune_error('$bindable');\n}\n\n/**\n * `onMount`, like [`$effect`](https://svelte.dev/docs/svelte/$effect), schedules a function to run as soon as the component has been mounted to the DOM.\n * Unlike `$effect`, the provided function only runs once.\n *\n * It must be called during the component's initialisation (but doesn't need to live _inside_ the component;\n * it can be called from an external module). If a function is returned _synchronously_ from `onMount`,\n * it will be called when the component is unmounted.\n *\n * `onMount` functions do not run during [server-side rendering](https://svelte.dev/docs/svelte/svelte-server#render).\n *\n * @template T\n * @param {() => NotFunction<T> | Promise<NotFunction<T>> | (() => any)} fn\n * @returns {void}\n */\nexport function onMount(fn) {\n\tif (component_context === null) {\n\t\tlifecycle_outside_component('onMount');\n\t}\n\n\tif (legacy_mode_flag && component_context.l !== null) {\n\t\tinit_update_callbacks(component_context).m.push(fn);\n\t} else {\n\t\tuser_effect(() => {\n\t\t\tconst cleanup = untrack(fn);\n\t\t\tif (typeof cleanup === 'function') return /** @type {() => void} */ (cleanup);\n\t\t});\n\t}\n}\n\n/**\n * Schedules a callback to run immediately before the component is unmounted.\n *\n * Out of `onMount`, `beforeUpdate`, `afterUpdate` and `onDestroy`, this is the\n * only one that runs inside a server-side component.\n *\n * @param {() => any} fn\n * @returns {void}\n */\nexport function onDestroy(fn) {\n\tif (component_context === null) {\n\t\tlifecycle_outside_component('onDestroy');\n\t}\n\n\tonMount(() => () => untrack(fn));\n}\n\n/**\n * @template [T=any]\n * @param {string} type\n * @param {T} [detail]\n * @param {any}params_0\n * @returns {CustomEvent<T>}\n */\nfunction create_custom_event(type, detail, { bubbles = false, cancelable = false } = {}) {\n\treturn new CustomEvent(type, { detail, bubbles, cancelable });\n}\n\n/**\n * Creates an event dispatcher that can be used to dispatch [component events](https://svelte.dev/docs/svelte/legacy-on#Component-events).\n * Event dispatchers are functions that can take two arguments: `name` and `detail`.\n *\n * Component events created with `createEventDispatcher` create a\n * [CustomEvent](https://developer.mozilla.org/en-US/docs/Web/API/CustomEvent).\n * These events do not [bubble](https://developer.mozilla.org/en-US/docs/Learn/JavaScript/Building_blocks/Events#Event_bubbling_and_capture).\n * The `detail` argument corresponds to the [CustomEvent.detail](https://developer.mozilla.org/en-US/docs/Web/API/CustomEvent/detail)\n * property and can contain any type of data.\n *\n * The event dispatcher can be typed to narrow the allowed event names and the type of the `detail` argument:\n * ```ts\n * const dispatch = createEventDispatcher<{\n *  loaded: null; // does not take a detail argument\n *  change: string; // takes a detail argument of type string, which is required\n *  optional: number | null; // takes an optional detail argument of type number\n * }>();\n * ```\n *\n * @deprecated Use callback props and/or the `$host()` rune instead — see [migration guide](https://svelte.dev/docs/svelte/v5-migration-guide#Event-changes-Component-events)\n * @template {Record<string, any>} [EventMap = any]\n * @returns {EventDispatcher<EventMap>}\n */\nexport function createEventDispatcher() {\n\tconst active_component_context = component_context;\n\tif (active_component_context === null) {\n\t\tlifecycle_outside_component('createEventDispatcher');\n\t}\n\n\treturn (type, detail, options) => {\n\t\tconst events = /** @type {Record<string, Function | Function[]>} */ (\n\t\t\tactive_component_context.s.$$events\n\t\t)?.[/** @type {any} */ (type)];\n\n\t\tif (events) {\n\t\t\tconst callbacks = is_array(events) ? events.slice() : [events];\n\t\t\t// TODO are there situations where events could be dispatched\n\t\t\t// in a server (non-DOM) environment?\n\t\t\tconst event = create_custom_event(/** @type {string} */ (type), detail, options);\n\t\t\tfor (const fn of callbacks) {\n\t\t\t\tfn.call(active_component_context.x, event);\n\t\t\t}\n\t\t\treturn !event.defaultPrevented;\n\t\t}\n\n\t\treturn true;\n\t};\n}\n\n// TODO mark beforeUpdate and afterUpdate as deprecated in Svelte 6\n\n/**\n * Schedules a callback to run immediately before the component is updated after any state change.\n *\n * The first time the callback runs will be before the initial `onMount`.\n *\n * In runes mode use `$effect.pre` instead.\n *\n * @deprecated Use [`$effect.pre`](https://svelte.dev/docs/svelte/$effect#$effect.pre) instead\n * @param {() => void} fn\n * @returns {void}\n */\nexport function beforeUpdate(fn) {\n\tif (component_context === null) {\n\t\tlifecycle_outside_component('beforeUpdate');\n\t}\n\n\tif (component_context.l === null) {\n\t\te.lifecycle_legacy_only('beforeUpdate');\n\t}\n\n\tinit_update_callbacks(component_context).b.push(fn);\n}\n\n/**\n * Schedules a callback to run immediately after the component has been updated.\n *\n * The first time the callback runs will be after the initial `onMount`.\n *\n * In runes mode use `$effect` instead.\n *\n * @deprecated Use [`$effect`](https://svelte.dev/docs/svelte/$effect) instead\n * @param {() => void} fn\n * @returns {void}\n */\nexport function afterUpdate(fn) {\n\tif (component_context === null) {\n\t\tlifecycle_outside_component('afterUpdate');\n\t}\n\n\tif (component_context.l === null) {\n\t\te.lifecycle_legacy_only('afterUpdate');\n\t}\n\n\tinit_update_callbacks(component_context).a.push(fn);\n}\n\n/**\n * Legacy-mode: Init callbacks object for onMount/beforeUpdate/afterUpdate\n * @param {ComponentContext} context\n */\nfunction init_update_callbacks(context) {\n\tvar l = /** @type {ComponentContextLegacy} */ (context).l;\n\treturn (l.u ??= { a: [], b: [], m: [] });\n}\n\nexport { flushSync } from './internal/client/runtime.js';\nexport { getContext, getAllContexts, hasContext, setContext } from './internal/client/context.js';\nexport { hydrate, mount, unmount } from './internal/client/render.js';\nexport { tick, untrack } from './internal/client/runtime.js';\nexport { createRawSnippet } from './internal/client/dom/blocks/snippet.js';\n","/** @import { StoreReferencesContainer } from '#client' */\n/** @import { Store } from '#shared' */\nimport { subscribe_to_store } from '../../../store/utils.js';\nimport { get as get_store } from '../../../store/shared/index.js';\nimport { define_property, noop } from '../../shared/utils.js';\nimport { get } from '../runtime.js';\nimport { teardown } from './effects.js';\nimport { mutable_source, set } from './sources.js';\n\n/**\n * Whether or not the prop currently being read is a store binding, as in\n * `<Child bind:x={$y} />`. If it is, we treat the prop as mutable even in\n * runes mode, and skip `binding_property_non_reactive` validation\n */\nlet is_store_binding = false;\n\nlet IS_UNMOUNTED = Symbol();\n\n/**\n * Gets the current value of a store. If the store isn't subscribed to yet, it will create a proxy\n * signal that will be updated when the store is. The store references container is needed to\n * track reassignments to stores and to track the correct component context.\n * @template V\n * @param {Store<V> | null | undefined} store\n * @param {string} store_name\n * @param {StoreReferencesContainer} stores\n * @returns {V}\n */\nexport function store_get(store, store_name, stores) {\n\tconst entry = (stores[store_name] ??= {\n\t\tstore: null,\n\t\tsource: mutable_source(undefined),\n\t\tunsubscribe: noop\n\t});\n\n\t// if the component that setup this is already unmounted we don't want to register a subscription\n\tif (entry.store !== store && !(IS_UNMOUNTED in stores)) {\n\t\tentry.unsubscribe();\n\t\tentry.store = store ?? null;\n\n\t\tif (store == null) {\n\t\t\tentry.source.v = undefined; // see synchronous callback comment below\n\t\t\tentry.unsubscribe = noop;\n\t\t} else {\n\t\t\tvar is_synchronous_callback = true;\n\n\t\t\tentry.unsubscribe = subscribe_to_store(store, (v) => {\n\t\t\t\tif (is_synchronous_callback) {\n\t\t\t\t\t// If the first updates to the store value (possibly multiple of them) are synchronously\n\t\t\t\t\t// inside a derived, we will hit the `state_unsafe_mutation` error if we `set` the value\n\t\t\t\t\tentry.source.v = v;\n\t\t\t\t} else {\n\t\t\t\t\tset(entry.source, v);\n\t\t\t\t}\n\t\t\t});\n\n\t\t\tis_synchronous_callback = false;\n\t\t}\n\t}\n\n\t// if the component that setup this stores is already unmounted the source will be out of sync\n\t// so we just use the `get` for the stores, less performant but it avoids to create a memory leak\n\t// and it will keep the value consistent\n\tif (store && IS_UNMOUNTED in stores) {\n\t\treturn get_store(store);\n\t}\n\n\treturn get(entry.source);\n}\n\n/**\n * Unsubscribe from a store if it's not the same as the one in the store references container.\n * We need this in addition to `store_get` because someone could unsubscribe from a store but\n * then never subscribe to the new one (if any), causing the subscription to stay open wrongfully.\n * @param {Store<any> | null | undefined} store\n * @param {string} store_name\n * @param {StoreReferencesContainer} stores\n */\nexport function store_unsub(store, store_name, stores) {\n\t/** @type {StoreReferencesContainer[''] | undefined} */\n\tlet entry = stores[store_name];\n\n\tif (entry && entry.store !== store) {\n\t\t// Don't reset store yet, so that store_get above can resubscribe to new store if necessary\n\t\tentry.unsubscribe();\n\t\tentry.unsubscribe = noop;\n\t}\n\n\treturn store;\n}\n\n/**\n * Sets the new value of a store and returns that value.\n * @template V\n * @param {Store<V>} store\n * @param {V} value\n * @returns {V}\n */\nexport function store_set(store, value) {\n\tstore.set(value);\n\treturn value;\n}\n\n/**\n * @param {StoreReferencesContainer} stores\n * @param {string} store_name\n */\nexport function invalidate_store(stores, store_name) {\n\tvar entry = stores[store_name];\n\tif (entry.store !== null) {\n\t\tstore_set(entry.store, entry.source.v);\n\t}\n}\n\n/**\n * Unsubscribes from all auto-subscribed stores on destroy\n * @returns {[StoreReferencesContainer, ()=>void]}\n */\nexport function setup_stores() {\n\t/** @type {StoreReferencesContainer} */\n\tconst stores = {};\n\n\tfunction cleanup() {\n\t\tteardown(() => {\n\t\t\tfor (var store_name in stores) {\n\t\t\t\tconst ref = stores[store_name];\n\t\t\t\tref.unsubscribe();\n\t\t\t}\n\t\t\tdefine_property(stores, IS_UNMOUNTED, {\n\t\t\t\tenumerable: false,\n\t\t\t\tvalue: true\n\t\t\t});\n\t\t});\n\t}\n\n\treturn [stores, cleanup];\n}\n\n/**\n * Updates a store with a new value.\n * @param {Store<V>} store  the store to update\n * @param {any} expression  the expression that mutates the store\n * @param {V} new_value  the new store value\n * @template V\n */\nexport function store_mutate(store, expression, new_value) {\n\tstore.set(new_value);\n\treturn expression;\n}\n\n/**\n * @param {Store<number>} store\n * @param {number} store_value\n * @param {1 | -1} [d]\n * @returns {number}\n */\nexport function update_store(store, store_value, d = 1) {\n\tstore.set(store_value + d);\n\treturn store_value;\n}\n\n/**\n * @param {Store<number>} store\n * @param {number} store_value\n * @param {1 | -1} [d]\n * @returns {number}\n */\nexport function update_pre_store(store, store_value, d = 1) {\n\tconst value = store_value + d;\n\tstore.set(value);\n\treturn value;\n}\n\n/**\n * Called inside prop getters to communicate that the prop is a store binding\n */\nexport function mark_store_binding() {\n\tis_store_binding = true;\n}\n\n/**\n * Returns a tuple that indicates whether `fn()` reads a prop that is a store binding.\n * Used to prevent `binding_property_non_reactive` validation false positives and\n * ensure that these props are treated as mutable even in runes mode\n * @template T\n * @param {() => T} fn\n * @returns {[T, boolean]}\n */\nexport function capture_store_binding(fn) {\n\tvar previous_is_store_binding = is_store_binding;\n\n\ttry {\n\t\tis_store_binding = false;\n\t\treturn [fn(), is_store_binding];\n\t} finally {\n\t\tis_store_binding = previous_is_store_binding;\n\t}\n}\n","/** @import { Derived, Source } from './types.js' */\nimport { DEV } from 'esm-env';\nimport {\n\tPROPS_IS_BINDABLE,\n\tPROPS_IS_IMMUTABLE,\n\tPROPS_IS_LAZY_INITIAL,\n\tPROPS_IS_RUNES,\n\tPROPS_IS_UPDATED\n} from '../../../constants.js';\nimport { get_descriptor, is_function } from '../../shared/utils.js';\nimport { mutable_source, set, source, update } from './sources.js';\nimport { derived, derived_safe_equal } from './deriveds.js';\nimport { get, captured_signals, untrack } from '../runtime.js';\nimport { safe_equals } from './equality.js';\nimport * as e from '../errors.js';\nimport { LEGACY_DERIVED_PROP, LEGACY_PROPS, STATE_SYMBOL } from '#client/constants';\nimport { proxy } from '../proxy.js';\nimport { capture_store_binding } from './store.js';\nimport { legacy_mode_flag } from '../../flags/index.js';\n\n/**\n * @param {((value?: number) => number)} fn\n * @param {1 | -1} [d]\n * @returns {number}\n */\nexport function update_prop(fn, d = 1) {\n\tconst value = fn();\n\tfn(value + d);\n\treturn value;\n}\n\n/**\n * @param {((value?: number) => number)} fn\n * @param {1 | -1} [d]\n * @returns {number}\n */\nexport function update_pre_prop(fn, d = 1) {\n\tconst value = fn() + d;\n\tfn(value);\n\treturn value;\n}\n\n/**\n * The proxy handler for rest props (i.e. `const { x, ...rest } = $props()`).\n * Is passed the full `$$props` object and excludes the named props.\n * @type {ProxyHandler<{ props: Record<string | symbol, unknown>, exclude: Array<string | symbol>, name?: string }>}}\n */\nconst rest_props_handler = {\n\tget(target, key) {\n\t\tif (target.exclude.includes(key)) return;\n\t\treturn target.props[key];\n\t},\n\tset(target, key) {\n\t\tif (DEV) {\n\t\t\t// TODO should this happen in prod too?\n\t\t\te.props_rest_readonly(`${target.name}.${String(key)}`);\n\t\t}\n\n\t\treturn false;\n\t},\n\tgetOwnPropertyDescriptor(target, key) {\n\t\tif (target.exclude.includes(key)) return;\n\t\tif (key in target.props) {\n\t\t\treturn {\n\t\t\t\tenumerable: true,\n\t\t\t\tconfigurable: true,\n\t\t\t\tvalue: target.props[key]\n\t\t\t};\n\t\t}\n\t},\n\thas(target, key) {\n\t\tif (target.exclude.includes(key)) return false;\n\t\treturn key in target.props;\n\t},\n\townKeys(target) {\n\t\treturn Reflect.ownKeys(target.props).filter((key) => !target.exclude.includes(key));\n\t}\n};\n\n/**\n * @param {Record<string, unknown>} props\n * @param {string[]} exclude\n * @param {string} [name]\n * @returns {Record<string, unknown>}\n */\n/*#__NO_SIDE_EFFECTS__*/\nexport function rest_props(props, exclude, name) {\n\treturn new Proxy(\n\t\tDEV ? { props, exclude, name, other: {}, to_proxy: [] } : { props, exclude },\n\t\trest_props_handler\n\t);\n}\n\n/**\n * The proxy handler for legacy $$restProps and $$props\n * @type {ProxyHandler<{ props: Record<string | symbol, unknown>, exclude: Array<string | symbol>, special: Record<string | symbol, (v?: unknown) => unknown>, version: Source<number> }>}}\n */\nconst legacy_rest_props_handler = {\n\tget(target, key) {\n\t\tif (target.exclude.includes(key)) return;\n\t\tget(target.version);\n\t\treturn key in target.special ? target.special[key]() : target.props[key];\n\t},\n\tset(target, key, value) {\n\t\tif (!(key in target.special)) {\n\t\t\t// Handle props that can temporarily get out of sync with the parent\n\t\t\t/** @type {Record<string, (v?: unknown) => unknown>} */\n\t\t\ttarget.special[key] = prop(\n\t\t\t\t{\n\t\t\t\t\tget [key]() {\n\t\t\t\t\t\treturn target.props[key];\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t\t/** @type {string} */ (key),\n\t\t\t\tPROPS_IS_UPDATED\n\t\t\t);\n\t\t}\n\n\t\ttarget.special[key](value);\n\t\tupdate(target.version); // $$props is coarse-grained: when $$props.x is updated, usages of $$props.y etc are also rerun\n\t\treturn true;\n\t},\n\tgetOwnPropertyDescriptor(target, key) {\n\t\tif (target.exclude.includes(key)) return;\n\t\tif (key in target.props) {\n\t\t\treturn {\n\t\t\t\tenumerable: true,\n\t\t\t\tconfigurable: true,\n\t\t\t\tvalue: target.props[key]\n\t\t\t};\n\t\t}\n\t},\n\tdeleteProperty(target, key) {\n\t\t// Svelte 4 allowed for deletions on $$restProps\n\t\tif (target.exclude.includes(key)) return true;\n\t\ttarget.exclude.push(key);\n\t\tupdate(target.version);\n\t\treturn true;\n\t},\n\thas(target, key) {\n\t\tif (target.exclude.includes(key)) return false;\n\t\treturn key in target.props;\n\t},\n\townKeys(target) {\n\t\treturn Reflect.ownKeys(target.props).filter((key) => !target.exclude.includes(key));\n\t}\n};\n\n/**\n * @param {Record<string, unknown>} props\n * @param {string[]} exclude\n * @returns {Record<string, unknown>}\n */\nexport function legacy_rest_props(props, exclude) {\n\treturn new Proxy({ props, exclude, special: {}, version: source(0) }, legacy_rest_props_handler);\n}\n\n/**\n * The proxy handler for spread props. Handles the incoming array of props\n * that looks like `() => { dynamic: props }, { static: prop }, ..` and wraps\n * them so that the whole thing is passed to the component as the `$$props` argument.\n * @template {Record<string | symbol, unknown>} T\n * @type {ProxyHandler<{ props: Array<T | (() => T)> }>}}\n */\nconst spread_props_handler = {\n\tget(target, key) {\n\t\tlet i = target.props.length;\n\t\twhile (i--) {\n\t\t\tlet p = target.props[i];\n\t\t\tif (is_function(p)) p = p();\n\t\t\tif (typeof p === 'object' && p !== null && key in p) return p[key];\n\t\t}\n\t},\n\tset(target, key, value) {\n\t\tlet i = target.props.length;\n\t\twhile (i--) {\n\t\t\tlet p = target.props[i];\n\t\t\tif (is_function(p)) p = p();\n\t\t\tconst desc = get_descriptor(p, key);\n\t\t\tif (desc && desc.set) {\n\t\t\t\tdesc.set(value);\n\t\t\t\treturn true;\n\t\t\t}\n\t\t}\n\t\treturn false;\n\t},\n\tgetOwnPropertyDescriptor(target, key) {\n\t\tlet i = target.props.length;\n\t\twhile (i--) {\n\t\t\tlet p = target.props[i];\n\t\t\tif (is_function(p)) p = p();\n\t\t\tif (typeof p === 'object' && p !== null && key in p) {\n\t\t\t\tconst descriptor = get_descriptor(p, key);\n\t\t\t\tif (descriptor && !descriptor.configurable) {\n\t\t\t\t\t// Prevent a \"Non-configurability Report Error\": The target is an array, it does\n\t\t\t\t\t// not actually contain this property. If it is now described as non-configurable,\n\t\t\t\t\t// the proxy throws a validation error. Setting it to true avoids that.\n\t\t\t\t\tdescriptor.configurable = true;\n\t\t\t\t}\n\t\t\t\treturn descriptor;\n\t\t\t}\n\t\t}\n\t},\n\thas(target, key) {\n\t\t// To prevent a false positive `is_entry_props` in the `prop` function\n\t\tif (key === STATE_SYMBOL || key === LEGACY_PROPS) return false;\n\n\t\tfor (let p of target.props) {\n\t\t\tif (is_function(p)) p = p();\n\t\t\tif (p != null && key in p) return true;\n\t\t}\n\n\t\treturn false;\n\t},\n\townKeys(target) {\n\t\t/** @type {Array<string | symbol>} */\n\t\tconst keys = [];\n\n\t\tfor (let p of target.props) {\n\t\t\tif (is_function(p)) p = p();\n\t\t\tfor (const key in p) {\n\t\t\t\tif (!keys.includes(key)) keys.push(key);\n\t\t\t}\n\t\t}\n\n\t\treturn keys;\n\t}\n};\n\n/**\n * @param {Array<Record<string, unknown> | (() => Record<string, unknown>)>} props\n * @returns {any}\n */\nexport function spread_props(...props) {\n\treturn new Proxy({ props }, spread_props_handler);\n}\n\n/**\n * @param {Derived} current_value\n * @returns {boolean}\n */\nfunction has_destroyed_component_ctx(current_value) {\n\treturn current_value.ctx?.d ?? false;\n}\n\n/**\n * This function is responsible for synchronizing a possibly bound prop with the inner component state.\n * It is used whenever the compiler sees that the component writes to the prop, or when it has a default prop_value.\n * @template V\n * @param {Record<string, unknown>} props\n * @param {string} key\n * @param {number} flags\n * @param {V | (() => V)} [fallback]\n * @returns {(() => V | ((arg: V) => V) | ((arg: V, mutation: boolean) => V))}\n */\nexport function prop(props, key, flags, fallback) {\n\tvar immutable = (flags & PROPS_IS_IMMUTABLE) !== 0;\n\tvar runes = !legacy_mode_flag || (flags & PROPS_IS_RUNES) !== 0;\n\tvar bindable = (flags & PROPS_IS_BINDABLE) !== 0;\n\tvar lazy = (flags & PROPS_IS_LAZY_INITIAL) !== 0;\n\tvar is_store_sub = false;\n\tvar prop_value;\n\n\tif (bindable) {\n\t\t[prop_value, is_store_sub] = capture_store_binding(() => /** @type {V} */ (props[key]));\n\t} else {\n\t\tprop_value = /** @type {V} */ (props[key]);\n\t}\n\n\t// Can be the case when someone does `mount(Component, props)` with `let props = $state({...})`\n\t// or `createClassComponent(Component, props)`\n\tvar is_entry_props = STATE_SYMBOL in props || LEGACY_PROPS in props;\n\n\tvar setter =\n\t\t(bindable &&\n\t\t\t(get_descriptor(props, key)?.set ??\n\t\t\t\t(is_entry_props && key in props && ((v) => (props[key] = v))))) ||\n\t\tundefined;\n\n\tvar fallback_value = /** @type {V} */ (fallback);\n\tvar fallback_dirty = true;\n\tvar fallback_used = false;\n\n\tvar get_fallback = () => {\n\t\tfallback_used = true;\n\t\tif (fallback_dirty) {\n\t\t\tfallback_dirty = false;\n\t\t\tif (lazy) {\n\t\t\t\tfallback_value = untrack(/** @type {() => V} */ (fallback));\n\t\t\t} else {\n\t\t\t\tfallback_value = /** @type {V} */ (fallback);\n\t\t\t}\n\t\t}\n\n\t\treturn fallback_value;\n\t};\n\n\tif (prop_value === undefined && fallback !== undefined) {\n\t\tif (setter && runes) {\n\t\t\te.props_invalid_value(key);\n\t\t}\n\n\t\tprop_value = get_fallback();\n\t\tif (setter) setter(prop_value);\n\t}\n\n\t/** @type {() => V} */\n\tvar getter;\n\tif (runes) {\n\t\tgetter = () => {\n\t\t\tvar value = /** @type {V} */ (props[key]);\n\t\t\tif (value === undefined) return get_fallback();\n\t\t\tfallback_dirty = true;\n\t\t\tfallback_used = false;\n\t\t\treturn value;\n\t\t};\n\t} else {\n\t\t// Svelte 4 did not trigger updates when a primitive value was updated to the same value.\n\t\t// Replicate that behavior through using a derived\n\t\tvar derived_getter = (immutable ? derived : derived_safe_equal)(\n\t\t\t() => /** @type {V} */ (props[key])\n\t\t);\n\t\tderived_getter.f |= LEGACY_DERIVED_PROP;\n\t\tgetter = () => {\n\t\t\tvar value = get(derived_getter);\n\t\t\tif (value !== undefined) fallback_value = /** @type {V} */ (undefined);\n\t\t\treturn value === undefined ? fallback_value : value;\n\t\t};\n\t}\n\n\t// easy mode — prop is never written to\n\tif ((flags & PROPS_IS_UPDATED) === 0) {\n\t\treturn getter;\n\t}\n\n\t// intermediate mode — prop is written to, but the parent component had\n\t// `bind:foo` which means we can just call `$$props.foo = value` directly\n\tif (setter) {\n\t\tvar legacy_parent = props.$$legacy;\n\t\treturn function (/** @type {any} */ value, /** @type {boolean} */ mutation) {\n\t\t\tif (arguments.length > 0) {\n\t\t\t\t// We don't want to notify if the value was mutated and the parent is in runes mode.\n\t\t\t\t// In that case the state proxy (if it exists) should take care of the notification.\n\t\t\t\t// If the parent is not in runes mode, we need to notify on mutation, too, that the prop\n\t\t\t\t// has changed because the parent will not be able to detect the change otherwise.\n\t\t\t\tif (!runes || !mutation || legacy_parent || is_store_sub) {\n\t\t\t\t\t/** @type {Function} */ (setter)(mutation ? getter() : value);\n\t\t\t\t}\n\t\t\t\treturn value;\n\t\t\t} else {\n\t\t\t\treturn getter();\n\t\t\t}\n\t\t};\n\t}\n\n\t// hard mode. this is where it gets ugly — the value in the child should\n\t// synchronize with the parent, but it should also be possible to temporarily\n\t// set the value to something else locally.\n\tvar from_child = false;\n\tvar was_from_child = false;\n\n\t// The derived returns the current value. The underlying mutable\n\t// source is written to from various places to persist this value.\n\tvar inner_current_value = mutable_source(prop_value);\n\tvar current_value = derived(() => {\n\t\tvar parent_value = getter();\n\t\tvar child_value = get(inner_current_value);\n\n\t\tif (from_child) {\n\t\t\tfrom_child = false;\n\t\t\twas_from_child = true;\n\t\t\treturn child_value;\n\t\t}\n\n\t\twas_from_child = false;\n\t\treturn (inner_current_value.v = parent_value);\n\t});\n\n\t// Ensure we eagerly capture the initial value if it's bindable\n\tif (bindable) {\n\t\tget(current_value);\n\t}\n\n\tif (!immutable) current_value.equals = safe_equals;\n\n\treturn function (/** @type {any} */ value, /** @type {boolean} */ mutation) {\n\t\t// legacy nonsense — need to ensure the source is invalidated when necessary\n\t\t// also needed for when handling inspect logic so we can inspect the correct source signal\n\t\tif (captured_signals !== null) {\n\t\t\t// set this so that we don't reset to the parent value if `d`\n\t\t\t// is invalidated because of `invalidate_inner_signals` (rather\n\t\t\t// than because the parent or child value changed)\n\t\t\tfrom_child = was_from_child;\n\t\t\t// invoke getters so that signals are picked up by `invalidate_inner_signals`\n\t\t\tgetter();\n\t\t\tget(inner_current_value);\n\t\t}\n\n\t\tif (arguments.length > 0) {\n\t\t\tconst new_value = mutation ? get(current_value) : runes && bindable ? proxy(value) : value;\n\n\t\t\tif (!current_value.equals(new_value)) {\n\t\t\t\tfrom_child = true;\n\t\t\t\tset(inner_current_value, new_value);\n\t\t\t\t// To ensure the fallback value is consistent when used with proxies, we\n\t\t\t\t// update the local fallback_value, but only if the fallback is actively used\n\t\t\t\tif (fallback_used && fallback_value !== undefined) {\n\t\t\t\t\tfallback_value = new_value;\n\t\t\t\t}\n\n\t\t\t\tif (has_destroyed_component_ctx(current_value)) {\n\t\t\t\t\treturn value;\n\t\t\t\t}\n\n\t\t\t\tuntrack(() => get(current_value)); // force a synchronisation immediately\n\t\t\t}\n\n\t\t\treturn value;\n\t\t}\n\n\t\tif (has_destroyed_component_ctx(current_value)) {\n\t\t\treturn current_value.v;\n\t\t}\n\n\t\treturn get(current_value);\n\t};\n}\n","<script>\n  import { onMount, onDestroy, createEventDispatcher } from 'svelte';\n\n  export let show = false;\n  export let logo = null;\n\n  const dispatch = createEventDispatcher();\n\n  function close() {\n    dispatch('close');\n  }\n\n  function handleKeydown(event) {\n    if (event.key === 'Escape') {\n      close();\n    }\n  }\n\n  onMount(() => {\n    document.addEventListener('keydown', handleKeydown);\n  });\n\n  onDestroy(() => {\n    document.removeEventListener('keydown', handleKeydown);\n  });\n</script>\n\n{#if show && logo}\n  <div class=\"modal-backdrop\"\n    role=\"dialog\"\n    aria-modal=\"true\"\n  >\n    <div class=\"modal-content\">\n      <div class=\"modal-header\">\n        <h2>{logo.name}</h2>\n        <button class=\"close-btn\" on:click={close} aria-label=\"Close preview\">×</button>\n      </div>\n      <div class=\"modal-body\">\n        <div class=\"preview-container\"\n          role=\"button\"\n          tabindex=\"0\"\n          aria-label=\"Close preview\"\n          on:click={close}\n          on:keydown={(e) => (e.key === 'Enter' || e.key === ' ') && close()}\n          style=\"cursor:pointer;\"\n        >\n          <img src={logo.path} alt={logo.name} />\n        </div>\n        <div class=\"logo-details\">\n          <p><strong>Format:</strong> {logo.format}</p>\n          <p><strong>Path:</strong> {logo.path}</p>\n        </div>\n      </div>\n    </div>\n  </div>\n{/if}\n\n<style>\n  .modal-backdrop {\n    position: fixed;\n    top: 0;\n    left: 0;\n    width: 100%;\n    height: 100%;\n    background-color: rgba(0, 0, 0, 0.7);\n    display: flex;\n    justify-content: center;\n    align-items: center;\n    z-index: 1000;\n    backdrop-filter: blur(3px);\n  }\n\n  .modal-content {\n    background-color: white;\n    border-radius: 8px;\n    width: 90%;\n    max-width: 900px;\n    max-height: 90vh;\n    box-shadow: 0 4px 20px rgba(0, 0, 0, 0.2);\n    overflow: hidden;\n    display: flex;\n    flex-direction: column;\n  }\n\n  .modal-header {\n    display: flex;\n    justify-content: space-between;\n    align-items: center;\n    padding: 1rem;\n    border-bottom: 1px solid #eee;\n  }\n\n  .modal-header h2 {\n    margin: 0;\n    color: var(--secondary-color);\n  }\n\n  .close-btn {\n    background: none;\n    border: none;\n    font-size: 1.5rem;\n    cursor: pointer;\n    color: #666;\n  }\n\n  .close-btn:hover {\n    color: #333;\n  }\n\n  .modal-body {\n    padding: 1rem;\n    overflow-y: auto;\n    display: flex;\n    flex-direction: column;\n    gap: 1rem;\n  }\n\n  .preview-container {\n    display: flex;\n    justify-content: center;\n    align-items: center;\n    background-color: #f5f5f5;\n    border-radius: 4px;\n    padding: 2rem;\n    min-height: 300px;\n  }\n\n  .preview-container img {\n    max-width: 100%;\n    max-height: 60vh;\n    object-fit: contain;\n  }\n\n  .logo-details {\n    padding: 1rem;\n    background-color: #f9f9f9;\n    border-radius: 4px;\n  }\n\n  .logo-details p {\n    margin-bottom: 0.5rem;\n  }\n</style>\n","/** @import { Component } from '#server' */\nimport { current_component } from './internal/server/context.js';\nimport { noop } from './internal/shared/utils.js';\nimport * as e from './internal/server/errors.js';\n\n/** @param {() => void} fn */\nexport function onDestroy(fn) {\n\tvar context = /** @type {Component} */ (current_component);\n\t(context.d ??= []).push(fn);\n}\n\nexport {\n\tnoop as beforeUpdate,\n\tnoop as afterUpdate,\n\tnoop as onMount,\n\tnoop as flushSync,\n\trun as untrack\n} from './internal/shared/utils.js';\n\nexport function createEventDispatcher() {\n\treturn noop;\n}\n\nexport function mount() {\n\te.lifecycle_function_unavailable('mount');\n}\n\nexport function hydrate() {\n\te.lifecycle_function_unavailable('hydrate');\n}\n\nexport function unmount() {\n\te.lifecycle_function_unavailable('unmount');\n}\n\nexport async function tick() {}\n\nexport { getAllContexts, getContext, hasContext, setContext } from './internal/server/context.js';\n\nexport { createRawSnippet } from './internal/server/blocks/snippet.js';\n","/** @import { Component } from '#server' */\nimport { DEV } from 'esm-env';\nimport { on_destroy } from './index.js';\nimport * as e from '../shared/errors.js';\n\n/** @type {Component | null} */\nexport var current_component = null;\n\n/**\n * @template T\n * @param {any} key\n * @returns {T}\n */\nexport function getContext(key) {\n\tconst context_map = get_or_init_context_map('getContext');\n\tconst result = /** @type {T} */ (context_map.get(key));\n\n\treturn result;\n}\n\n/**\n * @template T\n * @param {any} key\n * @param {T} context\n * @returns {T}\n */\nexport function setContext(key, context) {\n\tget_or_init_context_map('setContext').set(key, context);\n\treturn context;\n}\n\n/**\n * @param {any} key\n * @returns {boolean}\n */\nexport function hasContext(key) {\n\treturn get_or_init_context_map('hasContext').has(key);\n}\n\n/** @returns {Map<any, any>} */\nexport function getAllContexts() {\n\treturn get_or_init_context_map('getAllContexts');\n}\n\n/**\n * @param {string} name\n * @returns {Map<unknown, unknown>}\n */\nfunction get_or_init_context_map(name) {\n\tif (current_component === null) {\n\t\te.lifecycle_outside_component(name);\n\t}\n\n\treturn (current_component.c ??= new Map(get_parent_context(current_component) || undefined));\n}\n\n/**\n * @param {Function} [fn]\n */\nexport function push(fn) {\n\tcurrent_component = { p: current_component, c: null, d: null };\n\tif (DEV) {\n\t\t// component function\n\t\tcurrent_component.function = fn;\n\t}\n}\n\nexport function pop() {\n\tvar component = /** @type {Component} */ (current_component);\n\n\tvar ondestroy = component.d;\n\n\tif (ondestroy) {\n\t\ton_destroy.push(...ondestroy);\n\t}\n\n\tcurrent_component = component.p;\n}\n\n/**\n * @param {Component} component_context\n * @returns {Map<unknown, unknown> | null}\n */\nfunction get_parent_context(component_context) {\n\tlet parent = component_context.p;\n\n\twhile (parent !== null) {\n\t\tconst context_map = parent.c;\n\t\tif (context_map !== null) {\n\t\t\treturn context_map;\n\t\t}\n\t\tparent = parent.p;\n\t}\n\n\treturn null;\n}\n","import App from './App.svelte';\n\nconst app = new App({\n  target: document.getElementById('app') || document.body\n});\n\nexport default app;\n","<script>\n  import { onMount } from 'svelte';\n  import LogoGrid from './components/LogoGrid.svelte';\n  import LogoList from './components/LogoList.svelte';\n\n  let viewMode = 'grid'; // 'grid' or 'list'\n  let searchQuery = '';\n  let logos = [];\n  let filteredLogos = [];\n\n  // Load logos from JSON file with cache busting\n  onMount(async () => {\n    try {\n      // Add timestamp as cache-busting query parameter\n      const timestamp = new Date().getTime();\n      const response = await fetch(`data/logos.json?t=${timestamp}`, {\n        // Force reload from server, don't use cache\n        cache: 'no-cache',\n        headers: {\n          'Cache-Control': 'no-cache',\n          'Pragma': 'no-cache'\n        }\n      });\n\n      if (response.ok) {\n        logos = await response.json();\n        filteredLogos = logos;\n        console.log('Loaded logos:', logos.length, 'at', new Date().toLocaleTimeString());\n      } else {\n        console.error('Failed to load logos data', response.status);\n      }\n    } catch (error) {\n      console.error('Error loading logos:', error);\n    }\n  });\n\n  $: {\n    filteredLogos = logos.filter(logo =>\n      logo.name.toLowerCase().includes(searchQuery.toLowerCase())\n    );\n  }\n\n  function setGridView() {\n    console.log('Setting view mode to: grid');\n    viewMode = 'grid';\n  }\n\n  function setListView() {\n    console.log('Setting view mode to: list');\n    viewMode = 'list';\n  }\n\n  function copyUrl(logoPath) {\n    const url = `${window.location.origin}/${logoPath}`;\n    navigator.clipboard.writeText(url)\n      .then(() => {\n        alert('URL copied to clipboard!');\n      })\n      .catch(err => {\n        console.error('Failed to copy URL: ', err);\n      });\n  }\n\n  function downloadLogo(logoPath, logoName) {\n    const link = document.createElement('a');\n    link.href = logoPath;\n    link.download = logoName;\n    document.body.appendChild(link);\n    link.click();\n    document.body.removeChild(link);\n  }\n</script>\n\n<main class=\"container\">\n  <header>\n    <h1>Logo Gallery</h1>\n    <p>Collection of company and brand logos for your projects</p>\n\n    <div class=\"search-bar\">\n      <input\n        type=\"text\"\n        placeholder=\"Search logos...\"\n        bind:value={searchQuery}\n      />\n    </div>\n\n    <div class=\"view-toggle\">\n      <button\n        class:active={viewMode === 'grid'}\n        on:click={setGridView}\n      >\n        Grid View\n      </button>\n      <button\n        class:active={viewMode === 'list'}\n        on:click={setListView}\n      >\n        List View\n      </button>\n    </div>\n\n    <!-- Debug info to show current view mode -->\n    <div style=\"margin-bottom: 10px; font-size: 0.8rem; color: #666;\">\n      Current view: {viewMode}\n    </div>\n  </header>\n\n  <div class=\"logos-container\">\n    {#if viewMode === 'grid'}\n      <LogoGrid\n        logos={filteredLogos}\n        onCopy={copyUrl}\n        onDownload={downloadLogo}\n      />\n    {:else}\n      <LogoList\n        logos={filteredLogos}\n        onCopy={copyUrl}\n        onDownload={downloadLogo}\n      />\n    {/if}\n  </div>\n\n  <footer>\n    <p>© {new Date().getFullYear()} Logo Gallery. All logos are property of their respective owners.</p>\n  </footer>\n</main>\n\n<style>\n  header {\n    margin-bottom: 2rem;\n  }\n\n  h1 {\n    color: var(--secondary-color);\n    margin-bottom: 0.5rem;\n  }\n\n  p {\n    margin-bottom: 1.5rem;\n  }\n\n  footer {\n    margin-top: 3rem;\n    text-align: center;\n    font-size: 0.9rem;\n    color: #666;\n  }\n\n  .view-toggle {\n    display: flex;\n    gap: 0.5rem;\n    margin-bottom: 1rem;\n  }\n\n  .view-toggle button {\n    padding: 0.5rem 1rem;\n    background-color: #e0e0e0;\n    color: var(--text-color);\n    border: none;\n    border-radius: 4px;\n    font-size: 0.9rem;\n    transition: all 0.2s;\n  }\n\n  .active {\n    background-color: var(--secondary-color) !important;\n    color: white !important;\n    font-weight: bold;\n    box-shadow: 0 2px 5px rgba(0, 0, 0, 0.2);\n    transform: translateY(-2px);\n  }\n\n  .search-bar {\n    margin-bottom: 1.5rem;\n    width: 100%;\n    max-width: 500px;\n  }\n\n  .search-bar input {\n    width: 100%;\n    padding: 0.75rem;\n    border: 1px solid #ddd;\n    border-radius: 4px;\n    font-size: 1rem;\n  }\n\n  .logos-container {\n    width: 100%;\n  }\n</style>\n","<script>\n  import LogoModal from './LogoModal.svelte';\n\n  export let logos = [];\n  export let onCopy;\n  export let onDownload;\n\n  let showModal = false;\n  let selectedLogo = null;\n\n  function openPreview(logo) {\n    selectedLogo = logo;\n    showModal = true;\n  }\n\n  function closeModal() {\n    showModal = false;\n  }\n</script>\n\n<LogoModal show={showModal} logo={selectedLogo} on:close={closeModal} />\n\n<div class=\"logo-grid\">\n  {#each logos as logo}\n    <div class=\"logo-card\">\n      <div class=\"logo-image\"\n        role=\"button\"\n        tabindex=\"0\"\n        aria-label=\"Preview {logo.name}\"\n        on:click={() => openPreview(logo)}\n        on:keydown={(e) => (e.key === 'Enter' || e.key === ' ') && openPreview(logo)}\n        style=\"cursor:pointer;\"\n      >\n        <img src={logo.path} alt={logo.name} />\n      </div>\n      <div class=\"logo-info\">\n        <h3>{logo.name}</h3>\n        <p>Format: {logo.format}</p>\n        <div class=\"logo-actions\">\n          <button class=\"copy-btn\" on:click={() => onCopy(logo.path)}>\n            Copy URL\n          </button>\n          <button class=\"download-btn\" on:click={() => onDownload(logo.path, logo.name)}>\n            Download\n          </button>\n        </div>\n      </div>\n    </div>\n  {:else}\n    <p class=\"no-results\">No logos found matching your search criteria.</p>\n  {/each}\n</div>\n\n<style>\n  .logo-grid {\n    display: grid;\n    grid-template-columns: repeat(auto-fill, minmax(250px, 1fr));\n    gap: 1.5rem;\n  }\n\n  .logo-card {\n    background: var(--card-background);\n    border-radius: 8px;\n    overflow: hidden;\n    box-shadow: 0 2px 10px rgba(0, 0, 0, 0.1);\n    transition: transform 0.2s, box-shadow 0.2s;\n  }\n\n  .logo-card:hover {\n    transform: translateY(-5px);\n    box-shadow: 0 5px 15px rgba(0, 0, 0, 0.15);\n  }\n\n  .logo-image {\n    height: 160px;\n    width: 100%;\n    display: flex;\n    align-items: center;\n    justify-content: center;\n    padding: 1rem;\n    background-color: #f5f5f5;\n    position: relative;\n    overflow: hidden;\n    cursor: pointer;\n  }\n\n  .logo-image img {\n    max-width: 80%;\n    max-height: 80%;\n    width: auto !important;\n    height: auto !important;\n    object-fit: contain;\n    object-position: center;\n  }\n\n  .logo-info {\n    padding: 1rem;\n  }\n\n  .logo-info h3 {\n    margin-bottom: 0.5rem;\n    color: var(--secondary-color);\n  }\n\n  .logo-info p {\n    font-size: 0.9rem;\n    color: #666;\n    margin-bottom: 1rem;\n  }\n\n  .logo-actions {\n    display: flex;\n  }\n\n  .no-results {\n    grid-column: 1 / -1;\n    text-align: center;\n    padding: 2rem;\n    color: #666;\n  }\n</style>\n","<script>\n  import LogoModal from './LogoModal.svelte';\n\n  export let logos = [];\n  export let onCopy;\n  export let onDownload;\n\n  let showModal = false;\n  let selectedLogo = null;\n\n  function openPreview(logo) {\n    selectedLogo = logo;\n    showModal = true;\n  }\n\n  function closeModal() {\n    showModal = false;\n  }\n</script>\n\n<LogoModal show={showModal} logo={selectedLogo} on:close={closeModal} />\n\n<div class=\"logo-list\">\n  {#each logos as logo}\n    <div class=\"logo-item\">\n      <div class=\"logo-image\"\n        role=\"button\"\n        tabindex=\"0\"\n        aria-label=\"Preview {logo.name}\"\n        on:click={() => openPreview(logo)}\n        on:keydown={(e) => (e.key === 'Enter' || e.key === ' ') && openPreview(logo)}\n        style=\"cursor:pointer;\"\n      >\n        <img src={logo.path} alt={logo.name} />\n      </div>\n      <div class=\"logo-info\">\n        <h3>{logo.name}</h3>\n        <p>Format: {logo.format}</p>\n      </div>\n      <div class=\"logo-actions\">\n        <button class=\"copy-btn\" on:click={() => onCopy(logo.path)}>\n          Copy URL\n        </button>\n        <button class=\"download-btn\" on:click={() => onDownload(logo.path, logo.name)}>\n          Download\n        </button>\n      </div>\n    </div>\n  {:else}\n    <p class=\"no-results\">No logos found matching your search criteria.</p>\n  {/each}\n</div>\n\n<style>\n  .logo-list {\n    display: flex;\n    flex-direction: column;\n    gap: 1rem;\n  }\n\n  .logo-item {\n    display: flex;\n    align-items: center;\n    background: var(--card-background);\n    border-radius: 8px;\n    overflow: hidden;\n    box-shadow: 0 2px 10px rgba(0, 0, 0, 0.1);\n    transition: transform 0.2s, box-shadow 0.2s;\n    width: 100%;\n  }\n\n  .logo-item:hover {\n    transform: translateY(-2px);\n    box-shadow: 0 5px 15px rgba(0, 0, 0, 0.15);\n  }\n\n  .logo-image {\n    width: 120px;\n    min-width: 120px;\n    height: 100px;\n    padding: 0.5rem;\n    display: flex;\n    align-items: center;\n    justify-content: center;\n    background-color: #f5f5f5;\n    position: relative;\n    overflow: hidden;\n    border-right: 1px solid #eee;\n    cursor: pointer;\n  }\n\n  .logo-image img {\n    max-width: 80%;\n    max-height: 80%;\n    width: auto !important;\n    height: auto !important;\n    object-fit: contain;\n  }\n\n  .logo-info {\n    flex-grow: 1;\n    padding: 1rem;\n  }\n\n  .logo-info h3 {\n    margin-bottom: 0.5rem;\n    color: var(--secondary-color);\n    font-size: 1.2rem;\n  }\n\n  .logo-info p {\n    font-size: 0.9rem;\n    color: #666;\n  }\n\n  .logo-actions {\n    display: flex;\n    flex-direction: column;\n    gap: 0.5rem;\n    padding: 1rem;\n    min-width: 120px;\n    border-left: 1px solid #eee;\n  }\n\n  .logo-actions button {\n    padding: 0.4rem 0.8rem;\n    border: none;\n    border-radius: 4px;\n    cursor: pointer;\n    font-size: 0.9rem;\n    text-align: center;\n    transition: background-color 0.2s;\n  }\n\n  .copy-btn {\n    background-color: #f0f0f0;\n    color: #333;\n  }\n\n  .download-btn {\n    background-color: var(--secondary-color);\n    color: white;\n  }\n\n  .no-results {\n    text-align: center;\n    padding: 2rem;\n    color: #666;\n  }\n</style>\n"],"names":["window","__svelte","v","Set","add","legacy_mode_flag","UNINITIALIZED","Symbol","FILENAME","NAMESPACE_HTML","node_env","globalThis","process","env","NODE_ENV","DEV","toLowerCase","startsWith","is_array","Array","isArray","index_of","prototype","indexOf","array_from","from","define_property","Object","defineProperty","get_descriptor","getOwnPropertyDescriptor","get_descriptors","getOwnPropertyDescriptors","object_prototype","array_prototype","get_prototype_of","getPrototypeOf","run","fn","run_all","arr","i","length","BRANCH_EFFECT","BOUNDARY_EFFECT","UNOWNED","DISCONNECTED","CLEAN","DIRTY","MAYBE_DIRTY","INERT","DESTROYED","EFFECT_TRANSPARENT","INSPECT_EFFECT","EFFECT_HAS_DERIVED","EFFECT_IS_UPDATING","STATE_SYMBOL","LEGACY_PROPS","LOADING_ATTR_SYMBOL","bind_invalid_checkbox_value","error","Error","name","proxy","value","sources","Map","is_proxied_array","version","source","stack","reaction","active_reaction","with_parent","previous_reaction","set_active_reaction","result","set","Proxy","_","prop","descriptor","configurable","enumerable","writable","e.state_descriptors_fixed","s","get","undefined","deleteProperty","target","update_version","ls","n","Number","isInteger","receiver","exists","Reflect","has","active_effect","other_s","call","ownKeys","own_keys","filter","key","push","setPrototypeOf","e.state_prototype_fixed","signal","d","next_sibling_getter","create_text","document","createTextNode","get_first_child","node","first_child_getter","get_next_sibling","child","is_text","first_child","fragment","first","Comment","data","sibling","count","next_sibling","equals","this","safe_equals","a","b","derived","flags","DERIVED","parent_derived","f","ctx","component_context","deps","effects","reactions","rv","wv","parent","derived_safe_equal","destroy_derived_effects","destroy_effect","execute_derived","prev_active_effect","set_active_effect","get_derived_parent_effect","prev_inspect_effects","inspect_effects","set_inspect_effects","includes","e.derived_references_self","update_reaction","pop","update_derived","set_signal_status","skip_reaction","increment_write_version","validate_effect","rune","e.effect_orphan","e.effect_in_unowned_derived","is_destroying_effect","e.effect_in_teardown","create_effect","type","sync","effect","nodes_start","nodes_end","last","next","prev","teardown","transitions","component_function","dev_current_component_function","update_effect","e","schedule_effect","parent_effect","parent_last","push_effect","user_effect","defer","m","context","render_effect","template_effect","thunks","deriveds","map","block","RENDER_EFFECT","branch","execute_effect_teardown","previously_destroying_effect","set_is_destroying_effect","destroy_effect_children","remove_dom","removed","end","remove","remove_effect_dom","remove_reactions","transition","stop","unlink_effect","pause_effect","callback","pause_children","run_out_transitions","remaining","check","out","local","is_global","resume_effect","resume_children","check_dirtiness","in","micro_tasks","run_micro_tasks","tasks","queue_micro_task","queueMicrotask","handled_errors","WeakSet","is_throwing_error","is_flushing","last_scheduled_effect","is_updating_effect","queued_root_effects","dev_effect_stack","untracking","reaction_sources","new_deps","skipped_deps","untracked_writes","write_version","read_version","dependencies","is_unowned","dependency","is_disconnected","is_unowned_connected","should_rethrow_error","handle_error","previous_effect","component_stack","effect_name","current_context","filename","function","file","split","p","indent","message","join","lines","new_lines","line","current","propagate_error","schedule_possible_effect_self_invalidation","root","previous_deps","previous_skipped_deps","previous_untracked_writes","previous_skip_reaction","previous_reaction_sources","previous_component_context","previous_untracking","set_component_context","is_runes","remove_reaction","index","new_length","start_index","was_updating_effect","previous_component_fn","set_dev_current_component_function","destroy_block_effect_children","log_effect_stack","console","slice","infinite_loop_guard","e.effect_update_depth_exceeded","flush_queued_root_effects","flush_count","root_effects","flush_queued_effects","process_effects","old_values","clear","is_branch","is_derived","untrack","STATUS_MASK","status","deep_read","visited","EventTarget","Date","getTime","proto","descriptors","state","mutable_source","initial_value","immutable","l","should_proxy","e.state_unsafe_mutation","internal_set","old_value","mark_reactions","set_untracked_writes","size","inspects","runes","props","c","x","u","r1","r2","component","context_stack_item","component_effects","component_effect","listening_to_form_reset","without_reactive_context","listen_to_event_and_reset_event","element","event","handler","on_reset","addEventListener","__on_r","evt","Promise","resolve","then","defaultPrevented","elements","capture","create_event","event_name","dom","options","target_handler","handle_event_propagation","cancelBubble","passive","body","removeEventListener","handler_element","owner_document","ownerDocument","path","composedPath","current_target","path_idx","handled_at","__root","at_idx","handler_idx","throw_error","other_errors","parent_element","assignedSlot","parentNode","host","delegated","apply","currentTarget","assign_nodes","start","template","content","is_fragment","use_import_node","has_start","html","elem","createElement","innerHTML","clone","importNode","cloneNode","append","anchor","before","set_text","text","str","__t","nodeValue","if_block","root_index","hydrate_index","consequent_effect","alternate_effect","condition","has_branch","set_branch","flag","update_branch","new_condition","each","get_collection","get_key","render_fn","fallback_fn","items","appendChild","fallback","was_empty","each_array","collection","array","seen","to_animate","item","is_animated","should_update","matched","stashed","measure","update_item","unfix","delete","j","move","link","k","create_item","to_destroy","destroy_length","controlled_anchor","fix","items_map","is_controlled","parent_node","textContent","pause_effects","reconcile","reactive","debug","collection_index","dest","next_node","whitespace","set_class","is_html","hash","prev_classes","next_classes","__className","next_class_name","directives","classname","len","substring","to_class","removeAttribute","className","setAttribute","is_present","classList","toggle","IS_CUSTOM_ELEMENT","IS_HTML","set_attribute","attribute","skip_warning","attributes","__attributes","nodeName","namespaceURI","get_attributes","setters","setters_cache","element_proto","Element","get_setters","is_numberlike_input","input","to_number","init","callbacks","deep_read_state","changed","observe_all","fns","throw_rune_error","e.rune_outside_svelte","is_store_binding","has_destroyed_component_ctx","current_value","prop_value","bindable","lazy","is_store_sub","previous_is_store_binding","capture_store_binding","getter","is_entry_props","setter","fallback_value","fallback_dirty","fallback_used","get_fallback","e.props_invalid_value","derived_getter","legacy_parent","$$legacy","mutation","arguments","from_child","inner_current_value","parent_value","child_value","new_value","show","logo","close","handleKeydown","frag","createDocumentFragment","createComment","$.set_text","$.set_attribute","img","text_1","format","text_2","$.event","div_4","$$render","consequent","app","viewMode","searchQuery","logos","$.mutable_source","filteredLogos","copyUrl","logoPath","url","location","origin","navigator","clipboard","writeText","alert","catch","err","downloadLogo","logoName","href","download","click","removeChild","token","$.set","$.get","ran","$.prop","$$props","onCopy","onDownload","showModal","selectedLogo","openPreview","div_2","button_1","alternate","active","getFullYear","is_reset","e.bind_invalid_checkbox_value","defaultValue","selectionStart","selectionEnd","Math","min","$.bind_value","$$value","log","getElementById"],"mappings":"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"}